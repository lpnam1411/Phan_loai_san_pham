

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sat Jun 04 17:21:34 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184                           
   185                           	psect	idataBANK0
   186  0354                     __pidataBANK0:
   187                           
   188                           ;initializer for _B_rate
   189  0354  3480               	retlw	128
   190  0355  3425               	retlw	37
   191                           
   192                           ;initializer for _flag_dc
   193  0356  3401               	retlw	1
   194  000E                     _TMR1	set	14
   195  0019                     _TXREG	set	25
   196  0015                     _CCPR1L	set	21
   197  001E                     _ADRESH	set	30
   198  001A                     _RCREG	set	26
   199  000E                     _TMR1L	set	14
   200  000F                     _TMR1H	set	15
   201  00C6                     _RX9	set	198
   202  005E                     _PEIE	set	94
   203  00C4                     _CREN	set	196
   204  00C7                     _SPEN	set	199
   205  00BD                     _CCP1X	set	189
   206  00BC                     _CCP1Y	set	188
   207  0092                     _TMR2ON	set	146
   208  0091                     _T2CKPS1	set	145
   209  0090                     _T2CKPS0	set	144
   210  00BB                     _CCP1M3	set	187
   211  00BA                     _CCP1M2	set	186
   212  00FA                     _GO_DONE	set	250
   213  00FD                     _CHS2	set	253
   214  00FC                     _CHS1	set	252
   215  00FB                     _CHS0	set	251
   216  00F8                     _ADON	set	248
   217  00FF                     _ADCS1	set	255
   218  00FE                     _ADCS0	set	254
   219  0065                     _RCIF	set	101
   220  0059                     _INTF	set	89
   221  0042                     _RD2	set	66
   222  0041                     _RD1	set	65
   223  003D                     _RC5	set	61
   224  0035                     _RB5	set	53
   225  0034                     _RB4	set	52
   226  002D                     _RA5	set	45
   227  002C                     _RA4	set	44
   228  002B                     _RA3	set	43
   229  005F                     _GIE	set	95
   230  005C                     _INTE	set	92
   231  0080                     _TMR1ON	set	128
   232  0085                     _T1CKPS1	set	133
   233  0084                     _T1CKPS0	set	132
   234  0081                     _TMR1CS	set	129
   235  0060                     _TMR1IF	set	96
   236  0099                     _SPBRG	set	153
   237  0092                     _PR2	set	146
   238  009E                     _ADRESL	set	158
   239  04C6                     _TX9	set	1222
   240  0465                     _RCIE	set	1125
   241  04C5                     _TXEN	set	1221
   242  043F                     _TRISC7	set	1087
   243  043E                     _TRISC6	set	1086
   244  04C4                     _SYNC	set	1220
   245  04C2                     _BRGH	set	1218
   246  04C1                     _TRMT	set	1217
   247  043A                     _TRISC2	set	1082
   248  04FB                     _PCFG3	set	1275
   249  04FA                     _PCFG2	set	1274
   250  04F9                     _PCFG1	set	1273
   251  04F8                     _PCFG0	set	1272
   252  04FE                     _ADCS2	set	1278
   253  04FF                     _ADFM	set	1279
   254  0435                     _TRISB5	set	1077
   255  0434                     _TRISB4	set	1076
   256  042D                     _TRISA5	set	1069
   257  042C                     _TRISA4	set	1068
   258  042B                     _TRISA3	set	1067
   259  0440                     _TRISD0	set	1088
   260  040E                     _INTEDG	set	1038
   261  043D                     _TRISC5	set	1085
   262  043B                     _TRISC3	set	1083
   263  0428                     _TRISA0	set	1064
   264  0430                     _TRISB0	set	1072
   265  0460                     _TMR1IE	set	1120
   266  010C                     _EEDATA	set	268
   267  010D                     _EEADR	set	269
   268  018D                     _EECON2	set	397
   269  018C                     _EECON1bits	set	396
   270  0C61                     _WR	set	3169
   271  0C67                     _EEPGD	set	3175
   272                           
   273                           	psect	strings
   274  033B                     __pstrings:
   275  033B                     stringtab:
   276  033B                     __stringtab:
   277  033B                     stringcode:	
   278                           ;	String table - string pointers are 1 byte each
   279                           
   280  033B                     stringdir:
   281  033B  3003               	movlw	high stringdir
   282  033C  008A               	movwf	10
   283  033D  0804               	movf	4,w
   284  033E  0A84               	incf	4,f
   285  033F  0782               	addwf	2,f
   286  0340                     __stringbase:
   287  0340  3400               	retlw	0
   288  0341                     __end_of__stringtab:
   289  0341                     STR_1:
   290  0341  3463               	retlw	99	;'c'
   291  0342  3468               	retlw	104	;'h'
   292  0343  3465               	retlw	101	;'e'
   293  0344  3463               	retlw	99	;'c'
   294  0345  346B               	retlw	107	;'k'
   295  0346  340A               	retlw	10
   296  0347  3400               	retlw	0
   297                           
   298                           	psect	cinit
   299  0015                     start_initialization:	
   300                           ; #config settings
   301                           
   302  0015                     __initialization:
   303                           
   304                           ; Initialize objects allocated to BANK0
   305  0015  120A  118A  2354  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   306  001A  00B6               	movwf	__pdataBANK0& (0+127)
   307  001B  120A  118A  2355  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   308  0020  00B7               	movwf	(__pdataBANK0+1)& (0+127)
   309  0021  120A  118A  2356  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   310  0026  00B8               	movwf	(__pdataBANK0+2)& (0+127)
   311                           
   312                           ; Clear objects allocated to BANK0
   313  0027  01B2               	clrf	__pbssBANK0& (0+127)
   314  0028  01B3               	clrf	(__pbssBANK0+1)& (0+127)
   315  0029  01B4               	clrf	(__pbssBANK0+2)& (0+127)
   316  002A  01B5               	clrf	(__pbssBANK0+3)& (0+127)
   317                           
   318                           ; Clear objects allocated to COMMON
   319  002B  01FA               	clrf	__pbssCOMMON& (0+127)
   320  002C  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   321  002D  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   322  002E  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   323  002F                     end_of_initialization:	
   324                           ;End of C runtime variable initialization code
   325                           
   326  002F                     __end_of__initialization:
   327  002F  0183               	clrf	3
   328  0030  120A  118A  2833   	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMMON
   331  007A                     __pbssCOMMON:
   332  007A                     _count_sp3:
   333  007A                     	ds	1
   334  007B                     _count_sp2:
   335  007B                     	ds	1
   336  007C                     _result:
   337  007C                     	ds	1
   338  007D                     _counter0:
   339  007D                     	ds	1
   340                           
   341                           	psect	bssBANK0
   342  0032                     __pbssBANK0:
   343  0032                     _count_sp1:
   344  0032                     	ds	1
   345  0033                     _flag_trans:
   346  0033                     	ds	1
   347  0034                     _flag_timer_servor2:
   348  0034                     	ds	1
   349  0035                     _flag_timer_servor1:
   350  0035                     	ds	1
   351                           
   352                           	psect	dataBANK0
   353  0036                     __pdataBANK0:
   354  0036                     _B_rate:
   355  0036                     	ds	2
   356  0038                     _flag_dc:
   357  0038                     	ds	1
   358                           
   359                           	psect	cstackCOMMON
   360  0070                     __pcstackCOMMON:
   361  0070                     ?_ADC_Init:
   362  0070                     ?_init_PWM:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_config_UART:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_EEPROM_Read:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_UART_send_string:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_main:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_ISR:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_UART_send_char:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ??_UART_send_char:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?i1_EEPROM_Write:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?i1_ADC_Read:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     UART_send_char@bt:	
   393                           ; 2 bytes @ 0x0
   394                           
   395  0070                     i1EEPROM_Write@Data:	
   396                           ; 1 bytes @ 0x0
   397                           
   398                           
   399                           ; 1 bytes @ 0x0
   400  0070                     	ds	1
   401  0071                     ??_UART_send_string:
   402  0071                     ??i1_EEPROM_Write:	
   403                           ; 1 bytes @ 0x1
   404                           
   405  0071                     i1EEPROM_Write@Address:	
   406                           ; 1 bytes @ 0x1
   407                           
   408                           
   409                           ; 1 bytes @ 0x1
   410  0071                     	ds	1
   411  0072                     ??i1_ADC_Read:
   412  0072                     UART_send_string@st_pt:	
   413                           ; 1 bytes @ 0x2
   414                           
   415                           
   416                           ; 1 bytes @ 0x2
   417  0072                     	ds	1
   418  0073                     i1ADC_Read@result:
   419                           
   420                           ; 2 bytes @ 0x3
   421  0073                     	ds	2
   422  0075                     i1ADC_Read@ADC_channel:
   423                           
   424                           ; 1 bytes @ 0x5
   425  0075                     	ds	1
   426  0076                     ?i1_setPWM_DutyCycle:
   427  0076                     i1setPWM_DutyCycle@DC:	
   428                           ; 1 bytes @ 0x6
   429                           
   430                           
   431                           ; 2 bytes @ 0x6
   432  0076                     	ds	2
   433  0078                     ??i1_setPWM_DutyCycle:
   434                           
   435                           ; 1 bytes @ 0x8
   436  0078                     	ds	2
   437                           
   438                           	psect	cstackBANK0
   439  0020                     __pcstackBANK0:
   440  0020                     ??_ISR:
   441                           
   442                           ; 1 bytes @ 0x0
   443  0020                     	ds	5
   444  0025                     ??_ADC_Init:
   445  0025                     ??_init_PWM:	
   446                           ; 1 bytes @ 0x5
   447                           
   448  0025                     ??_config_UART:	
   449                           ; 1 bytes @ 0x5
   450                           
   451  0025                     ??_EEPROM_Read:	
   452                           ; 1 bytes @ 0x5
   453                           
   454  0025                     ?_EEPROM_Write:	
   455                           ; 1 bytes @ 0x5
   456                           
   457  0025                     ?_ADC_Read:	
   458                           ; 1 bytes @ 0x5
   459                           
   460  0025                     EEPROM_Read@Address:	
   461                           ; 2 bytes @ 0x5
   462                           
   463  0025                     EEPROM_Write@Data:	
   464                           ; 1 bytes @ 0x5
   465                           
   466                           
   467                           ; 1 bytes @ 0x5
   468  0025                     	ds	1
   469  0026                     ??_EEPROM_Write:
   470  0026                     EEPROM_Write@Address:	
   471                           ; 1 bytes @ 0x6
   472                           
   473                           
   474                           ; 1 bytes @ 0x6
   475  0026                     	ds	1
   476  0027                     ??_ADC_Read:
   477                           
   478                           ; 1 bytes @ 0x7
   479  0027                     	ds	1
   480  0028                     ADC_Read@result:
   481                           
   482                           ; 2 bytes @ 0x8
   483  0028                     	ds	2
   484  002A                     ADC_Read@ADC_channel:
   485                           
   486                           ; 1 bytes @ 0xA
   487  002A                     	ds	1
   488  002B                     ?_setPWM_DutyCycle:
   489  002B                     setPWM_DutyCycle@DC:	
   490                           ; 1 bytes @ 0xB
   491                           
   492                           
   493                           ; 2 bytes @ 0xB
   494  002B                     	ds	2
   495  002D                     ??_setPWM_DutyCycle:
   496                           
   497                           ; 1 bytes @ 0xD
   498  002D                     	ds	2
   499  002F                     ??_main:
   500                           
   501                           ; 1 bytes @ 0xF
   502  002F                     	ds	3
   503                           
   504                           	psect	maintext
   505  0033                     __pmaintext:	
   506 ;;
   507 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   508 ;;
   509 ;; *************** function _main *****************
   510 ;; Defined at:
   511 ;;		line 60 in file "final.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;  tmp             1    0        unsigned char 
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : B00/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   525 ;;      Params:         0       0       0       0       0
   526 ;;      Locals:         0       0       0       0       0
   527 ;;      Temps:          0       3       0       0       0
   528 ;;      Totals:         0       3       0       0       0
   529 ;;Total ram usage:        3 bytes
   530 ;; Hardware stack levels required when called:    4
   531 ;; This function calls:
   532 ;;		_ADC_Init
   533 ;;		_ADC_Read
   534 ;;		_EEPROM_Read
   535 ;;		_EEPROM_Write
   536 ;;		_config_UART
   537 ;;		_init_PWM
   538 ;;		_setPWM_DutyCycle
   539 ;; This function is called by:
   540 ;;		Startup code after reset
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           
   545                           ;psect for function _main
   546  0033                     _main:
   547  0033                     l1308:	
   548                           ;incstack = 0
   549                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   550                           
   551                           
   552                           ;final.c: 63:     TMR1CS = 0;
   553  0033  120A  118A  232D  120A  118A  	fcall	_ADC_Init
   554  0038                     l1310:
   555                           
   556                           ;final.c: 65:     T1CKPS0 = 0;
   557  0038  120A  118A  2247  120A  118A  	fcall	_init_PWM
   558  003D                     l1312:
   559                           
   560                           ;final.c: 68:     TMR1H = 0xBE;
   561  003D  120A  118A  22B6  120A  118A  	fcall	_config_UART
   562  0042                     l1314:
   563                           
   564                           ;final.c: 71:     TMR1ON = 1;;final.c: 72: 
   565  0042  3000               	movlw	0
   566  0043  120A  118A  231E  120A  118A  	fcall	_EEPROM_Read
   567  0048  1283               	bcf	3,5	;RP0=0, select bank0
   568  0049  1303               	bcf	3,6	;RP1=0, select bank0
   569  004A  00AF               	movwf	??_main
   570  004B  082F               	movf	??_main,w
   571  004C  00B2               	movwf	_count_sp1
   572  004D                     l1316:
   573                           
   574                           ;final.c: 73: 
   575  004D  3001               	movlw	1
   576  004E  120A  118A  231E  120A  118A  	fcall	_EEPROM_Read
   577  0053  1283               	bcf	3,5	;RP0=0, select bank0
   578  0054  1303               	bcf	3,6	;RP1=0, select bank0
   579  0055  00AF               	movwf	??_main
   580  0056  082F               	movf	??_main,w
   581  0057  00FB               	movwf	_count_sp2
   582  0058                     l1318:
   583                           
   584                           ;final.c: 74:     TRISB0 = 1;
   585  0058  3002               	movlw	2
   586  0059  120A  118A  231E  120A  118A  	fcall	_EEPROM_Read
   587  005E  1283               	bcf	3,5	;RP0=0, select bank0
   588  005F  1303               	bcf	3,6	;RP1=0, select bank0
   589  0060  00AF               	movwf	??_main
   590  0061  082F               	movf	??_main,w
   591  0062  00FA               	movwf	_count_sp3
   592  0063                     l1320:
   593                           
   594                           ;final.c: 77:     TRISC5 = 0;
   595  0063  1683               	bsf	3,5	;RP0=1, select bank1
   596  0064  1303               	bcf	3,6	;RP1=0, select bank1
   597  0065  140C               	bsf	12,0	;volatile
   598  0066                     l1322:
   599                           
   600                           ;final.c: 78: 
   601  0066  1283               	bcf	3,5	;RP0=0, select bank0
   602  0067  1303               	bcf	3,6	;RP1=0, select bank0
   603  0068  100C               	bcf	12,0	;volatile
   604  0069                     l1324:
   605                           
   606                           ;final.c: 80:     INTE = 1;
   607  0069  018E               	clrf	14	;volatile
   608  006A  018F               	clrf	15	;volatile
   609  006B                     l1326:
   610                           
   611                           ;final.c: 82: 
   612  006B  1090               	bcf	16,1	;volatile
   613  006C                     l1328:
   614                           
   615                           ;final.c: 84:     TRISA3 = 0;
   616  006C  1210               	bcf	16,4	;volatile
   617  006D                     l1330:
   618                           
   619                           ;final.c: 85:     TRISA4 = 0;
   620  006D  1290               	bcf	16,5	;volatile
   621  006E                     l1332:
   622                           
   623                           ;final.c: 87:     RA3 = 1;
   624  006E  30BE               	movlw	190
   625  006F  008F               	movwf	15	;volatile
   626  0070                     l1334:
   627                           
   628                           ;final.c: 88:     RA4 = 1;
   629  0070  30E4               	movlw	228
   630  0071  008E               	movwf	14	;volatile
   631  0072                     l1336:
   632                           
   633                           ;final.c: 90: 
   634  0072  1410               	bsf	16,0	;volatile
   635  0073                     l1338:
   636                           
   637                           ;final.c: 93:     RB4 = 0;
   638  0073  1683               	bsf	3,5	;RP0=1, select bank1
   639  0074  1303               	bcf	3,6	;RP1=0, select bank1
   640  0075  1406               	bsf	6,0	;volatile
   641  0076                     l1340:
   642                           
   643                           ;final.c: 94:     RB5 =0;
   644  0076  1405               	bsf	5,0	;volatile
   645  0077                     l1342:
   646                           
   647                           ;final.c: 95: 
   648  0077  1187               	bcf	7,3	;volatile
   649  0078                     l1344:
   650                           
   651                           ;final.c: 96: 
   652  0078  1287               	bcf	7,5	;volatile
   653  0079                     l1346:
   654                           
   655                           ;final.c: 98: 
   656  0079  1701               	bsf	1,6	;volatile
   657  007A                     l1348:
   658                           
   659                           ;final.c: 99:     RC5 = flag_dc;
   660  007A  160B               	bsf	11,4	;volatile
   661  007B                     l1350:
   662                           
   663                           ;final.c: 100:     setPWM_DutyCycle(ADC_Read(0));
   664  007B  178B               	bsf	11,7	;volatile
   665  007C                     l1352:
   666                           
   667                           ;final.c: 102: 
   668  007C  1408               	bsf	8,0	;volatile
   669  007D                     l1354:
   670                           
   671                           ;final.c: 103: 
   672  007D  1185               	bcf	5,3	;volatile
   673  007E                     l1356:
   674                           
   675                           ;final.c: 104: 
   676  007E  1205               	bcf	5,4	;volatile
   677  007F                     l1358:
   678                           
   679                           ;final.c: 105:     if(RD1==0){
   680  007F  1285               	bcf	5,5	;volatile
   681  0080                     l1360:
   682                           
   683                           ;final.c: 106:             RB5 = 1;
   684  0080  1283               	bcf	3,5	;RP0=0, select bank0
   685  0081  1303               	bcf	3,6	;RP1=0, select bank0
   686  0082  1585               	bsf	5,3	;volatile
   687  0083                     l1362:
   688                           
   689                           ;final.c: 107:             _delay((unsigned long)((100)*(20000000/4000.0)));
   690  0083  1605               	bsf	5,4	;volatile
   691  0084                     l1364:
   692                           
   693                           ;final.c: 108:             if(RD1==1){
   694  0084  1685               	bsf	5,5	;volatile
   695  0085                     l1366:
   696                           
   697                           ;final.c: 110:             EEPROM_Write(0x02,count_sp1);
   698  0085  1683               	bsf	3,5	;RP0=1, select bank1
   699  0086  1303               	bcf	3,6	;RP1=0, select bank1
   700  0087  1206               	bcf	6,4	;volatile
   701  0088                     l1368:
   702                           
   703                           ;final.c: 111:             }
   704  0088  1286               	bcf	6,5	;volatile
   705  0089                     l1370:
   706                           
   707                           ;final.c: 112:         }
   708  0089  1283               	bcf	3,5	;RP0=0, select bank0
   709  008A  1303               	bcf	3,6	;RP1=0, select bank0
   710  008B  1206               	bcf	6,4	;volatile
   711  008C                     l1372:
   712                           
   713                           ;final.c: 113:         else{
   714  008C  1286               	bcf	6,5	;volatile
   715  008D                     l1374:
   716                           
   717                           ;final.c: 118:             if(RD2==1){
   718  008D  1283               	bcf	3,5	;RP0=0, select bank0
   719  008E  1303               	bcf	3,6	;RP1=0, select bank0
   720  008F  1838               	btfsc	_flag_dc,0
   721  0090  2892               	goto	u701
   722  0091  2896               	goto	u700
   723  0092                     u701:
   724  0092  1283               	bcf	3,5	;RP0=0, select bank0
   725  0093  1303               	bcf	3,6	;RP1=0, select bank0
   726  0094  1687               	bsf	7,5	;volatile
   727  0095  2899               	goto	u714
   728  0096                     u700:
   729  0096  1283               	bcf	3,5	;RP0=0, select bank0
   730  0097  1303               	bcf	3,6	;RP1=0, select bank0
   731  0098  1287               	bcf	7,5	;volatile
   732  0099                     u714:
   733  0099                     l1376:
   734                           
   735                           ;final.c: 119: 
   736  0099  3000               	movlw	0
   737  009A  120A  118A  21A3  120A  118A  	fcall	_ADC_Read
   738  009F  1283               	bcf	3,5	;RP0=0, select bank0
   739  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   740  00A1  0826               	movf	?_ADC_Read+1,w
   741  00A2  00AC               	movwf	setPWM_DutyCycle@DC+1
   742  00A3  0825               	movf	?_ADC_Read,w
   743  00A4  00AB               	movwf	setPWM_DutyCycle@DC
   744  00A5  120A  118A  22EC  120A  118A  	fcall	_setPWM_DutyCycle
   745  00AA                     l1378:
   746                           
   747                           ;final.c: 124: }
   748  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   749  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   750  00AC  1888               	btfsc	8,1	;volatile
   751  00AD  28AF               	goto	u721
   752  00AE  28B0               	goto	u720
   753  00AF                     u721:
   754  00AF  28D4               	goto	l200
   755  00B0                     u720:
   756  00B0                     l1380:
   757                           
   758                           ;final.c: 125: 
   759  00B0  1686               	bsf	6,5	;volatile
   760  00B1                     l1382:
   761                           
   762                           ;final.c: 126: }
   763  00B1  3003               	movlw	3
   764  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   765  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   766  00B4  00B1               	movwf	??_main+2
   767  00B5  308A               	movlw	138
   768  00B6  00B0               	movwf	??_main+1
   769  00B7  3055               	movlw	85
   770  00B8  00AF               	movwf	??_main
   771  00B9                     u837:
   772  00B9  0BAF               	decfsz	??_main,f
   773  00BA  28B9               	goto	u837
   774  00BB  0BB0               	decfsz	??_main+1,f
   775  00BC  28B9               	goto	u837
   776  00BD  0BB1               	decfsz	??_main+2,f
   777  00BE  28B9               	goto	u837
   778  00BF                     l1384:
   779                           
   780                           ;final.c: 127: 
   781  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   782  00C0  1303               	bcf	3,6	;RP1=0, select bank0
   783  00C1  1C88               	btfss	8,1	;volatile
   784  00C2  28C4               	goto	u731
   785  00C3  28C5               	goto	u730
   786  00C4                     u731:
   787  00C4  28D5               	goto	l202
   788  00C5                     u730:
   789  00C5                     l1386:
   790                           
   791                           ;final.c: 128: 
   792  00C5  3001               	movlw	1
   793  00C6  00AF               	movwf	??_main
   794  00C7  082F               	movf	??_main,w
   795  00C8  07B2               	addwf	_count_sp1,f
   796  00C9                     l1388:
   797                           
   798                           ;final.c: 129: void __attribute__((picinterrupt(("")))) ISR(void){
   799  00C9  0832               	movf	_count_sp1,w
   800  00CA  00AF               	movwf	??_main
   801  00CB  082F               	movf	??_main,w
   802  00CC  00A5               	movwf	EEPROM_Write@Data
   803  00CD  3002               	movlw	2
   804  00CE  120A  118A  2274  120A  118A  	fcall	_EEPROM_Write
   805  00D3  28D5               	goto	l202
   806  00D4                     l200:	
   807                           ;final.c: 132:         counter0 ++;
   808                           
   809                           
   810                           ;final.c: 133:         if (counter0 == 60 ){
   811  00D4  1286               	bcf	6,5	;volatile
   812  00D5                     l202:	
   813                           ;final.c: 134:             counter0 = 0;
   814                           
   815                           
   816                           ;final.c: 135:         }
   817  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   818  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   819  00D7  1908               	btfsc	8,2	;volatile
   820  00D8  28DA               	goto	u741
   821  00D9  28DB               	goto	u740
   822  00DA                     u741:
   823  00DA  288D               	goto	l1374
   824  00DB                     u740:
   825  00DB                     l1390:
   826                           
   827                           ;final.c: 136: 
   828  00DB  3003               	movlw	3
   829  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   830  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   831  00DE  00B1               	movwf	??_main+2
   832  00DF  308A               	movlw	138
   833  00E0  00B0               	movwf	??_main+1
   834  00E1  3055               	movlw	85
   835  00E2  00AF               	movwf	??_main
   836  00E3                     u847:
   837  00E3  0BAF               	decfsz	??_main,f
   838  00E4  28E3               	goto	u847
   839  00E5  0BB0               	decfsz	??_main+1,f
   840  00E6  28E3               	goto	u847
   841  00E7  0BB1               	decfsz	??_main+2,f
   842  00E8  28E3               	goto	u847
   843  00E9                     l1392:
   844                           
   845                           ;final.c: 137:         TMR1H = 0xFD;
   846  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   847  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   848  00EB  1D08               	btfss	8,2	;volatile
   849  00EC  28EE               	goto	u751
   850  00ED  28EF               	goto	u750
   851  00EE                     u751:
   852  00EE  288D               	goto	l1374
   853  00EF                     u750:
   854  00EF                     l1394:
   855                           
   856                           ;final.c: 139:         TMR1IF = 0;
   857  00EF  3001               	movlw	1
   858  00F0  02B2               	subwf	_count_sp1,f
   859  00F1                     l1396:
   860                           
   861                           ;final.c: 140:     }
   862  00F1  0832               	movf	_count_sp1,w
   863  00F2  00AF               	movwf	??_main
   864  00F3  082F               	movf	??_main,w
   865  00F4  00A5               	movwf	EEPROM_Write@Data
   866  00F5  3002               	movlw	2
   867  00F6  120A  118A  2274  120A  118A  	fcall	_EEPROM_Write
   868  00FB  288D               	goto	l1374
   869  00FC  120A  118A  2812   	ljmp	start
   870  00FF                     __end_of_main:
   871                           
   872                           	psect	text1
   873  02EC                     __ptext1:	
   874 ;; *************** function _setPWM_DutyCycle *****************
   875 ;; Defined at:
   876 ;;		line 271 in file "final.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  DC              2   11[BANK0 ] unsigned int 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;		None
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, status,2, status,0
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   890 ;;      Params:         0       2       0       0       0
   891 ;;      Locals:         0       0       0       0       0
   892 ;;      Temps:          0       2       0       0       0
   893 ;;      Totals:         0       4       0       0       0
   894 ;;Total ram usage:        4 bytes
   895 ;; Hardware stack levels used:    1
   896 ;; Hardware stack levels required when called:    3
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           
   905                           ;psect for function _setPWM_DutyCycle
   906  02EC                     _setPWM_DutyCycle:
   907  02EC                     l1240:	
   908                           ;incstack = 0
   909                           ; Regs used in _setPWM_DutyCycle: [wreg+status,2+status,0]
   910                           
   911                           
   912                           ;final.c: 275: void config_UART(){
   913  02EC  1283               	bcf	3,5	;RP0=0, select bank0
   914  02ED  1303               	bcf	3,6	;RP1=0, select bank0
   915  02EE  182B               	btfsc	setPWM_DutyCycle@DC,0
   916  02EF  2AF1               	goto	u531
   917  02F0  2AF5               	goto	u530
   918  02F1                     u531:
   919  02F1  1283               	bcf	3,5	;RP0=0, select bank0
   920  02F2  1303               	bcf	3,6	;RP1=0, select bank0
   921  02F3  1617               	bsf	23,4	;volatile
   922  02F4  2AF8               	goto	u544
   923  02F5                     u530:
   924  02F5  1283               	bcf	3,5	;RP0=0, select bank0
   925  02F6  1303               	bcf	3,6	;RP1=0, select bank0
   926  02F7  1217               	bcf	23,4	;volatile
   927  02F8                     u544:
   928                           
   929                           ;final.c: 276: 
   930  02F8  1297               	bcf	23,5	;volatile
   931  02F9                     l1242:
   932                           
   933                           ;final.c: 278:     SPBRG = 129;
   934  02F9  082C               	movf	setPWM_DutyCycle@DC+1,w
   935  02FA  00AE               	movwf	??_setPWM_DutyCycle+1
   936  02FB  082B               	movf	setPWM_DutyCycle@DC,w
   937  02FC  00AD               	movwf	??_setPWM_DutyCycle
   938  02FD  1003               	clrc
   939  02FE  0CAE               	rrf	??_setPWM_DutyCycle+1,f
   940  02FF  0CAD               	rrf	??_setPWM_DutyCycle,f
   941  0300  1003               	clrc
   942  0301  0CAE               	rrf	??_setPWM_DutyCycle+1,f
   943  0302  0CAD               	rrf	??_setPWM_DutyCycle,f
   944  0303  082D               	movf	??_setPWM_DutyCycle,w
   945  0304  0095               	movwf	21	;volatile
   946  0305                     l242:
   947  0305  0008               	return
   948  0306                     __end_of_setPWM_DutyCycle:
   949                           
   950                           	psect	text2
   951  0247                     __ptext2:	
   952 ;; *************** function _init_PWM *****************
   953 ;; Defined at:
   954 ;;		line 253 in file "final.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;		None
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   968 ;;      Params:         0       0       0       0       0
   969 ;;      Locals:         0       0       0       0       0
   970 ;;      Temps:          0       0       0       0       0
   971 ;;      Totals:         0       0       0       0       0
   972 ;;Total ram usage:        0 bytes
   973 ;; Hardware stack levels used:    1
   974 ;; Hardware stack levels required when called:    3
   975 ;; This function calls:
   976 ;;		Nothing
   977 ;; This function is called by:
   978 ;;		_main
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           
   983                           ;psect for function _init_PWM
   984  0247                     _init_PWM:
   985  0247                     l1180:	
   986                           ;incstack = 0
   987                           ; Regs used in _init_PWM: [wreg-fsr0h+status,2+status,0]
   988                           
   989                           
   990                           ;final.c: 255: 
   991  0247  1283               	bcf	3,5	;RP0=0, select bank0
   992  0248  1303               	bcf	3,6	;RP1=0, select bank0
   993  0249  1517               	bsf	23,2	;volatile
   994                           
   995                           ;final.c: 256:     CCP1Y = DC & (1<<0);
   996  024A  1597               	bsf	23,3	;volatile
   997                           
   998                           ;final.c: 258: 
   999  024B  1683               	bsf	3,5	;RP0=1, select bank1
  1000  024C  1303               	bcf	3,6	;RP1=0, select bank1
  1001  024D  1107               	bcf	7,2	;volatile
  1002                           
  1003                           ;final.c: 260: }
  1004  024E  2A5D               	goto	l1182
  1005  024F                     l235:	
  1006                           ;final.c: 261: 
  1007                           
  1008  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0251  1012               	bcf	18,0	;volatile
  1011  0252  1092               	bcf	18,1	;volatile
  1012  0253  2A6D               	goto	l236
  1013  0254                     l237:	
  1014                           ;final.c: 262: 
  1015                           
  1016  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1017  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1018  0256  1412               	bsf	18,0	;volatile
  1019  0257  1092               	bcf	18,1	;volatile
  1020  0258  2A6D               	goto	l236
  1021  0259                     l238:	
  1022                           ;final.c: 263: void UART_send_char(char bt)
  1023                           
  1024  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1025  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1026  025B  1092               	bcf	18,1	;volatile
  1027                           
  1028                           ;final.c: 264: {
  1029  025C  2A6D               	goto	l236
  1030  025D                     l1182:
  1031                           
  1032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1033                           ; Switch size 1, requested type "simple"
  1034                           ; Number of cases is 1, Range of values is 0 to 0
  1035                           ; switch strategies available:
  1036                           ; Name         Instructions Cycles
  1037                           ; simple_byte            4     3 (average)
  1038                           ; direct_byte           11     8 (fixed)
  1039                           ; jumptable            260     6 (fixed)
  1040                           ;	Chosen strategy is simple_byte
  1041  025D  3000               	movlw	0
  1042  025E  3A00               	xorlw	0	; case 0
  1043  025F  1903               	skipnz
  1044  0260  2A62               	goto	l1490
  1045  0261  2A6D               	goto	l236
  1046  0262                     l1490:
  1047                           
  1048                           ; Switch size 1, requested type "simple"
  1049                           ; Number of cases is 3, Range of values is 1 to 16
  1050                           ; switch strategies available:
  1051                           ; Name         Instructions Cycles
  1052                           ; simple_byte           10     6 (average)
  1053                           ; direct_byte           59    11 (fixed)
  1054                           ; jumptable            263     9 (fixed)
  1055                           ;	Chosen strategy is simple_byte
  1056  0262  3001               	movlw	1
  1057  0263  3A01               	xorlw	1	; case 1
  1058  0264  1903               	skipnz
  1059  0265  2A4F               	goto	l235
  1060  0266  3A05               	xorlw	5	; case 4
  1061  0267  1903               	skipnz
  1062  0268  2A54               	goto	l237
  1063  0269  3A14               	xorlw	20	; case 16
  1064  026A  1903               	skipnz
  1065  026B  2A59               	goto	l238
  1066  026C  2A6D               	goto	l236
  1067  026D                     l236:
  1068                           
  1069                           ;final.c: 265:     while(!TRMT);
  1070  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1071  026E  1512               	bsf	18,2	;volatile
  1072  026F                     l1184:
  1073                           
  1074                           ;final.c: 267: }
  1075  026F  30F0               	movlw	240
  1076  0270  1683               	bsf	3,5	;RP0=1, select bank1
  1077  0271  1303               	bcf	3,6	;RP1=0, select bank1
  1078  0272  0092               	movwf	18	;volatile
  1079  0273                     l239:
  1080  0273  0008               	return
  1081  0274                     __end_of_init_PWM:
  1082                           
  1083                           	psect	text3
  1084  02B6                     __ptext3:	
  1085 ;; *************** function _config_UART *****************
  1086 ;; Defined at:
  1087 ;;		line 294 in file "final.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1101 ;;      Params:         0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0
  1104 ;;      Totals:         0       0       0       0       0
  1105 ;;Total ram usage:        0 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    3
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_main
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           
  1116                           ;psect for function _config_UART
  1117  02B6                     _config_UART:
  1118  02B6                     l1190:	
  1119                           ;incstack = 0
  1120                           ; Regs used in _config_UART: [wreg]
  1121                           
  1122                           
  1123                           ;final.c: 296: }
  1124  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  1125  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  1126  02B8  1518               	bsf	24,2	;volatile
  1127  02B9                     l1192:
  1128                           
  1129                           ;final.c: 297: 
  1130  02B9  3081               	movlw	129
  1131  02BA  0099               	movwf	25	;volatile
  1132  02BB                     l1194:
  1133                           
  1134                           ;final.c: 299: uint8_t EEPROM_Read(uint8_t Address){
  1135  02BB  1218               	bcf	24,4	;volatile
  1136  02BC                     l1196:
  1137                           
  1138                           ;final.c: 300:     EEADR = Address;
  1139  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  1140  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  1141  02BE  1798               	bsf	24,7	;volatile
  1142  02BF                     l1198:
  1143                           
  1144                           ;final.c: 302:     EECON1bits.RD = 1;
  1145  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  1146  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  1147  02C1  1707               	bsf	7,6	;volatile
  1148  02C2                     l1200:
  1149                           
  1150                           ;final.c: 303:     return EEDATA;
  1151  02C2  1787               	bsf	7,7	;volatile
  1152  02C3                     l1202:
  1153                           
  1154                           ;final.c: 305: void EEPROM_Write(uint8_t Address, uint8_t Data){
  1155  02C3  1698               	bsf	24,5	;volatile
  1156  02C4                     l1204:
  1157                           
  1158                           ;final.c: 306:     while(WR);
  1159  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1160  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1161  02C6  1618               	bsf	24,4	;volatile
  1162  02C7                     l1206:
  1163                           
  1164                           ;final.c: 309:     EEPGD = 0;
  1165  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  1166  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  1167  02C9  168C               	bsf	12,5	;volatile
  1168  02CA                     l1208:
  1169                           
  1170                           ;final.c: 310:     EECON1bits.WREN = 1;
  1171  02CA  170B               	bsf	11,6	;volatile
  1172  02CB                     l1210:
  1173                           
  1174                           ;final.c: 311:     GIE =0;
  1175  02CB  178B               	bsf	11,7	;volatile
  1176  02CC                     l1212:
  1177                           
  1178                           ;final.c: 313:     EECON2 = 0xAA;
  1179  02CC  1318               	bcf	24,6	;volatile
  1180  02CD                     l1214:
  1181                           
  1182                           ;final.c: 314:     EECON1bits.WR =1;
  1183  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1184  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1185  02CF  1318               	bcf	24,6	;volatile
  1186  02D0                     l257:
  1187  02D0  0008               	return
  1188  02D1                     __end_of_config_UART:
  1189                           
  1190                           	psect	text4
  1191  0274                     __ptext4:	
  1192 ;; *************** function _EEPROM_Write *****************
  1193 ;; Defined at:
  1194 ;;		line 324 in file "final.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  Address         1    wreg     unsigned char 
  1197 ;;  Data            1    5[BANK0 ] unsigned char 
  1198 ;; Auto vars:     Size  Location     Type
  1199 ;;  Address         1    6[BANK0 ] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         0       1       0       0       0
  1210 ;;      Locals:         0       1       0       0       0
  1211 ;;      Temps:          0       0       0       0       0
  1212 ;;      Totals:         0       2       0       0       0
  1213 ;;Total ram usage:        2 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    3
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           
  1224                           ;psect for function _EEPROM_Write
  1225  0274                     _EEPROM_Write:
  1226                           
  1227                           ;incstack = 0
  1228                           ; Regs used in _EEPROM_Write: [wreg]
  1229                           ;EEPROM_Write@Address stored from wreg
  1230  0274  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0275  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0276  00A6               	movwf	EEPROM_Write@Address
  1233  0277                     l1244:
  1234  0277                     l263:
  1235  0277  1683               	bsf	3,5	;RP0=1, select bank3
  1236  0278  1703               	bsf	3,6	;RP1=1, select bank3
  1237  0279  188C               	btfsc	12,1	;volsfr
  1238  027A  2A7C               	goto	u551
  1239  027B  2A7D               	goto	u550
  1240  027C                     u551:
  1241  027C  2A77               	goto	l263
  1242  027D                     u550:
  1243  027D                     l1246:
  1244  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1245  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1246  027F  0826               	movf	EEPROM_Write@Address,w
  1247  0280  1283               	bcf	3,5	;RP0=0, select bank2
  1248  0281  1703               	bsf	3,6	;RP1=1, select bank2
  1249  0282  008D               	movwf	13	;volatile
  1250  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0285  0825               	movf	EEPROM_Write@Data,w
  1253  0286  1283               	bcf	3,5	;RP0=0, select bank2
  1254  0287  1703               	bsf	3,6	;RP1=1, select bank2
  1255  0288  008C               	movwf	12	;volatile
  1256  0289                     l1248:
  1257  0289  1683               	bsf	3,5	;RP0=1, select bank3
  1258  028A  1703               	bsf	3,6	;RP1=1, select bank3
  1259  028B  138C               	bcf	12,7	;volsfr
  1260  028C                     l1250:
  1261  028C  150C               	bsf	12,2	;volsfr
  1262  028D                     l1252:
  1263  028D  138B               	bcf	11,7	;volatile
  1264  028E  3055               	movlw	85
  1265  028F  008D               	movwf	13	;volsfr
  1266  0290  30AA               	movlw	170
  1267  0291  008D               	movwf	13	;volsfr
  1268  0292                     l1254:
  1269  0292  148C               	bsf	12,1	;volsfr
  1270  0293                     l1256:
  1271  0293  178B               	bsf	11,7	;volatile
  1272  0294                     l1258:
  1273  0294  110C               	bcf	12,2	;volsfr
  1274  0295                     l1260:
  1275  0295  108C               	bcf	12,1	;volsfr
  1276  0296                     l266:
  1277  0296  0008               	return
  1278  0297                     __end_of_EEPROM_Write:
  1279                           
  1280                           	psect	text5
  1281  031E                     __ptext5:	
  1282 ;; *************** function _EEPROM_Read *****************
  1283 ;; Defined at:
  1284 ;;		line 318 in file "final.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;  Address         1    wreg     unsigned char 
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;  Address         1    5[BANK0 ] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      unsigned char 
  1291 ;; Registers used:
  1292 ;;		wreg
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         0       0       0       0       0
  1299 ;;      Locals:         0       1       0       0       0
  1300 ;;      Temps:          0       0       0       0       0
  1301 ;;      Totals:         0       1       0       0       0
  1302 ;;Total ram usage:        1 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    3
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function _EEPROM_Read
  1314  031E                     _EEPROM_Read:
  1315                           
  1316                           ;incstack = 0
  1317                           ; Regs used in _EEPROM_Read: [wreg]
  1318                           ;EEPROM_Read@Address stored from wreg
  1319  031E  1283               	bcf	3,5	;RP0=0, select bank0
  1320  031F  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0320  00A5               	movwf	EEPROM_Read@Address
  1322  0321                     l1216:
  1323  0321  0825               	movf	EEPROM_Read@Address,w
  1324  0322  1283               	bcf	3,5	;RP0=0, select bank2
  1325  0323  1703               	bsf	3,6	;RP1=1, select bank2
  1326  0324  008D               	movwf	13	;volatile
  1327  0325                     l1218:
  1328  0325  1683               	bsf	3,5	;RP0=1, select bank3
  1329  0326  1703               	bsf	3,6	;RP1=1, select bank3
  1330  0327  138C               	bcf	12,7	;volsfr
  1331  0328                     l1220:
  1332  0328  140C               	bsf	12,0	;volsfr
  1333  0329  1283               	bcf	3,5	;RP0=0, select bank2
  1334  032A  1703               	bsf	3,6	;RP1=1, select bank2
  1335  032B  080C               	movf	12,w	;volatile
  1336  032C                     l260:
  1337  032C  0008               	return
  1338  032D                     __end_of_EEPROM_Read:
  1339                           
  1340                           	psect	text6
  1341  01A3                     __ptext6:	
  1342 ;; *************** function _ADC_Read *****************
  1343 ;; Defined at:
  1344 ;;		line 229 in file "final.c"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  ADC_channel     1    wreg     unsigned char 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  ADC_channel     1   10[BANK0 ] unsigned char 
  1349 ;;  result          2    8[BANK0 ] unsigned int 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  2    5[BANK0 ] unsigned int 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         0       2       0       0       0
  1360 ;;      Locals:         0       3       0       0       0
  1361 ;;      Temps:          0       1       0       0       0
  1362 ;;      Totals:         0       6       0       0       0
  1363 ;;Total ram usage:        6 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    3
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           
  1374                           ;psect for function _ADC_Read
  1375  01A3                     _ADC_Read:
  1376                           
  1377                           ;incstack = 0
  1378                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  1379                           ;ADC_Read@ADC_channel stored from wreg
  1380  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1381  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1382  01A5  00AA               	movwf	ADC_Read@ADC_channel
  1383  01A6                     l1224:
  1384                           
  1385                           ;final.c: 231:     return result;
  1386  01A6  3008               	movlw	8
  1387  01A7  022A               	subwf	ADC_Read@ADC_channel,w
  1388  01A8  1C03               	skipc
  1389  01A9  29AB               	goto	u431
  1390  01AA  29AC               	goto	u430
  1391  01AB                     u431:
  1392  01AB  29AF               	goto	l227
  1393  01AC                     u430:
  1394  01AC                     l1226:
  1395                           
  1396                           ;final.c: 232: }
  1397  01AC  01A5               	clrf	?_ADC_Read
  1398  01AD  01A6               	clrf	?_ADC_Read+1
  1399  01AE  29F7               	goto	l228
  1400  01AF                     l227:
  1401                           
  1402                           ;final.c: 235: 
  1403  01AF  182A               	btfsc	ADC_Read@ADC_channel,0
  1404  01B0  29B2               	goto	u441
  1405  01B1  29B6               	goto	u440
  1406  01B2                     u441:
  1407  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1408  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1409  01B4  159F               	bsf	31,3	;volatile
  1410  01B5  29B9               	goto	u454
  1411  01B6                     u440:
  1412  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1413  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1414  01B8  119F               	bcf	31,3	;volatile
  1415  01B9                     u454:
  1416  01B9                     l1230:
  1417                           
  1418                           ;final.c: 236:     CCP1M2 = 1;
  1419  01B9  082A               	movf	ADC_Read@ADC_channel,w
  1420  01BA  00A7               	movwf	??_ADC_Read
  1421  01BB  3001               	movlw	1
  1422  01BC                     u465:
  1423  01BC  1003               	clrc
  1424  01BD  0CA7               	rrf	??_ADC_Read,f
  1425  01BE  3EFF               	addlw	-1
  1426  01BF  1D03               	skipz
  1427  01C0  29BC               	goto	u465
  1428  01C1  1827               	btfsc	??_ADC_Read,0
  1429  01C2  29C4               	goto	u471
  1430  01C3  29C8               	goto	u470
  1431  01C4                     u471:
  1432  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1433  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1434  01C6  161F               	bsf	31,4	;volatile
  1435  01C7  29CB               	goto	u484
  1436  01C8                     u470:
  1437  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1438  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1439  01CA  121F               	bcf	31,4	;volatile
  1440  01CB                     u484:
  1441                           
  1442                           ;final.c: 237:     CCP1M3 = 1;
  1443  01CB  082A               	movf	ADC_Read@ADC_channel,w
  1444  01CC  00A7               	movwf	??_ADC_Read
  1445  01CD  3002               	movlw	2
  1446  01CE                     u495:
  1447  01CE  1003               	clrc
  1448  01CF  0CA7               	rrf	??_ADC_Read,f
  1449  01D0  3EFF               	addlw	-1
  1450  01D1  1D03               	skipz
  1451  01D2  29CE               	goto	u495
  1452  01D3  1827               	btfsc	??_ADC_Read,0
  1453  01D4  29D6               	goto	u501
  1454  01D5  29DA               	goto	u500
  1455  01D6                     u501:
  1456  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1457  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1458  01D8  169F               	bsf	31,5	;volatile
  1459  01D9  29DD               	goto	u514
  1460  01DA                     u500:
  1461  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1462  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1463  01DC  129F               	bcf	31,5	;volatile
  1464  01DD                     u514:
  1465  01DD                     l1232:
  1466                           
  1467                           ;final.c: 240: 
  1468  01DD  3028               	movlw	40
  1469  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1470  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1471  01E0  00A7               	movwf	??_ADC_Read
  1472  01E1                     u857:
  1473  01E1  0BA7               	decfsz	??_ADC_Read,f
  1474  01E2  29E1               	goto	u857
  1475  01E3  29E4               	nop2
  1476  01E4                     l1234:
  1477                           
  1478                           ;final.c: 243:         case 4: {T2CKPS0 = 1; T2CKPS1 = 0; break;}
  1479  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  1480  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  1481  01E6  151F               	bsf	31,2	;volatile
  1482  01E7                     l229:	
  1483                           ;final.c: 246:     TMR2ON = 1;
  1484                           
  1485  01E7  191F               	btfsc	31,2	;volatile
  1486  01E8  29EA               	goto	u521
  1487  01E9  29EB               	goto	u520
  1488  01EA                     u521:
  1489  01EA  29E7               	goto	l229
  1490  01EB                     u520:
  1491  01EB                     l1236:
  1492                           
  1493                           ;final.c: 249: 
  1494  01EB  081E               	movf	30,w	;volatile
  1495  01EC  00A9               	movwf	ADC_Read@result+1
  1496  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  1497  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  1498  01EF  081E               	movf	30,w	;volatile
  1499  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1500  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1501  01F2  00A8               	movwf	ADC_Read@result
  1502                           
  1503                           ;final.c: 250: }
  1504  01F3  0829               	movf	ADC_Read@result+1,w
  1505  01F4  00A6               	movwf	?_ADC_Read+1
  1506  01F5  0828               	movf	ADC_Read@result,w
  1507  01F6  00A5               	movwf	?_ADC_Read
  1508  01F7                     l228:
  1509  01F7  0008               	return
  1510  01F8                     __end_of_ADC_Read:
  1511                           
  1512                           	psect	text7
  1513  032D                     __ptext7:	
  1514 ;; *************** function _ADC_Init *****************
  1515 ;; Defined at:
  1516 ;;		line 208 in file "final.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;		None
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      void 
  1523 ;; Registers used:
  1524 ;;		None
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1530 ;;      Params:         0       0       0       0       0
  1531 ;;      Locals:         0       0       0       0       0
  1532 ;;      Temps:          0       0       0       0       0
  1533 ;;      Totals:         0       0       0       0       0
  1534 ;;Total ram usage:        0 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    3
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_main
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function _ADC_Init
  1546  032D                     _ADC_Init:
  1547  032D                     l1178:	
  1548                           ;incstack = 0
  1549                           ; Regs used in _ADC_Init: []
  1550                           
  1551                           
  1552                           ;final.c: 212:     if(ADC_channel < 0 || ADC_channel > 7)
  1553  032D  1283               	bcf	3,5	;RP0=0, select bank0
  1554  032E  1303               	bcf	3,6	;RP1=0, select bank0
  1555  032F  171F               	bsf	31,6	;volatile
  1556                           
  1557                           ;final.c: 213:         return 0;
  1558  0330  139F               	bcf	31,7	;volatile
  1559                           
  1560                           ;final.c: 215: 
  1561  0331  141F               	bsf	31,0	;volatile
  1562                           
  1563                           ;final.c: 219: 
  1564  0332  1683               	bsf	3,5	;RP0=1, select bank1
  1565  0333  1303               	bcf	3,6	;RP1=0, select bank1
  1566  0334  179F               	bsf	31,7	;volatile
  1567                           
  1568                           ;final.c: 221:     _delay((unsigned long)((25)*(20000000/4000000.0)));
  1569  0335  171F               	bsf	31,6	;volatile
  1570                           
  1571                           ;final.c: 223: 
  1572  0336  101F               	bcf	31,0	;volatile
  1573                           
  1574                           ;final.c: 224:     GO_DONE = 1;
  1575  0337  109F               	bcf	31,1	;volatile
  1576                           
  1577                           ;final.c: 225: 
  1578  0338  111F               	bcf	31,2	;volatile
  1579                           
  1580                           ;final.c: 226: 
  1581  0339  119F               	bcf	31,3	;volatile
  1582  033A                     l224:
  1583  033A  0008               	return
  1584  033B                     __end_of_ADC_Init:
  1585                           
  1586                           	psect	text8
  1587  00FF                     __ptext8:	
  1588 ;; *************** function _ISR *****************
  1589 ;; Defined at:
  1590 ;;		line 148 in file "final.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;		None
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;		None
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1604 ;;      Params:         0       0       0       0       0
  1605 ;;      Locals:         0       0       0       0       0
  1606 ;;      Temps:          0       5       0       0       0
  1607 ;;      Totals:         0       5       0       0       0
  1608 ;;Total ram usage:        5 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    2
  1611 ;; This function calls:
  1612 ;;		_UART_send_string
  1613 ;;		i1_ADC_Read
  1614 ;;		i1_EEPROM_Write
  1615 ;;		i1_setPWM_DutyCycle
  1616 ;; This function is called by:
  1617 ;;		Interrupt level 1
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           
  1622                           ;psect for function _ISR
  1623  00FF                     _ISR:
  1624  00FF                     i1l1398:
  1625                           
  1626                           ;final.c: 150: 
  1627  00FF  1C0C               	btfss	12,0	;volatile
  1628  0100  2902               	goto	u76_21
  1629  0101  2903               	goto	u76_20
  1630  0102                     u76_21:
  1631  0102  2913               	goto	i1l1410
  1632  0103                     u76_20:
  1633  0103                     i1l1400:
  1634                           
  1635                           ;final.c: 151:     if(RCIF == 1){
  1636  0103  3001               	movlw	1
  1637  0104  00A0               	movwf	??_ISR
  1638  0105  0820               	movf	??_ISR,w
  1639  0106  07FD               	addwf	_counter0,f
  1640                           
  1641                           ;final.c: 152:         result = RCREG;
  1642  0107  303C               	movlw	60
  1643  0108  067D               	xorwf	_counter0,w
  1644  0109  1D03               	btfss	3,2
  1645  010A  290C               	goto	u77_21
  1646  010B  290D               	goto	u77_20
  1647  010C                     u77_21:
  1648  010C  290E               	goto	i1l1404
  1649  010D                     u77_20:
  1650  010D                     i1l1402:
  1651                           
  1652                           ;final.c: 153:         if (result == 'a'){
  1653  010D  01FD               	clrf	_counter0
  1654  010E                     i1l1404:
  1655                           
  1656                           ;final.c: 156:             flag_timer_servor1 = 1;
  1657  010E  30FD               	movlw	253
  1658  010F  008F               	movwf	15	;volatile
  1659  0110                     i1l1406:
  1660                           
  1661                           ;final.c: 157:             flag_timer_servor2 =0;
  1662  0110  30E8               	movlw	232
  1663  0111  008E               	movwf	14	;volatile
  1664  0112                     i1l1408:
  1665                           
  1666                           ;final.c: 158:             TMR1H = 0xFD;
  1667  0112  100C               	bcf	12,0	;volatile
  1668  0113                     i1l1410:
  1669                           
  1670                           ;final.c: 162:         else if (result == 'b')
  1671  0113  1C8B               	btfss	11,1	;volatile
  1672  0114  2916               	goto	u78_21
  1673  0115  2917               	goto	u78_20
  1674  0116                     u78_21:
  1675  0116  2929               	goto	i1l1420
  1676  0117                     u78_20:
  1677  0117                     i1l1412:
  1678                           
  1679                           ;final.c: 163:         {
  1680  0117  3000               	movlw	0
  1681  0118  00F6               	movwf	i1setPWM_DutyCycle@DC
  1682  0119  00F7               	movwf	i1setPWM_DutyCycle@DC+1
  1683  011A  120A  118A  2306  120A  118A  	fcall	i1_setPWM_DutyCycle
  1684  011F                     i1l1414:
  1685                           
  1686                           ;final.c: 164:             count_sp2 ++;
  1687  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1688  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1689  0121  01B8               	clrf	_flag_dc
  1690  0122                     i1l1416:
  1691                           
  1692                           ;final.c: 165:             EEPROM_Write(0x01,count_sp2);
  1693  0122  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1694  0123  120A  118A  2297  120A  118A  	fcall	_UART_send_string
  1695  0128                     i1l1418:
  1696                           
  1697                           ;final.c: 166:             flag_timer_servor1 = 0;
  1698  0128  108B               	bcf	11,1	;volatile
  1699  0129                     i1l1420:
  1700                           
  1701                           ;final.c: 170: 
  1702  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1703  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1704  012B  1E8C               	btfss	12,5	;volatile
  1705  012C  292E               	goto	u79_21
  1706  012D  292F               	goto	u79_20
  1707  012E                     u79_21:
  1708  012E  2998               	goto	i1l221
  1709  012F                     u79_20:
  1710  012F                     i1l1422:
  1711                           
  1712                           ;final.c: 171:         }
  1713  012F  081A               	movf	26,w	;volatile
  1714  0130  00A0               	movwf	??_ISR
  1715  0131  0820               	movf	??_ISR,w
  1716  0132  00FC               	movwf	_result
  1717  0133                     i1l1424:
  1718                           
  1719                           ;final.c: 172:         else if (result =='c')
  1720  0133  3061               	movlw	97
  1721  0134  067C               	xorwf	_result,w
  1722  0135  1D03               	btfss	3,2
  1723  0136  2938               	goto	u80_21
  1724  0137  2939               	goto	u80_20
  1725  0138                     u80_21:
  1726  0138  2951               	goto	i1l1438
  1727  0139                     u80_20:
  1728  0139                     i1l1426:
  1729                           
  1730                           ;final.c: 173:         {
  1731  0139  3001               	movlw	1
  1732  013A  00A0               	movwf	??_ISR
  1733  013B  0820               	movf	??_ISR,w
  1734  013C  07B2               	addwf	_count_sp1,f
  1735  013D                     i1l1428:
  1736                           
  1737                           ;final.c: 174:             count_sp3 ++;
  1738  013D  0832               	movf	_count_sp1,w
  1739  013E  00A0               	movwf	??_ISR
  1740  013F  0820               	movf	??_ISR,w
  1741  0140  00F0               	movwf	i1EEPROM_Write@Data
  1742  0141  3000               	movlw	0
  1743  0142  120A  118A  22D1  120A  118A  	fcall	i1_EEPROM_Write
  1744  0147                     i1l1430:
  1745                           
  1746                           ;final.c: 175:             EEPROM_Write(0x02,count_sp3);
  1747  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1748  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1749  0149  01B5               	clrf	_flag_timer_servor1
  1750  014A  0AB5               	incf	_flag_timer_servor1,f
  1751  014B                     i1l1432:
  1752                           
  1753                           ;final.c: 176:             flag_timer_servor1 = 0;
  1754  014B  01B4               	clrf	_flag_timer_servor2
  1755  014C                     i1l1434:
  1756                           
  1757                           ;final.c: 177:             flag_timer_servor2 =0;
  1758  014C  30FD               	movlw	253
  1759  014D  008F               	movwf	15	;volatile
  1760  014E                     i1l1436:
  1761                           
  1762                           ;final.c: 178:         }
  1763  014E  30E8               	movlw	232
  1764  014F  008E               	movwf	14	;volatile
  1765                           
  1766                           ;final.c: 180:         setPWM_DutyCycle(ADC_Read(0));
  1767  0150  2983               	goto	i1l1462
  1768  0151                     i1l1438:
  1769  0151  3062               	movlw	98
  1770  0152  067C               	xorwf	_result,w
  1771  0153  1D03               	btfss	3,2
  1772  0154  2956               	goto	u81_21
  1773  0155  2957               	goto	u81_20
  1774  0156                     u81_21:
  1775  0156  296B               	goto	i1l1452
  1776  0157                     u81_20:
  1777  0157                     i1l1440:
  1778                           
  1779                           ;final.c: 182: ;final.c: 183:     RCIF =0;}
  1780  0157  3001               	movlw	1
  1781  0158  00A0               	movwf	??_ISR
  1782  0159  0820               	movf	??_ISR,w
  1783  015A  07FB               	addwf	_count_sp2,f
  1784  015B                     i1l1442:
  1785                           
  1786                           ;final.c: 184: }
  1787  015B  087B               	movf	_count_sp2,w
  1788  015C  00A0               	movwf	??_ISR
  1789  015D  0820               	movf	??_ISR,w
  1790  015E  00F0               	movwf	i1EEPROM_Write@Data
  1791  015F  3001               	movlw	1
  1792  0160  120A  118A  22D1  120A  118A  	fcall	i1_EEPROM_Write
  1793  0165                     i1l1444:
  1794                           
  1795                           ;final.c: 185: 
  1796  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1797  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1798  0167  01B5               	clrf	_flag_timer_servor1
  1799  0168                     i1l1446:
  1800                           
  1801                           ;final.c: 186: 
  1802  0168  01B4               	clrf	_flag_timer_servor2
  1803  0169  0AB4               	incf	_flag_timer_servor2,f
  1804  016A  294C               	goto	i1l1434
  1805  016B                     i1l1452:
  1806  016B  3063               	movlw	99
  1807  016C  067C               	xorwf	_result,w
  1808  016D  1D03               	btfss	3,2
  1809  016E  2970               	goto	u82_21
  1810  016F  2971               	goto	u82_20
  1811  0170                     u82_21:
  1812  0170  2983               	goto	i1l1462
  1813  0171                     u82_20:
  1814  0171                     i1l1454:
  1815                           
  1816                           ;final.c: 192: ;final.c: 193:     ADCS0 = 1;
  1817  0171  3001               	movlw	1
  1818  0172  00A0               	movwf	??_ISR
  1819  0173  0820               	movf	??_ISR,w
  1820  0174  07FA               	addwf	_count_sp3,f
  1821  0175                     i1l1456:
  1822                           
  1823                           ;final.c: 194:     ADCS1 = 0;
  1824  0175  087A               	movf	_count_sp3,w
  1825  0176  00A0               	movwf	??_ISR
  1826  0177  0820               	movf	??_ISR,w
  1827  0178  00F0               	movwf	i1EEPROM_Write@Data
  1828  0179  3002               	movlw	2
  1829  017A  120A  118A  22D1  120A  118A  	fcall	i1_EEPROM_Write
  1830  017F                     i1l1458:
  1831                           
  1832                           ;final.c: 195: 
  1833  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1834  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0181  01B5               	clrf	_flag_timer_servor1
  1836  0182                     i1l1460:
  1837                           
  1838                           ;final.c: 196:     ADON = 1;
  1839  0182  01B4               	clrf	_flag_timer_servor2
  1840  0183                     i1l1462:
  1841                           
  1842                           ;final.c: 198: 
  1843  0183  01B8               	clrf	_flag_dc
  1844  0184  0AB8               	incf	_flag_dc,f
  1845  0185                     i1l1464:
  1846                           
  1847                           ;final.c: 199: 
  1848  0185  3000               	movlw	0
  1849  0186  120A  118A  21F8  120A  118A  	fcall	i1_ADC_Read
  1850  018B  0871               	movf	?i1_ADC_Read+1,w
  1851  018C  00F7               	movwf	i1setPWM_DutyCycle@DC+1
  1852  018D  0870               	movf	?i1_ADC_Read,w
  1853  018E  00F6               	movwf	i1setPWM_DutyCycle@DC
  1854  018F  120A  118A  2306  120A  118A  	fcall	i1_setPWM_DutyCycle
  1855  0194                     i1l1466:
  1856                           
  1857                           ;final.c: 200:     ADFM = 1;
  1858  0194  01FC               	clrf	_result
  1859  0195                     i1l1468:
  1860                           
  1861                           ;final.c: 202:     ADCS2 = 1;
  1862  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1863  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1864  0197  128C               	bcf	12,5	;volatile
  1865  0198                     i1l221:
  1866  0198  0824               	movf	??_ISR+4,w
  1867  0199  00FF               	movwf	btemp+1
  1868  019A  0823               	movf	??_ISR+3,w
  1869  019B  008A               	movwf	10
  1870  019C  0822               	movf	??_ISR+2,w
  1871  019D  0084               	movwf	4
  1872  019E  0E21               	swapf	??_ISR+1,w
  1873  019F  0083               	movwf	3
  1874  01A0  0EFE               	swapf	btemp,f
  1875  01A1  0E7E               	swapf	btemp,w
  1876  01A2  0009               	retfie
  1877  01A3                     __end_of_ISR:
  1878                           
  1879                           	psect	intentry
  1880  0004                     __pintentry:	
  1881                           ;incstack = 0
  1882                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1883                           
  1884  0004                     interrupt_function:
  1885  007E                     saved_w	set	btemp
  1886  0004  00FE               	movwf	btemp
  1887  0005  0E03               	swapf	3,w
  1888  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1889  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1890  0008  00A1               	movwf	??_ISR+1
  1891  0009  0804               	movf	4,w
  1892  000A  00A2               	movwf	??_ISR+2
  1893  000B  080A               	movf	10,w
  1894  000C  00A3               	movwf	??_ISR+3
  1895  000D  087F               	movf	btemp+1,w
  1896  000E  00A4               	movwf	??_ISR+4
  1897  000F  120A  118A  28FF   	ljmp	_ISR
  1898                           
  1899                           	psect	text9
  1900  0306                     __ptext9:	
  1901 ;; *************** function i1_setPWM_DutyCycle *****************
  1902 ;; Defined at:
  1903 ;;		line 271 in file "final.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  DC              2    6[COMMON] unsigned int 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, status,0
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1917 ;;      Params:         2       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0
  1919 ;;      Temps:          2       0       0       0       0
  1920 ;;      Totals:         4       0       0       0       0
  1921 ;;Total ram usage:        4 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_ISR
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           
  1931                           ;psect for function i1_setPWM_DutyCycle
  1932  0306                     i1_setPWM_DutyCycle:
  1933  0306                     i1l1286:	
  1934                           ;incstack = 0
  1935                           ; Regs used in i1_setPWM_DutyCycle: [wreg+status,2+status,0]
  1936                           
  1937                           
  1938                           ;final.c: 275: void config_UART(){
  1939  0306  1876               	btfsc	i1setPWM_DutyCycle@DC,0
  1940  0307  2B09               	goto	u67_21
  1941  0308  2B0D               	goto	u67_20
  1942  0309                     u67_21:
  1943  0309  1283               	bcf	3,5	;RP0=0, select bank0
  1944  030A  1303               	bcf	3,6	;RP1=0, select bank0
  1945  030B  1617               	bsf	23,4	;volatile
  1946  030C  2B10               	goto	u68_24
  1947  030D                     u67_20:
  1948  030D  1283               	bcf	3,5	;RP0=0, select bank0
  1949  030E  1303               	bcf	3,6	;RP1=0, select bank0
  1950  030F  1217               	bcf	23,4	;volatile
  1951  0310                     u68_24:
  1952                           
  1953                           ;final.c: 276: 
  1954  0310  1297               	bcf	23,5	;volatile
  1955  0311                     i1l1288:
  1956                           
  1957                           ;final.c: 278:     SPBRG = 129;
  1958  0311  0877               	movf	i1setPWM_DutyCycle@DC+1,w
  1959  0312  00F9               	movwf	??i1_setPWM_DutyCycle+1
  1960  0313  0876               	movf	i1setPWM_DutyCycle@DC,w
  1961  0314  00F8               	movwf	??i1_setPWM_DutyCycle
  1962  0315  1003               	clrc
  1963  0316  0CF9               	rrf	??i1_setPWM_DutyCycle+1,f
  1964  0317  0CF8               	rrf	??i1_setPWM_DutyCycle,f
  1965  0318  1003               	clrc
  1966  0319  0CF9               	rrf	??i1_setPWM_DutyCycle+1,f
  1967  031A  0CF8               	rrf	??i1_setPWM_DutyCycle,f
  1968  031B  0878               	movf	??i1_setPWM_DutyCycle,w
  1969  031C  0095               	movwf	21	;volatile
  1970  031D                     i1l242:
  1971  031D  0008               	return
  1972  031E                     __end_ofi1_setPWM_DutyCycle:
  1973                           
  1974                           	psect	text10
  1975  02D1                     __ptext10:	
  1976 ;; *************** function i1_EEPROM_Write *****************
  1977 ;; Defined at:
  1978 ;;		line 324 in file "final.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  Address         1    wreg     unsigned char 
  1981 ;;  Data            1    0[COMMON] unsigned char 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  Address         1    1[COMMON] unsigned char 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1993 ;;      Params:         1       0       0       0       0
  1994 ;;      Locals:         1       0       0       0       0
  1995 ;;      Temps:          0       0       0       0       0
  1996 ;;      Totals:         2       0       0       0       0
  1997 ;;Total ram usage:        2 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_ISR
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           
  2007                           ;psect for function i1_EEPROM_Write
  2008  02D1                     i1_EEPROM_Write:
  2009                           
  2010                           ;incstack = 0
  2011                           ; Regs used in i1_EEPROM_Write: [wreg]
  2012                           ;i1EEPROM_Write@Address stored from wreg
  2013  02D1  00F1               	movwf	i1EEPROM_Write@Address
  2014  02D2                     i1l1290:
  2015  02D2                     i1l263:
  2016  02D2  1683               	bsf	3,5	;RP0=1, select bank3
  2017  02D3  1703               	bsf	3,6	;RP1=1, select bank3
  2018  02D4  188C               	btfsc	12,1	;volsfr
  2019  02D5  2AD7               	goto	u69_21
  2020  02D6  2AD8               	goto	u69_20
  2021  02D7                     u69_21:
  2022  02D7  2AD2               	goto	i1l263
  2023  02D8                     u69_20:
  2024  02D8                     i1l1292:
  2025  02D8  0871               	movf	i1EEPROM_Write@Address,w
  2026  02D9  1283               	bcf	3,5	;RP0=0, select bank2
  2027  02DA  1703               	bsf	3,6	;RP1=1, select bank2
  2028  02DB  008D               	movwf	13	;volatile
  2029  02DC  0870               	movf	i1EEPROM_Write@Data,w
  2030  02DD  008C               	movwf	12	;volatile
  2031  02DE                     i1l1294:
  2032  02DE  1683               	bsf	3,5	;RP0=1, select bank3
  2033  02DF  1703               	bsf	3,6	;RP1=1, select bank3
  2034  02E0  138C               	bcf	12,7	;volsfr
  2035  02E1                     i1l1296:
  2036  02E1  150C               	bsf	12,2	;volsfr
  2037  02E2                     i1l1298:
  2038  02E2  138B               	bcf	11,7	;volatile
  2039  02E3  3055               	movlw	85
  2040  02E4  008D               	movwf	13	;volsfr
  2041  02E5  30AA               	movlw	170
  2042  02E6  008D               	movwf	13	;volsfr
  2043  02E7                     i1l1300:
  2044  02E7  148C               	bsf	12,1	;volsfr
  2045  02E8                     i1l1302:
  2046  02E8  178B               	bsf	11,7	;volatile
  2047  02E9                     i1l1304:
  2048  02E9  110C               	bcf	12,2	;volsfr
  2049  02EA                     i1l1306:
  2050  02EA  108C               	bcf	12,1	;volsfr
  2051  02EB                     i1l266:
  2052  02EB  0008               	return
  2053  02EC                     __end_ofi1_EEPROM_Write:
  2054                           
  2055                           	psect	text11
  2056  01F8                     __ptext11:	
  2057 ;; *************** function i1_ADC_Read *****************
  2058 ;; Defined at:
  2059 ;;		line 229 in file "final.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  ADC_channel     1    wreg     unsigned char 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  ADC_channel     1    5[COMMON] unsigned char 
  2064 ;;  result          2    3[COMMON] unsigned int 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  2    0[COMMON] unsigned int 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2, status,0
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074 ;;      Params:         2       0       0       0       0
  2075 ;;      Locals:         3       0       0       0       0
  2076 ;;      Temps:          1       0       0       0       0
  2077 ;;      Totals:         6       0       0       0       0
  2078 ;;Total ram usage:        6 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_ISR
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function i1_ADC_Read
  2089  01F8                     i1_ADC_Read:
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in i1_ADC_Read: [wreg+status,2+status,0]
  2093                           ;i1ADC_Read@ADC_channel stored from wreg
  2094  01F8  00F5               	movwf	i1ADC_Read@ADC_channel
  2095  01F9                     i1l1270:
  2096                           
  2097                           ;final.c: 231:     return result;
  2098  01F9  3008               	movlw	8
  2099  01FA  0275               	subwf	i1ADC_Read@ADC_channel,w
  2100  01FB  1C03               	skipc
  2101  01FC  29FE               	goto	u57_21
  2102  01FD  29FF               	goto	u57_20
  2103  01FE                     u57_21:
  2104  01FE  2A02               	goto	i1l227
  2105  01FF                     u57_20:
  2106  01FF                     i1l1272:
  2107                           
  2108                           ;final.c: 232: }
  2109  01FF  01F0               	clrf	?i1_ADC_Read
  2110  0200  01F1               	clrf	?i1_ADC_Read+1
  2111  0201  2A46               	goto	i1l228
  2112  0202                     i1l227:
  2113                           
  2114                           ;final.c: 235: 
  2115  0202  1875               	btfsc	i1ADC_Read@ADC_channel,0
  2116  0203  2A05               	goto	u58_21
  2117  0204  2A09               	goto	u58_20
  2118  0205                     u58_21:
  2119  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0207  159F               	bsf	31,3	;volatile
  2122  0208  2A0C               	goto	u59_24
  2123  0209                     u58_20:
  2124  0209  1283               	bcf	3,5	;RP0=0, select bank0
  2125  020A  1303               	bcf	3,6	;RP1=0, select bank0
  2126  020B  119F               	bcf	31,3	;volatile
  2127  020C                     u59_24:
  2128  020C                     i1l1276:
  2129                           
  2130                           ;final.c: 236:     CCP1M2 = 1;
  2131  020C  0875               	movf	i1ADC_Read@ADC_channel,w
  2132  020D  00F2               	movwf	??i1_ADC_Read
  2133  020E  3001               	movlw	1
  2134  020F                     u60_25:
  2135  020F  1003               	clrc
  2136  0210  0CF2               	rrf	??i1_ADC_Read,f
  2137  0211  3EFF               	addlw	-1
  2138  0212  1D03               	skipz
  2139  0213  2A0F               	goto	u60_25
  2140  0214  1872               	btfsc	??i1_ADC_Read,0
  2141  0215  2A17               	goto	u61_21
  2142  0216  2A1B               	goto	u61_20
  2143  0217                     u61_21:
  2144  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2146  0219  161F               	bsf	31,4	;volatile
  2147  021A  2A1E               	goto	u62_24
  2148  021B                     u61_20:
  2149  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2150  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2151  021D  121F               	bcf	31,4	;volatile
  2152  021E                     u62_24:
  2153                           
  2154                           ;final.c: 237:     CCP1M3 = 1;
  2155  021E  0875               	movf	i1ADC_Read@ADC_channel,w
  2156  021F  00F2               	movwf	??i1_ADC_Read
  2157  0220  3002               	movlw	2
  2158  0221                     u63_25:
  2159  0221  1003               	clrc
  2160  0222  0CF2               	rrf	??i1_ADC_Read,f
  2161  0223  3EFF               	addlw	-1
  2162  0224  1D03               	skipz
  2163  0225  2A21               	goto	u63_25
  2164  0226  1872               	btfsc	??i1_ADC_Read,0
  2165  0227  2A29               	goto	u64_21
  2166  0228  2A2D               	goto	u64_20
  2167  0229                     u64_21:
  2168  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2169  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2170  022B  169F               	bsf	31,5	;volatile
  2171  022C  2A30               	goto	u65_24
  2172  022D                     u64_20:
  2173  022D  1283               	bcf	3,5	;RP0=0, select bank0
  2174  022E  1303               	bcf	3,6	;RP1=0, select bank0
  2175  022F  129F               	bcf	31,5	;volatile
  2176  0230                     u65_24:
  2177  0230                     i1l1278:
  2178                           
  2179                           ;final.c: 240: 
  2180  0230  3029               	movlw	41
  2181  0231  00F2               	movwf	??i1_ADC_Read
  2182  0232                     u86_27:
  2183  0232  0BF2               	decfsz	??i1_ADC_Read,f
  2184  0233  2A32               	goto	u86_27
  2185  0234  0000               	nop
  2186  0235                     i1l1280:
  2187                           
  2188                           ;final.c: 243:         case 4: {T2CKPS0 = 1; T2CKPS1 = 0; break;}
  2189  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0237  151F               	bsf	31,2	;volatile
  2192  0238                     i1l229:	
  2193                           ;final.c: 246:     TMR2ON = 1;
  2194                           
  2195  0238  191F               	btfsc	31,2	;volatile
  2196  0239  2A3B               	goto	u66_21
  2197  023A  2A3C               	goto	u66_20
  2198  023B                     u66_21:
  2199  023B  2A38               	goto	i1l229
  2200  023C                     u66_20:
  2201  023C                     i1l1282:
  2202                           
  2203                           ;final.c: 249: 
  2204  023C  081E               	movf	30,w	;volatile
  2205  023D  00F4               	movwf	i1ADC_Read@result+1
  2206  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2207  023F  1303               	bcf	3,6	;RP1=0, select bank1
  2208  0240  081E               	movf	30,w	;volatile
  2209  0241  00F3               	movwf	i1ADC_Read@result
  2210                           
  2211                           ;final.c: 250: }
  2212  0242  0874               	movf	i1ADC_Read@result+1,w
  2213  0243  00F1               	movwf	?i1_ADC_Read+1
  2214  0244  0873               	movf	i1ADC_Read@result,w
  2215  0245  00F0               	movwf	?i1_ADC_Read
  2216  0246                     i1l228:
  2217  0246  0008               	return
  2218  0247                     __end_ofi1_ADC_Read:
  2219                           
  2220                           	psect	text12
  2221  0297                     __ptext12:	
  2222 ;; *************** function _UART_send_string *****************
  2223 ;; Defined at:
  2224 ;;		line 288 in file "final.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  st_pt           1    wreg     PTR unsigned char 
  2227 ;;		 -> STR_1(7), 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  st_pt           1    2[COMMON] PTR unsigned char 
  2230 ;;		 -> STR_1(7), 
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      void 
  2233 ;; Registers used:
  2234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2240 ;;      Params:         0       0       0       0       0
  2241 ;;      Locals:         1       0       0       0       0
  2242 ;;      Temps:          1       0       0       0       0
  2243 ;;      Totals:         2       0       0       0       0
  2244 ;;Total ram usage:        2 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:    1
  2247 ;; This function calls:
  2248 ;;		_UART_send_char
  2249 ;; This function is called by:
  2250 ;;		_ISR
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           
  2255                           ;psect for function _UART_send_string
  2256  0297                     _UART_send_string:
  2257                           
  2258                           ;incstack = 0
  2259                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2260                           ;UART_send_string@st_pt stored from wreg
  2261  0297  00F2               	movwf	UART_send_string@st_pt
  2262  0298                     i1l1262:
  2263                           
  2264                           ;final.c: 288: ;final.c: 289: ;final.c: 290:     RCIE = 1;
  2265  0298  2AA9               	goto	i1l1268
  2266  0299                     i1l1264:
  2267                           
  2268                           ;final.c: 291:     PEIE = 1;
  2269  0299  0872               	movf	UART_send_string@st_pt,w
  2270  029A  0084               	movwf	4
  2271  029B  120A  118A  233B  120A  118A  	fcall	stringdir
  2272  02A0  120A  118A  2348  120A  118A  	fcall	_UART_send_char
  2273  02A5                     i1l1266:
  2274  02A5  3001               	movlw	1
  2275  02A6  00F1               	movwf	??_UART_send_string
  2276  02A7  0871               	movf	??_UART_send_string,w
  2277  02A8  07F2               	addwf	UART_send_string@st_pt,f
  2278  02A9                     i1l1268:
  2279                           
  2280                           ;final.c: 290:     RCIE = 1;
  2281  02A9  0872               	movf	UART_send_string@st_pt,w
  2282  02AA  0084               	movwf	4
  2283  02AB  120A  118A  233B  120A  118A  	fcall	stringdir
  2284  02B0  3A00               	xorlw	0
  2285  02B1  1D03               	skipz
  2286  02B2  2AB4               	goto	u56_21
  2287  02B3  2AB5               	goto	u56_20
  2288  02B4                     u56_21:
  2289  02B4  2A99               	goto	i1l1264
  2290  02B5                     u56_20:
  2291  02B5                     i1l254:
  2292  02B5  0008               	return
  2293  02B6                     __end_of_UART_send_string:
  2294                           
  2295                           	psect	text13
  2296  0348                     __ptext13:	
  2297 ;; *************** function _UART_send_char *****************
  2298 ;; Defined at:
  2299 ;;		line 282 in file "final.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  bt              1    wreg     unsigned char 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  bt              1    0[COMMON] unsigned char 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  1    wreg      void 
  2306 ;; Registers used:
  2307 ;;		wreg
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2313 ;;      Params:         0       0       0       0       0
  2314 ;;      Locals:         1       0       0       0       0
  2315 ;;      Temps:          0       0       0       0       0
  2316 ;;      Totals:         1       0       0       0       0
  2317 ;;Total ram usage:        1 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_UART_send_string
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           
  2327                           ;psect for function _UART_send_char
  2328  0348                     _UART_send_char:
  2329                           
  2330                           ;incstack = 0
  2331                           ; Regs used in _UART_send_char: [wreg]
  2332                           ;UART_send_char@bt stored from wreg
  2333  0348  00F0               	movwf	UART_send_char@bt
  2334  0349                     i1l1174:
  2335  0349                     i1l245:	
  2336                           ;final.c: 282: ;final.c: 283:     TRISC6 = 1;;final.c: 284:     TRISC7 = 1;
  2337                           
  2338  0349  1683               	bsf	3,5	;RP0=1, select bank1
  2339  034A  1303               	bcf	3,6	;RP1=0, select bank1
  2340  034B  1C98               	btfss	24,1	;volatile
  2341  034C  2B4E               	goto	u42_21
  2342  034D  2B4F               	goto	u42_20
  2343  034E                     u42_21:
  2344  034E  2B49               	goto	i1l245
  2345  034F                     u42_20:
  2346  034F                     i1l1176:
  2347                           
  2348                           ;final.c: 285: 
  2349  034F  0870               	movf	UART_send_char@bt,w
  2350  0350  1283               	bcf	3,5	;RP0=0, select bank0
  2351  0351  1303               	bcf	3,6	;RP1=0, select bank0
  2352  0352  0099               	movwf	25	;volatile
  2353  0353                     i1l248:
  2354  0353  0008               	return
  2355  0354                     __end_of_UART_send_char:
  2356  007E                     btemp	set	126	;btemp
  2357  007E                     wtemp0	set	126
  2358                           
  2359                           	psect	config
  2360                           
  2361                           ;Config register CONFIG @ 0x2007
  2362                           ;	Oscillator Selection bits
  2363                           ;	FOSC = HS, HS oscillator
  2364                           ;	Watchdog Timer Enable bit
  2365                           ;	WDTE = OFF, WDT disabled
  2366                           ;	Power-up Timer Enable bit
  2367                           ;	PWRTE = ON, PWRT enabled
  2368                           ;	Brown-out Reset Enable bit
  2369                           ;	BOREN = ON, BOR enabled
  2370                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2371                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2372                           ;	Data EEPROM Memory Code Protection bit
  2373                           ;	CPD = OFF, Data EEPROM code protection off
  2374                           ;	Flash Program Memory Write Enable bits
  2375                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2376                           ;	In-Circuit Debugger Mode bit
  2377                           ;	DEBUG = 0x1, unprogrammed default
  2378                           ;	Flash Program Memory Code Protection bit
  2379                           ;	CP = OFF, Code protection off
  2380  2007                     	org	8199
  2381  2007  3F72               	dw	16242

Data Sizes:
    Strings     7
    Constant    0
    Data        3
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     18      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_setPWM_DutyCycle
    i1_setPWM_DutyCycle->i1_ADC_Read
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    _main->_setPWM_DutyCycle
    _setPWM_DutyCycle->_ADC_Read

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     699
                                             15 BANK0      3     3      0
                           _ADC_Init
                           _ADC_Read
                        _EEPROM_Read
                       _EEPROM_Write
                        _config_UART
                           _init_PWM
                   _setPWM_DutyCycle
 ---------------------------------------------------------------------------------
 (1) _setPWM_DutyCycle                                     4     2      2     220
                                             11 BANK0      4     2      2
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_UART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         2     1      1     346
                                              5 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          1     1      0      22
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             6     4      2     111
                                              5 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0     429
                                              0 BANK0      5     5      0
                   _UART_send_string
                         i1_ADC_Read
                     i1_EEPROM_Write
                 i1_setPWM_DutyCycle
 ---------------------------------------------------------------------------------
 (3) i1_setPWM_DutyCycle                                   4     2      2      96
                                              6 COMMON     4     2      2
                         i1_ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (3) i1_EEPROM_Write                                       2     1      1     122
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (3) i1_ADC_Read                                           6     4      2     111
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _UART_send_string                                     2     2      0     100
                                              1 COMMON     2     2      0
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (4) _UART_send_char                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _EEPROM_Read
   _EEPROM_Write
   _config_UART
   _init_PWM
   _setPWM_DutyCycle
     _ADC_Read (ARG)

 _ISR (ROOT)
   _UART_send_string
     _UART_send_char
   i1_ADC_Read
   i1_EEPROM_Write
   i1_setPWM_DutyCycle
     i1_ADC_Read (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      19       5       31.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      27      12        0.0%
ABS                  0      0      27       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sat Jun 04 17:21:34 2022

                          pc 0002                           _WR 0C61                           fsr 0004  
          ?_setPWM_DutyCycle 002B           _flag_timer_servor1 0035           _flag_timer_servor2 0034  
                ?i1_ADC_Read 0070                          l200 00D4                          l202 00D5  
                        l224 033A                          l242 0305                          l227 01AF  
                        l235 024F                          l228 01F7                          l260 032C  
                        l236 026D                          l229 01E7                          l237 0254  
                        l238 0259                          l263 0277                          l239 0273  
                        l257 02D0                          l266 0296                          _GIE 005F  
                        _RA3 002B                          _RA4 002C                          _RA5 002D  
                        _RB4 0034                          _RB5 0035                          _RD1 0041  
                        _RD2 0042                          _RC5 003D                          u500 01DA  
                        u501 01D6                          u430 01AC                          _PR2 0092  
                        u431 01AB                          u520 01EB                          u440 01B6  
                        u521 01EA                          u441 01B2                          u514 01DD  
                        u530 02F5                          u531 02F1                          u700 0096  
                        _ISR 00FF                          u701 0092                          u470 01C8  
                        u454 01B9                          u550 027D                          u471 01C4  
                        u551 027C                          u544 02F8                          u720 00B0  
                        u465 01BC                          u721 00AF                          u730 00C5  
                        u714 0099                          u731 00C4                          u484 01CB  
                        u740 00DB                          u741 00DA                          u750 00EF  
                        u495 01CE                          u751 00EE                          u837 00B9  
                        u847 00E3                          u857 01E1                          _RX9 00C6  
                        _TX9 04C6                          fsr0 0004           ??_setPWM_DutyCycle 002D  
                       ?_ISR 0070                         l1200 02C2                         l1210 02CB  
                       l1202 02C3                         l1220 0328                         l1212 02CC  
                       l1204 02C4                         l1230 01B9                         l1214 02CD  
                       l1206 02C7                         l1310 0038                         l1232 01DD  
                       l1224 01A6                         l1216 0321                         l1208 02CA  
                       l1240 02EC                         l1320 0063                         l1312 003D  
                       l1234 01E4                         l1226 01AC                         l1218 0325  
                       l1250 028C                         l1242 02F9                         l1330 006D  
                       l1322 0066                         l1314 0042                         l1236 01EB  
                       l1260 0295                         l1252 028D                         l1244 0277  
                       l1180 0247                         l1340 0076                         l1332 006E  
                       l1324 0069                         l1316 004D                         l1308 0033  
                       l1254 0292                         l1246 027D                         l1190 02B6  
                       l1182 025D                         l1350 007B                         l1342 0077  
                       l1334 0070                         l1326 006B                         l1318 0058  
                       l1256 0293                         l1248 0289                         l1192 02B9  
                       l1184 026F                         l1360 0080                         l1352 007C  
                       l1344 0078                         l1336 0072                         l1328 006C  
                       l1178 032D                         l1258 0294                         l1194 02BB  
                       l1370 0089                         l1362 0083                         l1354 007D  
                       l1346 0079                         l1338 0073                         l1196 02BC  
                       l1380 00B0                         l1372 008C                         l1364 0084  
                       l1356 007E                         l1348 007A                         l1198 02BF  
                       l1390 00DB                         l1382 00B1                         l1374 008D  
                       l1366 0085                         l1358 007F                         l1392 00E9  
                       l1384 00BF                         l1376 0099                         l1368 0088  
                       l1490 0262                         l1394 00EF                         l1386 00C5  
                       l1378 00AA                         l1396 00F1                         l1388 00C9  
                       _ADFM 04FF                         _ADON 00F8                         _CHS0 00FB  
                       _CHS1 00FC                         _CHS2 00FD                         STR_1 0341  
                       _BRGH 04C2                         _CREN 00C4                         _PEIE 005E  
                       _INTE 005C                         _INTF 0059                         _RCIE 0465  
                       _RCIF 0065                         _TMR1 000E                         _SPEN 00C7  
                       _TRMT 04C1                         _TXEN 04C5                         _SYNC 04C4  
                       _main 0033                         btemp 007E             __end_of_ADC_Init 033B  
           __end_of_ADC_Read 01F8                         start 0012                        ??_ISR 0020  
  __size_of_UART_send_string 001F         __end_of_EEPROM_Write 0297  __size_ofi1_setPWM_DutyCycle 0018  
                      _ADCS0 00FE                        _ADCS1 00FF                        _ADCS2 04FE  
                      ?_main 0070                        _CCP1X 00BD                        _CCP1Y 00BC  
                      _EEADR 010D                        _EEPGD 0C67                        _PCFG0 04F8  
                      _PCFG1 04F9                        _PCFG2 04FA                        _PCFG3 04FB  
                      i1l221 0198                        i1l242 031D                        i1l227 0202  
                      i1l228 0246                        i1l245 0349                        i1l229 0238  
                      i1l254 02B5                        i1l263 02D2                        i1l248 0353  
                      i1l266 02EB                        _RCREG 001A                        _TMR1H 000F  
                      _TMR1L 000E                        u42_20 034F                        u42_21 034E  
                      _SPBRG 0099                        u60_25 020F                        u61_20 021B  
                      u61_21 0217                        u62_24 021E                        u63_25 0221  
                      u56_20 02B5                        u64_20 022D                        u80_20 0139  
                      u56_21 02B4                        u64_21 0229                        u80_21 0138  
                      u57_20 01FF                        u81_20 0157                        u57_21 01FE  
                      u81_21 0156                        u65_24 0230                        u66_20 023C  
                      u58_20 0209                        u82_20 0171                        u66_21 023B  
                      u58_21 0205                        u82_21 0170                        u67_20 030D  
                      u67_21 0309                        u59_24 020C                        u76_20 0103  
                      u76_21 0102                        u68_24 0310                        u69_20 02D8  
                      u77_20 010D                        u69_21 02D7                        u77_21 010C  
                      u78_20 0117                        u78_21 0116                        u86_27 0232  
                      u79_20 012F                        u79_21 012E                        _TXREG 0019  
                      pclath 000A                        status 0003                        wtemp0 007E  
           EEPROM_Write@Data 0025          __size_ofi1_ADC_Read 004F         __size_of_EEPROM_Read 000F  
            __initialization 0015                 __end_of_main 00FF                       ??_main 002F  
                     _CCP1M2 00BA                       _CCP1M3 00BB                       _ADRESH 001E  
                     _ADRESL 009E                       _EEDATA 010C                       _CCPR1L 0015  
                     _EECON2 018D                       i1l1300 02E7                       i1l1302 02E8  
                     i1l1304 02E9                       i1l1400 0103                       i1l1306 02EA  
                     i1l1402 010D                       i1l1410 0113                       i1l1412 0117  
                     i1l1420 0129                       i1l1404 010E                       i1l1174 0349  
                     i1l1262 0298                       i1l1270 01F9                       i1l1430 0147  
                     i1l1422 012F                       i1l1414 011F                       i1l1406 0110  
                     i1l1176 034F                       i1l1264 0299                       i1l1280 0235  
                     i1l1272 01FF                       i1l1440 0157                       i1l1432 014B  
                     i1l1424 0133                       i1l1416 0122                       i1l1408 0112  
                     i1l1266 02A5                       i1l1282 023C                       i1l1290 02D2  
                     i1l1442 015B                       i1l1434 014C                       i1l1426 0139  
                     i1l1418 0128                       i1l1268 02A9                       i1l1276 020C  
                     i1l1292 02D8                       i1l1460 0182                       i1l1444 0165  
                     i1l1452 016B                       i1l1436 014E                       i1l1428 013D  
                     i1l1278 0230                       i1l1294 02DE                       i1l1286 0306  
                     i1l1454 0171                       i1l1446 0168                       i1l1462 0183  
                     i1l1438 0151                       i1l1296 02E1                       i1l1288 0311  
                     i1l1464 0185                       i1l1456 0175                       i1l1298 02E2  
                     i1l1466 0194                       i1l1458 017F                       i1l1468 0195  
                     i1l1398 00FF                       _INTEDG 040E                       _TMR1IE 0460  
                     _TMR1IF 0060                       _TMR1CS 0081                       _TMR1ON 0080  
                     _TMR2ON 0092                       _TRISA0 0428                       _TRISB0 0430  
                     _TRISA3 042B                       _TRISA4 042C                       _TRISA5 042D  
                     _TRISD0 0440                       _TRISB4 0434                       _TRISC2 043A  
                     _TRISC3 043B                       _TRISB5 0435                       _TRISC5 043D  
                     _TRISC6 043E                       _TRISC7 043F      __size_ofi1_EEPROM_Write 001B  
                     _B_rate 0036         __size_of_config_UART 001B             __end_of_init_PWM 0274  
                     _result 007C                    ?_ADC_Init 0070                    ?_ADC_Read 0025  
                     saved_w 007E      __end_of__initialization 002F        __size_of_EEPROM_Write 0023  
             __pcstackCOMMON 0070                 __pidataBANK0 0354             _UART_send_string 0297  
               ??i1_ADC_Read 0072                   ??_ADC_Init 0025                   ??_ADC_Read 0027  
         i1EEPROM_Write@Data 0070                 _EEPROM_Write 0274                   __pbssBANK0 0032  
  __size_of_setPWM_DutyCycle 001A           __end_ofi1_ADC_Read 0247                   __pmaintext 0033  
        ADC_Read@ADC_channel 002A                   __pintentry 0004                   _flag_trans 0033  
                    _T1CKPS0 0084                      _T1CKPS1 0085                      _T2CKPS0 0090  
                    _T2CKPS1 0091                      _GO_DONE 00FA      __size_of_UART_send_char 000C  
                 __stringtab 033B                    ?_init_PWM 0070               i1_EEPROM_Write 02D1  
 __end_ofi1_setPWM_DutyCycle 031E                      _flag_dc 0038                      __ptext1 02EC  
                    __ptext2 0247                      __ptext3 02B6                      __ptext4 0274  
                    __ptext5 031E                      __ptext6 01A3                      __ptext7 032D  
                    __ptext8 00FF                      __ptext9 0306                 __size_of_ISR 00A4  
      i1EEPROM_Write@Address 0071         end_of_initialization 002F       __end_ofi1_EEPROM_Write 02EC  
                 ??_init_PWM 0025                ??_EEPROM_Read 0025         i1setPWM_DutyCycle@DC 0076  
          __size_of_ADC_Init 000E            __size_of_ADC_Read 0055     __end_of_UART_send_string 02B6  
            ?i1_EEPROM_Write 0070             _setPWM_DutyCycle 02EC                ??_config_UART 0025  
        __end_of_EEPROM_Read 032D          start_initialization 0015               _UART_send_char 0348  
                __end_of_ISR 01A3          __end_of_config_UART 02D1                  __pdataBANK0 0036  
             ADC_Read@result 0028       __end_of_UART_send_char 0354                  __pbssCOMMON 007A  
                  ___latbits 0002                __pcstackBANK0 0020                  _EEPROM_Read 031E  
          __size_of_init_PWM 002D             UART_send_char@bt 0070                    __pstrings 033B  
            ?_UART_send_char 0070                     _ADC_Init 032D                     _ADC_Read 01A3  
                  _count_sp1 0032                    _count_sp2 007B                    _count_sp3 007A  
         i1_setPWM_DutyCycle 0306          ?i1_setPWM_DutyCycle 0076            interrupt_function 0004  
                _config_UART 02B6         ??i1_setPWM_DutyCycle 0078     __end_of_setPWM_DutyCycle 0306  
                __stringbase 0340        UART_send_string@st_pt 0072             ??i1_EEPROM_Write 0071  
         setPWM_DutyCycle@DC 002B            ?_UART_send_string 0070           ??_UART_send_string 0071  
                 _EECON1bits 018C        i1ADC_Read@ADC_channel 0075           __end_of__stringtab 0341  
                   __ptext10 02D1                     __ptext11 01F8                     __ptext12 0297  
                   __ptext13 0348                ?_EEPROM_Write 0025                     _counter0 007D  
                   _init_PWM 0247                __size_of_main 00CC                   i1_ADC_Read 01F8  
         EEPROM_Read@Address 0025               ??_EEPROM_Write 0026             i1ADC_Read@result 0073  
                   intlevel1 0000                 ?_EEPROM_Read 0070                    stringcode 033B  
           ??_UART_send_char 0070          EEPROM_Write@Address 0026                     stringdir 033B  
                   stringtab 033B                 ?_config_UART 0070  
