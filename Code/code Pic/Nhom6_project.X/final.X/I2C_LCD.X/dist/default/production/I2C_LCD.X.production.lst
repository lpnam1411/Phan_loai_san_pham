

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Jun 08 18:01:21 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.30
    51                           ; Generated 26/08/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F877A Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  009F                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0094                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009C                     	;# 
   256  009D                     	;# 
   257  009E                     	;# 
   258  009F                     	;# 
   259  010C                     	;# 
   260  010D                     	;# 
   261  010E                     	;# 
   262  010F                     	;# 
   263  018C                     	;# 
   264  018D                     	;# 
   265                           
   266                           	psect	idataCOMMON
   267  06FA                     __pidataCOMMON:
   268                           
   269                           ;initializer for _pos
   270  06FA  3402               	retlw	2
   271                           
   272                           	psect	idataBANK0
   273  06EE                     __pidataBANK0:
   274                           
   275                           ;initializer for _B_rate
   276  06EE  3480               	retlw	128
   277  06EF  3425               	retlw	37
   278                           
   279                           ;initializer for _flag_dc
   280  06F0  3401               	retlw	1
   281                           
   282                           ;initializer for _LCD_SWAP
   283  06F1  3401               	retlw	1
   284                           
   285                           ;initializer for _OpenServo
   286  06F2  3401               	retlw	1
   287                           
   288                           ;initializer for _BackLight_State
   289  06F3  3408               	retlw	8
   290                           
   291                           	psect	nvBANK0
   292  004B                     __pnvBANK0:
   293  004B                     _i2c_add:
   294  004B                     	ds	1
   295  0019                     _TXREG	set	25
   296  0015                     _CCPR1L	set	21
   297  001E                     _ADRESH	set	30
   298  001A                     _RCREG	set	26
   299  0001                     _TMR0	set	1
   300  0013                     _SSPBUF	set	19
   301  0014                     _SSPCON	set	20
   302  00C6                     _RX9	set	198
   303  005E                     _PEIE	set	94
   304  00C4                     _CREN	set	196
   305  00C7                     _SPEN	set	199
   306  005C                     _INTE	set	92
   307  00BD                     _CCP1X	set	189
   308  00BC                     _CCP1Y	set	188
   309  0092                     _TMR2ON	set	146
   310  0091                     _T2CKPS1	set	145
   311  0090                     _T2CKPS0	set	144
   312  00BB                     _CCP1M3	set	187
   313  00BA                     _CCP1M2	set	186
   314  00FA                     _GO_DONE	set	250
   315  00FD                     _CHS2	set	253
   316  00FC                     _CHS1	set	252
   317  00FB                     _CHS0	set	251
   318  00F8                     _ADON	set	248
   319  00FF                     _ADCS1	set	255
   320  00FE                     _ADCS0	set	254
   321  005D                     _T0IE	set	93
   322  005F                     _GIE	set	95
   323  0065                     _RCIF	set	101
   324  0059                     _INTF	set	89
   325  005A                     _T0IF	set	90
   326  0032                     _RB2	set	50
   327  0031                     _RB1	set	49
   328  0035                     _RB5	set	53
   329  0036                     _RB6	set	54
   330  0063                     _SSPIF	set	99
   331  0099                     _SPBRG	set	153
   332  0092                     _PR2	set	146
   333  009E                     _ADRESL	set	158
   334  0093                     _SSPADD	set	147
   335  0094                     _SSPSTAT	set	148
   336  0091                     _SSPCON2	set	145
   337  04C6                     _TX9	set	1222
   338  0465                     _RCIE	set	1125
   339  04C5                     _TXEN	set	1221
   340  043F                     _TRISC7	set	1087
   341  043E                     _TRISC6	set	1086
   342  04C4                     _SYNC	set	1220
   343  04C2                     _BRGH	set	1218
   344  04C1                     _TRMT	set	1217
   345  040E                     _INTEDG	set	1038
   346  043A                     _TRISC2	set	1082
   347  04FB                     _PCFG3	set	1275
   348  04FA                     _PCFG2	set	1274
   349  04F9                     _PCFG1	set	1273
   350  04F8                     _PCFG0	set	1272
   351  04FE                     _ADCS2	set	1278
   352  04FF                     _ADFM	set	1279
   353  040D                     _T0CS	set	1037
   354  0408                     _PS0	set	1032
   355  0409                     _PS1	set	1033
   356  040A                     _PS2	set	1034
   357  040B                     _PSA	set	1035
   358  0430                     _TRISB0	set	1072
   359  0432                     _TRISB2	set	1074
   360  0431                     _TRISB1	set	1073
   361  0428                     _TRISA0	set	1064
   362  0435                     _TRISB5	set	1077
   363  0436                     _TRISB6	set	1078
   364  048E                     _ACKSTAT	set	1166
   365  048A                     _PEN	set	1162
   366  0488                     _SEN	set	1160
   367  043C                     _TRISC4	set	1084
   368  043B                     _TRISC3	set	1083
   369  010C                     _EEDATA	set	268
   370  010D                     _EEADR	set	269
   371  018D                     _EECON2	set	397
   372  018C                     _EECON1bits	set	396
   373  0C61                     _WR	set	3169
   374  0C67                     _EEPGD	set	3175
   375                           
   376                           	psect	strings
   377  04B5                     __pstrings:
   378  04B5                     stringtab:
   379  04B5                     __stringtab:
   380  04B5                     stringcode:	
   381                           ;	String table - string pointers are 1 byte each
   382                           
   383  04B5                     stringdir:
   384  04B5  3004               	movlw	high stringdir
   385  04B6  008A               	movwf	10
   386  04B7  0804               	movf	4,w
   387  04B8  0A84               	incf	4,f
   388  04B9  0782               	addwf	2,f
   389  04BA                     __stringbase:
   390  04BA  3400               	retlw	0
   391  04BB                     __end_of__stringtab:
   392  04BB                     STR_1:
   393  04BB  3420               	retlw	32	;' '
   394  04BC  3420               	retlw	32	;' '
   395  04BD  3420               	retlw	32	;' '
   396  04BE  3420               	retlw	32	;' '
   397  04BF  3456               	retlw	86	;'V'
   398  04C0  3449               	retlw	73	;'I'
   399  04C1  3420               	retlw	32	;' '
   400  04C2  3458               	retlw	88	;'X'
   401  04C3  3455               	retlw	85	;'U'
   402  04C4  3420               	retlw	32	;' '
   403  04C5  344C               	retlw	76	;'L'
   404  04C6  3459               	retlw	89	;'Y'
   405  04C7  3420               	retlw	32	;' '
   406  04C8  3420               	retlw	32	;' '
   407  04C9  3420               	retlw	32	;' '
   408  04CA  3420               	retlw	32	;' '
   409  04CB  3400               	retlw	0
   410  04CC                     STR_2:
   411  04CC  3420               	retlw	32	;' '
   412  04CD  3420               	retlw	32	;' '
   413  04CE  3420               	retlw	32	;' '
   414  04CF  3454               	retlw	84	;'T'
   415  04D0  3441               	retlw	65	;'A'
   416  04D1  344E               	retlw	78	;'N'
   417  04D2  3420               	retlw	32	;' '
   418  04D3  344D               	retlw	77	;'M'
   419  04D4  3441               	retlw	65	;'A'
   420  04D5  3449               	retlw	73	;'I'
   421  04D6  3420               	retlw	32	;' '
   422  04D7  344E               	retlw	78	;'N'
   423  04D8  3441               	retlw	65	;'A'
   424  04D9  344D               	retlw	77	;'M'
   425  04DA  3420               	retlw	32	;' '
   426  04DB  3420               	retlw	32	;' '
   427  04DC  3400               	retlw	0
   428  04DD                     STR_3:
   429  04DD  3420               	retlw	32	;' '
   430  04DE  3444               	retlw	68	;'D'
   431  04DF  3446               	retlw	70	;'F'
   432  04E0  3453               	retlw	83	;'S'
   433  04E1  3420               	retlw	32	;' '
   434  04E2  3420               	retlw	32	;' '
   435  04E3  3449               	retlw	73	;'I'
   436  04E4  3432               	retlw	50	;'2'
   437  04E5  3443               	retlw	67	;'C'
   438  04E6  3420               	retlw	32	;' '
   439  04E7  3420               	retlw	32	;' '
   440  04E8  3443               	retlw	67	;'C'
   441  04E9  3452               	retlw	82	;'R'
   442  04EA  3443               	retlw	67	;'C'
   443  04EB  3420               	retlw	32	;' '
   444  04EC  3400               	retlw	0
   445  04ED                     STR_4:
   446  04ED  3463               	retlw	99	;'c'
   447  04EE  3468               	retlw	104	;'h'
   448  04EF  3465               	retlw	101	;'e'
   449  04F0  3463               	retlw	99	;'c'
   450  04F1  346B               	retlw	107	;'k'
   451  04F2  340A               	retlw	10
   452  04F3  3400               	retlw	0
   453                           
   454                           	psect	cinit
   455  0015                     start_initialization:	
   456                           ; #config settings
   457                           
   458  0015                     __initialization:
   459                           
   460                           ; Initialize objects allocated to BANK0
   461  0015  120A  118A  26EE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   462  001A  00C5               	movwf	__pdataBANK0& (0+127)
   463  001B  120A  118A  26EF  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   464  0020  00C6               	movwf	(__pdataBANK0+1)& (0+127)
   465  0021  120A  118A  26F0  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   466  0026  00C7               	movwf	(__pdataBANK0+2)& (0+127)
   467  0027  120A  118A  26F1  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   468  002C  00C8               	movwf	(__pdataBANK0+3)& (0+127)
   469  002D  120A  118A  26F2  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   470  0032  00C9               	movwf	(__pdataBANK0+4)& (0+127)
   471  0033  120A  118A  26F3  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   472  0038  00CA               	movwf	(__pdataBANK0+5)& (0+127)
   473                           
   474                           ; Initialize objects allocated to COMMON
   475  0039  120A  118A  26FA  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   476  003E  00FD               	movwf	__pdataCOMMON& (0+127)
   477                           
   478                           ; Clear objects allocated to BANK0
   479  003F  01BD               	clrf	__pbssBANK0& (0+127)
   480  0040  01BE               	clrf	(__pbssBANK0+1)& (0+127)
   481  0041  01BF               	clrf	(__pbssBANK0+2)& (0+127)
   482  0042  01C0               	clrf	(__pbssBANK0+3)& (0+127)
   483  0043  01C1               	clrf	(__pbssBANK0+4)& (0+127)
   484  0044  01C2               	clrf	(__pbssBANK0+5)& (0+127)
   485  0045  01C3               	clrf	(__pbssBANK0+6)& (0+127)
   486  0046  01C4               	clrf	(__pbssBANK0+7)& (0+127)
   487                           
   488                           ; Clear objects allocated to COMMON
   489  0047  01FA               	clrf	__pbssCOMMON& (0+127)
   490  0048  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   491  0049  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   492  004A                     end_of_initialization:	
   493                           ;End of C runtime variable initialization code
   494                           
   495  004A                     __end_of__initialization:
   496  004A  0183               	clrf	3
   497  004B  120A  118A  284E   	ljmp	_main	;jump to C main() function
   498                           
   499                           	psect	bssCOMMON
   500  007A                     __pbssCOMMON:
   501  007A                     _result:
   502  007A                     	ds	1
   503  007B                     _cnt_pos:
   504  007B                     	ds	1
   505  007C                     _SelectServo:
   506  007C                     	ds	1
   507                           
   508                           	psect	dataCOMMON
   509  007D                     __pdataCOMMON:
   510  007D                     _pos:
   511  007D                     	ds	1
   512                           
   513                           	psect	bssBANK0
   514  003D                     __pbssBANK0:
   515  003D                     _cnt_time_delay:
   516  003D                     	ds	2
   517  003F                     _count_sp3:
   518  003F                     	ds	1
   519  0040                     _count_sp2:
   520  0040                     	ds	1
   521  0041                     _count_sp1:
   522  0041                     	ds	1
   523  0042                     _flag_trans:
   524  0042                     	ds	1
   525  0043                     _flag_tmp:
   526  0043                     	ds	1
   527  0044                     _RS:
   528  0044                     	ds	1
   529                           
   530                           	psect	dataBANK0
   531  0045                     __pdataBANK0:
   532  0045                     _B_rate:
   533  0045                     	ds	2
   534  0047                     _flag_dc:
   535  0047                     	ds	1
   536  0048                     _LCD_SWAP:
   537  0048                     	ds	1
   538  0049                     _OpenServo:
   539  0049                     	ds	1
   540  004A                     _BackLight_State:
   541  004A                     	ds	1
   542                           
   543                           	psect	cstackCOMMON
   544  0070                     __pcstackCOMMON:
   545  0070                     ?_IO_Expander_Write:
   546  0070                     ?_LCD_CMD:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_Servo_Init:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_ADC_Init:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_init_PWM:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_IR_Init:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_config_UART:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_EEPROM_Read:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_UART_send_string:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_EEPROM_Write:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_I2C_Master_Init:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_I2C_Master_Wait:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_I2C_Master_Start:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_I2C_Master_Stop:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_I2C_Master_Write:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_LCD_Init:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_LCD_Write_4Bit:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_LCD_Write_Char:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_LCD_Write_String:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_LCD_Clear:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_main:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_IRS:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_UART_send_char:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ??_UART_send_char:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?i1_ADC_Read:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     UART_send_char@bt:	
   619                           ; 2 bytes @ 0x0
   620                           
   621  0070                     EEPROM_Write@Data:	
   622                           ; 1 bytes @ 0x0
   623                           
   624                           
   625                           ; 1 bytes @ 0x0
   626  0070                     	ds	1
   627  0071                     ??_UART_send_string:
   628  0071                     ??_EEPROM_Write:	
   629                           ; 1 bytes @ 0x1
   630                           
   631  0071                     EEPROM_Write@Address:	
   632                           ; 1 bytes @ 0x1
   633                           
   634                           
   635                           ; 1 bytes @ 0x1
   636  0071                     	ds	1
   637  0072                     ??i1_ADC_Read:
   638  0072                     UART_send_string@st_pt:	
   639                           ; 1 bytes @ 0x2
   640                           
   641                           
   642                           ; 1 bytes @ 0x2
   643  0072                     	ds	1
   644  0073                     i1ADC_Read@result:
   645                           
   646                           ; 2 bytes @ 0x3
   647  0073                     	ds	2
   648  0075                     i1ADC_Read@ADC_channel:
   649                           
   650                           ; 1 bytes @ 0x5
   651  0075                     	ds	1
   652  0076                     ?i1_setPWM_DutyCycle:
   653  0076                     i1setPWM_DutyCycle@DC:	
   654                           ; 1 bytes @ 0x6
   655                           
   656                           
   657                           ; 2 bytes @ 0x6
   658  0076                     	ds	2
   659  0078                     ??i1_setPWM_DutyCycle:
   660                           
   661                           ; 1 bytes @ 0x8
   662  0078                     	ds	2
   663                           
   664                           	psect	cstackBANK0
   665  0020                     __pcstackBANK0:
   666  0020                     ??_IRS:
   667                           
   668                           ; 1 bytes @ 0x0
   669  0020                     	ds	8
   670  0028                     ??_Servo_Init:
   671  0028                     ??_ADC_Init:	
   672                           ; 1 bytes @ 0x8
   673                           
   674  0028                     ??_init_PWM:	
   675                           ; 1 bytes @ 0x8
   676                           
   677  0028                     ??_IR_Init:	
   678                           ; 1 bytes @ 0x8
   679                           
   680  0028                     ??_config_UART:	
   681                           ; 1 bytes @ 0x8
   682                           
   683  0028                     ??_EEPROM_Read:	
   684                           ; 1 bytes @ 0x8
   685                           
   686  0028                     ??_I2C_Master_Init:	
   687                           ; 1 bytes @ 0x8
   688                           
   689  0028                     ??_I2C_Master_Wait:	
   690                           ; 1 bytes @ 0x8
   691                           
   692  0028                     ??_I2C_Master_Start:	
   693                           ; 1 bytes @ 0x8
   694                           
   695  0028                     ??_I2C_Master_Stop:	
   696                           ; 1 bytes @ 0x8
   697                           
   698  0028                     ??_I2C_Master_Write:	
   699                           ; 1 bytes @ 0x8
   700                           
   701  0028                     ?_ADC_Read:	
   702                           ; 1 bytes @ 0x8
   703                           
   704  0028                     ?___awdiv:	
   705                           ; 2 bytes @ 0x8
   706                           
   707  0028                     ?___awmod:	
   708                           ; 2 bytes @ 0x8
   709                           
   710  0028                     I2C_Master_Write@data:	
   711                           ; 2 bytes @ 0x8
   712                           
   713  0028                     EEPROM_Read@Address:	
   714                           ; 1 bytes @ 0x8
   715                           
   716  0028                     ___awdiv@divisor:	
   717                           ; 1 bytes @ 0x8
   718                           
   719  0028                     ___awmod@divisor:	
   720                           ; 2 bytes @ 0x8
   721                           
   722                           
   723                           ; 2 bytes @ 0x8
   724  0028                     	ds	1
   725  0029                     ??_IO_Expander_Write:
   726  0029                     IO_Expander_Write@Data:	
   727                           ; 1 bytes @ 0x9
   728                           
   729                           
   730                           ; 1 bytes @ 0x9
   731  0029                     	ds	1
   732  002A                     ??_ADC_Read:
   733  002A                     ??_LCD_Write_4Bit:	
   734                           ; 1 bytes @ 0xA
   735                           
   736  002A                     ___awdiv@dividend:	
   737                           ; 1 bytes @ 0xA
   738                           
   739  002A                     ___awmod@dividend:	
   740                           ; 2 bytes @ 0xA
   741                           
   742                           
   743                           ; 2 bytes @ 0xA
   744  002A                     	ds	1
   745  002B                     LCD_Write_4Bit@Nibble:
   746  002B                     ADC_Read@result:	
   747                           ; 1 bytes @ 0xB
   748                           
   749                           
   750                           ; 2 bytes @ 0xB
   751  002B                     	ds	1
   752  002C                     ??_LCD_CMD:
   753  002C                     ??_LCD_Write_Char:	
   754                           ; 1 bytes @ 0xC
   755                           
   756  002C                     ??___awdiv:	
   757                           ; 1 bytes @ 0xC
   758                           
   759  002C                     ??___awmod:	
   760                           ; 1 bytes @ 0xC
   761                           
   762                           
   763                           ; 1 bytes @ 0xC
   764  002C                     	ds	1
   765  002D                     LCD_CMD@CMD:
   766  002D                     LCD_Write_Char@Data:	
   767                           ; 1 bytes @ 0xD
   768                           
   769  002D                     ADC_Read@ADC_channel:	
   770                           ; 1 bytes @ 0xD
   771                           
   772  002D                     ___awdiv@counter:	
   773                           ; 1 bytes @ 0xD
   774                           
   775  002D                     ___awmod@counter:	
   776                           ; 1 bytes @ 0xD
   777                           
   778                           
   779                           ; 1 bytes @ 0xD
   780  002D                     	ds	1
   781  002E                     ?_setPWM_DutyCycle:
   782  002E                     ??_LCD_Init:	
   783                           ; 1 bytes @ 0xE
   784                           
   785  002E                     ??_LCD_Write_String:	
   786                           ; 1 bytes @ 0xE
   787                           
   788  002E                     ?_LCD_Set_Cursor:	
   789                           ; 1 bytes @ 0xE
   790                           
   791  002E                     ??_LCD_Clear:	
   792                           ; 1 bytes @ 0xE
   793                           
   794  002E                     LCD_Set_Cursor@COL:	
   795                           ; 1 bytes @ 0xE
   796                           
   797  002E                     ___awdiv@sign:	
   798                           ; 1 bytes @ 0xE
   799                           
   800  002E                     ___awmod@sign:	
   801                           ; 1 bytes @ 0xE
   802                           
   803  002E                     LCD_Write_String@i:	
   804                           ; 1 bytes @ 0xE
   805                           
   806  002E                     setPWM_DutyCycle@DC:	
   807                           ; 2 bytes @ 0xE
   808                           
   809                           
   810                           ; 2 bytes @ 0xE
   811  002E                     	ds	1
   812  002F                     ??_LCD_Set_Cursor:
   813  002F                     ___awdiv@quotient:	
   814                           ; 1 bytes @ 0xF
   815                           
   816                           
   817                           ; 2 bytes @ 0xF
   818  002F                     	ds	1
   819  0030                     ??_setPWM_DutyCycle:
   820  0030                     LCD_Write_String@Str:	
   821                           ; 1 bytes @ 0x10
   822                           
   823                           
   824                           ; 1 bytes @ 0x10
   825  0030                     	ds	1
   826  0031                     LCD_Init@I2C_Add:
   827  0031                     LCD_Set_Cursor@ROW:	
   828                           ; 1 bytes @ 0x11
   829                           
   830                           
   831                           ; 1 bytes @ 0x11
   832  0031                     	ds	1
   833  0032                     ?_LCD_Write:
   834  0032                     LCD_Write@x:	
   835                           ; 1 bytes @ 0x12
   836                           
   837                           
   838                           ; 1 bytes @ 0x12
   839  0032                     	ds	1
   840  0033                     LCD_Write@y:
   841                           
   842                           ; 1 bytes @ 0x13
   843  0033                     	ds	1
   844  0034                     ??_LCD_Write:
   845                           
   846                           ; 1 bytes @ 0x14
   847  0034                     	ds	3
   848  0037                     LCD_Write@i:
   849                           
   850                           ; 1 bytes @ 0x17
   851  0037                     	ds	1
   852  0038                     LCD_Write@c:
   853                           
   854                           ; 1 bytes @ 0x18
   855  0038                     	ds	1
   856  0039                     LCD_Write@y_:
   857                           
   858                           ; 1 bytes @ 0x19
   859  0039                     	ds	1
   860  003A                     LCD_Write@count_sp:
   861                           
   862                           ; 1 bytes @ 0x1A
   863  003A                     	ds	1
   864  003B                     ??_main:
   865                           
   866                           ; 1 bytes @ 0x1B
   867  003B                     	ds	2
   868                           
   869                           	psect	maintext
   870  004E                     __pmaintext:	
   871 ;;
   872 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   873 ;;
   874 ;; *************** function _main *****************
   875 ;; Defined at:
   876 ;;		line 76 in file "BTL_HIHI_main.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;		None
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  tmp             1    0        unsigned char 
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   885 ;; Tracked objects:
   886 ;;		On entry : B00/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   890 ;;      Params:         0       0       0       0       0
   891 ;;      Locals:         0       0       0       0       0
   892 ;;      Temps:          0       2       0       0       0
   893 ;;      Totals:         0       2       0       0       0
   894 ;;Total ram usage:        2 bytes
   895 ;; Hardware stack levels required when called:   10
   896 ;; This function calls:
   897 ;;		_ADC_Init
   898 ;;		_ADC_Read
   899 ;;		_EEPROM_Read
   900 ;;		_I2C_Master_Init
   901 ;;		_IR_Init
   902 ;;		_LCD_Clear
   903 ;;		_LCD_Init
   904 ;;		_LCD_Set_Cursor
   905 ;;		_LCD_Write
   906 ;;		_LCD_Write_String
   907 ;;		_Servo_Init
   908 ;;		_config_UART
   909 ;;		_init_PWM
   910 ;;		_setPWM_DutyCycle
   911 ;; This function is called by:
   912 ;;		Startup code after reset
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           
   917                           ;psect for function _main
   918  004E                     _main:
   919  004E                     l1890:	
   920                           ;incstack = 0
   921 ;; hardware stack exceeded
   922                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   923                           
   924                           
   925                           ;BTL_HIHI_main.c: 80:     I2C_Master_Init();
   926  004E  120A  118A  26B8  120A  118A  	fcall	_I2C_Master_Init
   927                           
   928                           ;BTL_HIHI_main.c: 83:     LCD_Init(0x4E);
   929  0053  304E               	movlw	78
   930  0054  120A  118A  2237  120A  118A  	fcall	_LCD_Init
   931  0059                     l1892:
   932                           
   933                           ;BTL_HIHI_main.c: 84:     LCD_Set_Cursor(1, 1);
   934  0059  1283               	bcf	3,5	;RP0=0, select bank0
   935  005A  1303               	bcf	3,6	;RP1=0, select bank0
   936  005B  01AE               	clrf	LCD_Set_Cursor@COL
   937  005C  0AAE               	incf	LCD_Set_Cursor@COL,f
   938  005D  3001               	movlw	1
   939  005E  120A  118A  254A  120A  118A  	fcall	_LCD_Set_Cursor
   940  0063                     l1894:
   941                           
   942                           ;BTL_HIHI_main.c: 85:     LCD_Write_String("    VI XU LY    ");
   943  0063  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   944  0064  120A  118A  2521  120A  118A  	fcall	_LCD_Write_String
   945  0069                     l1896:
   946                           
   947                           ;BTL_HIHI_main.c: 86:     LCD_Set_Cursor(2, 1);
   948  0069  1283               	bcf	3,5	;RP0=0, select bank0
   949  006A  1303               	bcf	3,6	;RP1=0, select bank0
   950  006B  01AE               	clrf	LCD_Set_Cursor@COL
   951  006C  0AAE               	incf	LCD_Set_Cursor@COL,f
   952  006D  3002               	movlw	2
   953  006E  120A  118A  254A  120A  118A  	fcall	_LCD_Set_Cursor
   954  0073                     l1898:
   955                           
   956                           ;BTL_HIHI_main.c: 87:     LCD_Write_String("   TAN MAI NAM  ");
   957  0073  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   958  0074  120A  118A  2521  120A  118A  	fcall	_LCD_Write_String
   959                           
   960                           ;BTL_HIHI_main.c: 88:     LCD_Clear();
   961  0079  120A  118A  268F  120A  118A  	fcall	_LCD_Clear
   962  007E                     l1900:
   963                           
   964                           ;BTL_HIHI_main.c: 91:     Servo_Init();
   965  007E  120A  118A  26D1  120A  118A  	fcall	_Servo_Init
   966  0083                     l1902:
   967                           
   968                           ;BTL_HIHI_main.c: 94:     ADC_Init();
   969  0083  120A  118A  269D  120A  118A  	fcall	_ADC_Init
   970  0088                     l1904:
   971                           
   972                           ;BTL_HIHI_main.c: 95:     init_PWM();
   973  0088  120A  118A  24F4  120A  118A  	fcall	_init_PWM
   974  008D                     l1906:
   975                           
   976                           ;BTL_HIHI_main.c: 98:     IR_Init();
   977  008D  120A  118A  26F4  120A  118A  	fcall	_IR_Init
   978  0092                     l1908:
   979                           
   980                           ;BTL_HIHI_main.c: 101:     config_UART();
   981  0092  120A  118A  2606  120A  118A  	fcall	_config_UART
   982  0097                     l1910:
   983                           
   984                           ;BTL_HIHI_main.c: 107:     TRISB6 = 0;
   985  0097  1683               	bsf	3,5	;RP0=1, select bank1
   986  0098  1303               	bcf	3,6	;RP1=0, select bank1
   987  0099  1306               	bcf	6,6	;volatile
   988  009A                     l1912:
   989                           
   990                           ;BTL_HIHI_main.c: 108:     TRISB5 = 0;
   991  009A  1286               	bcf	6,5	;volatile
   992  009B                     l1914:
   993                           
   994                           ;BTL_HIHI_main.c: 109:     RB6 = 1;
   995  009B  1283               	bcf	3,5	;RP0=0, select bank0
   996  009C  1303               	bcf	3,6	;RP1=0, select bank0
   997  009D  1706               	bsf	6,6	;volatile
   998  009E                     l1916:
   999                           
  1000                           ;BTL_HIHI_main.c: 110:     RB5 = 1;
  1001  009E  1686               	bsf	6,5	;volatile
  1002  009F                     l1918:
  1003                           
  1004                           ;BTL_HIHI_main.c: 113:     TRISA0 = 1;
  1005  009F  1683               	bsf	3,5	;RP0=1, select bank1
  1006  00A0  1303               	bcf	3,6	;RP1=0, select bank1
  1007  00A1  1405               	bsf	5,0	;volatile
  1008  00A2                     l1920:
  1009                           
  1010                           ;BTL_HIHI_main.c: 114:     TRISB1 = 0;
  1011  00A2  1086               	bcf	6,1	;volatile
  1012  00A3                     l1922:
  1013                           
  1014                           ;BTL_HIHI_main.c: 115:     TRISB2 = 0;
  1015  00A3  1106               	bcf	6,2	;volatile
  1016  00A4                     l1924:
  1017                           
  1018                           ;BTL_HIHI_main.c: 116:     RB1 = 0;
  1019  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1020  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1021  00A6  1086               	bcf	6,1	;volatile
  1022  00A7                     l1926:
  1023                           
  1024                           ;BTL_HIHI_main.c: 119:     TRISB0 = 1;
  1025  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  1026  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  1027  00A9  1406               	bsf	6,0	;volatile
  1028  00AA                     l1928:
  1029                           
  1030                           ;BTL_HIHI_main.c: 122:     uint8_t tmp;;BTL_HIHI_main.c: 123:     count_sp1 = EEPROM_Rea
      +                          d(0x00);
  1031  00AA  3000               	movlw	0
  1032  00AB  120A  118A  2680  120A  118A  	fcall	_EEPROM_Read
  1033  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1034  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1035  00B2  00BB               	movwf	??_main
  1036  00B3  083B               	movf	??_main,w
  1037  00B4  00C1               	movwf	_count_sp1
  1038  00B5                     l1930:
  1039                           
  1040                           ;BTL_HIHI_main.c: 124:     count_sp2 = EEPROM_Read(0x01);
  1041  00B5  3001               	movlw	1
  1042  00B6  120A  118A  2680  120A  118A  	fcall	_EEPROM_Read
  1043  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1044  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1045  00BD  00BB               	movwf	??_main
  1046  00BE  083B               	movf	??_main,w
  1047  00BF  00C0               	movwf	_count_sp2
  1048  00C0                     l1932:
  1049                           
  1050                           ;BTL_HIHI_main.c: 125:     count_sp3 = EEPROM_Read(0x02);
  1051  00C0  3002               	movlw	2
  1052  00C1  120A  118A  2680  120A  118A  	fcall	_EEPROM_Read
  1053  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1054  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1055  00C8  00BB               	movwf	??_main
  1056  00C9  083B               	movf	??_main,w
  1057  00CA  00BF               	movwf	_count_sp3
  1058  00CB                     l1934:
  1059                           
  1060                           ;BTL_HIHI_main.c: 129:     {;BTL_HIHI_main.c: 131:         RB2 = flag_dc;
  1061  00CB  1847               	btfsc	_flag_dc,0
  1062  00CC  28CE               	goto	u1271
  1063  00CD  28D2               	goto	u1270
  1064  00CE                     u1271:
  1065  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1066  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1067  00D0  1506               	bsf	6,2	;volatile
  1068  00D1  28D5               	goto	u1284
  1069  00D2                     u1270:
  1070  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1071  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1072  00D4  1106               	bcf	6,2	;volatile
  1073  00D5                     u1284:
  1074  00D5                     l1936:
  1075                           
  1076                           ;BTL_HIHI_main.c: 133:         setPWM_DutyCycle(ADC_Read(0));
  1077  00D5  3000               	movlw	0
  1078  00D6  120A  118A  2411  120A  118A  	fcall	_ADC_Read
  1079  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1080  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1081  00DD  0829               	movf	?_ADC_Read+1,w
  1082  00DE  00AF               	movwf	setPWM_DutyCycle@DC+1
  1083  00DF  0828               	movf	?_ADC_Read,w
  1084  00E0  00AE               	movwf	setPWM_DutyCycle@DC
  1085  00E1  120A  118A  263C  120A  118A  	fcall	_setPWM_DutyCycle
  1086  00E6                     l1938:
  1087                           
  1088                           ;BTL_HIHI_main.c: 135:         if (LCD_SWAP == 1)
  1089  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1090  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1091  00E8  0348               	decf	_LCD_SWAP,w
  1092  00E9  1D03               	btfss	3,2
  1093  00EA  28EC               	goto	u1291
  1094  00EB  28ED               	goto	u1290
  1095  00EC                     u1291:
  1096  00EC  2935               	goto	l1954
  1097  00ED                     u1290:
  1098  00ED                     l1940:
  1099                           
  1100                           ;BTL_HIHI_main.c: 136:         {;BTL_HIHI_main.c: 137:         LCD_Clear();
  1101  00ED  120A  118A  268F  120A  118A  	fcall	_LCD_Clear
  1102  00F2                     l1942:
  1103                           
  1104                           ;BTL_HIHI_main.c: 138:         LCD_Set_Cursor(1, 1);
  1105  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1106  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  1107  00F4  01AE               	clrf	LCD_Set_Cursor@COL
  1108  00F5  0AAE               	incf	LCD_Set_Cursor@COL,f
  1109  00F6  3001               	movlw	1
  1110  00F7  120A  118A  254A  120A  118A  	fcall	_LCD_Set_Cursor
  1111  00FC                     l1944:
  1112                           
  1113                           ;BTL_HIHI_main.c: 139:         LCD_Write_String(" DFS  I2C  CRC ");
  1114  00FC  3023               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1115  00FD  120A  118A  2521  120A  118A  	fcall	_LCD_Write_String
  1116  0102                     l1946:
  1117                           
  1118                           ;BTL_HIHI_main.c: 141:         LCD_Write(count_sp1, 2, 2);
  1119  0102  3002               	movlw	2
  1120  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1121  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1122  0105  00BB               	movwf	??_main
  1123  0106  083B               	movf	??_main,w
  1124  0107  00B2               	movwf	LCD_Write@x
  1125  0108  3002               	movlw	2
  1126  0109  00BC               	movwf	??_main+1
  1127  010A  083C               	movf	??_main+1,w
  1128  010B  00B3               	movwf	LCD_Write@y
  1129  010C  0841               	movf	_count_sp1,w
  1130  010D  120A  118A  22E4  120A  118A  	fcall	_LCD_Write
  1131  0112                     l1948:
  1132                           
  1133                           ;BTL_HIHI_main.c: 142:         LCD_Write(count_sp2, 2, 7);
  1134  0112  3002               	movlw	2
  1135  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1137  0115  00BB               	movwf	??_main
  1138  0116  083B               	movf	??_main,w
  1139  0117  00B2               	movwf	LCD_Write@x
  1140  0118  3007               	movlw	7
  1141  0119  00BC               	movwf	??_main+1
  1142  011A  083C               	movf	??_main+1,w
  1143  011B  00B3               	movwf	LCD_Write@y
  1144  011C  0840               	movf	_count_sp2,w
  1145  011D  120A  118A  22E4  120A  118A  	fcall	_LCD_Write
  1146  0122                     l1950:
  1147                           
  1148                           ;BTL_HIHI_main.c: 143:         LCD_Write(count_sp3, 2, 12);
  1149  0122  3002               	movlw	2
  1150  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1152  0125  00BB               	movwf	??_main
  1153  0126  083B               	movf	??_main,w
  1154  0127  00B2               	movwf	LCD_Write@x
  1155  0128  300C               	movlw	12
  1156  0129  00BC               	movwf	??_main+1
  1157  012A  083C               	movf	??_main+1,w
  1158  012B  00B3               	movwf	LCD_Write@y
  1159  012C  083F               	movf	_count_sp3,w
  1160  012D  120A  118A  22E4  120A  118A  	fcall	_LCD_Write
  1161  0132                     l1952:
  1162                           
  1163                           ;BTL_HIHI_main.c: 144:         LCD_SWAP = 0;
  1164  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0134  01C8               	clrf	_LCD_SWAP
  1167  0135                     l1954:
  1168                           
  1169                           ;BTL_HIHI_main.c: 148:         if (OpenServo == 1)
  1170  0135  0349               	decf	_OpenServo,w
  1171  0136  1D03               	btfss	3,2
  1172  0137  2939               	goto	u1301
  1173  0138  293A               	goto	u1300
  1174  0139                     u1301:
  1175  0139  293F               	goto	l1958
  1176  013A                     u1300:
  1177  013A                     l1956:
  1178                           
  1179                           ;BTL_HIHI_main.c: 149:         {;BTL_HIHI_main.c: 150:             pos = 8;
  1180  013A  3008               	movlw	8
  1181  013B  00BB               	movwf	??_main
  1182  013C  083B               	movf	??_main,w
  1183  013D  00FD               	movwf	_pos
  1184                           
  1185                           ;BTL_HIHI_main.c: 151:         }
  1186  013E  28CB               	goto	l1934
  1187  013F                     l1958:
  1188                           
  1189                           ;BTL_HIHI_main.c: 153:         {;BTL_HIHI_main.c: 154:             pos = 14;
  1190  013F  300E               	movlw	14
  1191  0140  00BB               	movwf	??_main
  1192  0141  083B               	movf	??_main,w
  1193  0142  00FD               	movwf	_pos
  1194  0143  28CB               	goto	l1934
  1195  0144  120A  118A  2812   	ljmp	start
  1196  0147                     __end_of_main:
  1197                           
  1198                           	psect	text1
  1199  063C                     __ptext1:	
  1200 ;; *************** function _setPWM_DutyCycle *****************
  1201 ;; Defined at:
  1202 ;;		line 386 in file "BTL_HIHI_main.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  DC              2   14[BANK0 ] unsigned int 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       2       0       0       0
  1217 ;;      Locals:         0       0       0       0       0
  1218 ;;      Temps:          0       2       0       0       0
  1219 ;;      Totals:         0       4       0       0       0
  1220 ;;Total ram usage:        4 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    3
  1223 ;; This function calls:
  1224 ;;		Nothing
  1225 ;; This function is called by:
  1226 ;;		_main
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           
  1231                           ;psect for function _setPWM_DutyCycle
  1232  063C                     _setPWM_DutyCycle:
  1233  063C                     l1796:	
  1234                           ;incstack = 0
  1235                           ; Regs used in _setPWM_DutyCycle: [wreg+status,2+status,0]
  1236                           
  1237                           
  1238                           ;BTL_HIHI_main.c: 386: void setPWM_DutyCycle(uint16_t DC);BTL_HIHI_main.c: 387: {;BTL_HI
      +                          HI_main.c: 391:     CCP1Y = DC & (1 << 0);
  1239  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1240  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1241  063E  182E               	btfsc	setPWM_DutyCycle@DC,0
  1242  063F  2E41               	goto	u1091
  1243  0640  2E45               	goto	u1090
  1244  0641                     u1091:
  1245  0641  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0642  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0643  1617               	bsf	23,4	;volatile
  1248  0644  2E48               	goto	u1104
  1249  0645                     u1090:
  1250  0645  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0646  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0647  1217               	bcf	23,4	;volatile
  1253  0648                     u1104:
  1254                           
  1255                           ;BTL_HIHI_main.c: 392:     CCP1X = DC & (1 << 1);
  1256  0648  1297               	bcf	23,5	;volatile
  1257  0649                     l1798:
  1258                           
  1259                           ;BTL_HIHI_main.c: 394:     CCPR1L = DC >> 2;
  1260  0649  082F               	movf	setPWM_DutyCycle@DC+1,w
  1261  064A  00B1               	movwf	??_setPWM_DutyCycle+1
  1262  064B  082E               	movf	setPWM_DutyCycle@DC,w
  1263  064C  00B0               	movwf	??_setPWM_DutyCycle
  1264  064D  1003               	clrc
  1265  064E  0CB1               	rrf	??_setPWM_DutyCycle+1,f
  1266  064F  0CB0               	rrf	??_setPWM_DutyCycle,f
  1267  0650  1003               	clrc
  1268  0651  0CB1               	rrf	??_setPWM_DutyCycle+1,f
  1269  0652  0CB0               	rrf	??_setPWM_DutyCycle,f
  1270  0653  0830               	movf	??_setPWM_DutyCycle,w
  1271  0654  0095               	movwf	21	;volatile
  1272  0655                     l367:
  1273  0655  0008               	return
  1274  0656                     __end_of_setPWM_DutyCycle:
  1275                           
  1276                           	psect	text2
  1277  04F4                     __ptext2:	
  1278 ;; *************** function _init_PWM *****************
  1279 ;; Defined at:
  1280 ;;		line 355 in file "BTL_HIHI_main.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       0       0       0       0
  1295 ;;      Locals:         0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0
  1297 ;;      Totals:         0       0       0       0       0
  1298 ;;Total ram usage:        0 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    3
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _init_PWM
  1310  04F4                     _init_PWM:
  1311  04F4                     l1734:	
  1312                           ;incstack = 0
  1313                           ; Regs used in _init_PWM: [wreg-fsr0h+status,2+status,0]
  1314                           
  1315                           
  1316                           ;BTL_HIHI_main.c: 358:     CCP1M2 = 1;
  1317  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  1318  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  1319  04F6  1517               	bsf	23,2	;volatile
  1320                           
  1321                           ;BTL_HIHI_main.c: 359:     CCP1M3 = 1;
  1322  04F7  1597               	bsf	23,3	;volatile
  1323                           
  1324                           ;BTL_HIHI_main.c: 361:     TRISC2 = 0;
  1325  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  1326  04F9  1303               	bcf	3,6	;RP1=0, select bank1
  1327  04FA  1107               	bcf	7,2	;volatile
  1328                           
  1329                           ;BTL_HIHI_main.c: 363:     switch (1)
  1330  04FB  2D0A               	goto	l1736
  1331  04FC                     l360:	
  1332                           ;BTL_HIHI_main.c: 364:     {;BTL_HIHI_main.c: 365:     case 1:
  1333                           
  1334                           
  1335                           ;BTL_HIHI_main.c: 366:     {;BTL_HIHI_main.c: 367:         T2CKPS0 = 0;
  1336  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  1337  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  1338  04FE  1012               	bcf	18,0	;volatile
  1339                           
  1340                           ;BTL_HIHI_main.c: 368:         T2CKPS1 = 0;
  1341  04FF  1092               	bcf	18,1	;volatile
  1342                           
  1343                           ;BTL_HIHI_main.c: 369:         break;
  1344  0500  2D1A               	goto	l361
  1345  0501                     l362:	
  1346                           ;BTL_HIHI_main.c: 370:     };BTL_HIHI_main.c: 371:     case 4:
  1347                           
  1348                           
  1349                           ;BTL_HIHI_main.c: 372:     {;BTL_HIHI_main.c: 373:         T2CKPS0 = 1;
  1350  0501  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0502  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0503  1412               	bsf	18,0	;volatile
  1353                           
  1354                           ;BTL_HIHI_main.c: 374:         T2CKPS1 = 0;
  1355  0504  1092               	bcf	18,1	;volatile
  1356                           
  1357                           ;BTL_HIHI_main.c: 375:         break;
  1358  0505  2D1A               	goto	l361
  1359  0506                     l363:	
  1360                           ;BTL_HIHI_main.c: 376:     };BTL_HIHI_main.c: 377:     case 16:
  1361                           
  1362                           
  1363                           ;BTL_HIHI_main.c: 378:         T2CKPS1 = 1;
  1364  0506  1283               	bcf	3,5	;RP0=0, select bank0
  1365  0507  1303               	bcf	3,6	;RP1=0, select bank0
  1366  0508  1492               	bsf	18,1	;volatile
  1367                           
  1368                           ;BTL_HIHI_main.c: 379:     }
  1369  0509  2D1A               	goto	l361
  1370  050A                     l1736:
  1371                           
  1372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1373                           ; Switch size 1, requested type "simple"
  1374                           ; Number of cases is 1, Range of values is 0 to 0
  1375                           ; switch strategies available:
  1376                           ; Name         Instructions Cycles
  1377                           ; simple_byte            4     3 (average)
  1378                           ; direct_byte           11     8 (fixed)
  1379                           ; jumptable            260     6 (fixed)
  1380                           ;	Chosen strategy is simple_byte
  1381  050A  3000               	movlw	0
  1382  050B  3A00               	xorlw	0	; case 0
  1383  050C  1903               	skipnz
  1384  050D  2D0F               	goto	l2110
  1385  050E  2D1A               	goto	l361
  1386  050F                     l2110:
  1387                           
  1388                           ; Switch size 1, requested type "simple"
  1389                           ; Number of cases is 3, Range of values is 1 to 16
  1390                           ; switch strategies available:
  1391                           ; Name         Instructions Cycles
  1392                           ; simple_byte           10     6 (average)
  1393                           ; direct_byte           59    11 (fixed)
  1394                           ; jumptable            263     9 (fixed)
  1395                           ;	Chosen strategy is simple_byte
  1396  050F  3001               	movlw	1
  1397  0510  3A01               	xorlw	1	; case 1
  1398  0511  1903               	skipnz
  1399  0512  2CFC               	goto	l360
  1400  0513  3A05               	xorlw	5	; case 4
  1401  0514  1903               	skipnz
  1402  0515  2D01               	goto	l362
  1403  0516  3A14               	xorlw	20	; case 16
  1404  0517  1903               	skipnz
  1405  0518  2D06               	goto	l363
  1406  0519  2D1A               	goto	l361
  1407  051A                     l361:
  1408                           
  1409                           ;BTL_HIHI_main.c: 380:     TMR2ON = 1;
  1410  051A  1283               	bcf	3,5	;RP0=0, select bank0
  1411  051B  1512               	bsf	18,2	;volatile
  1412  051C                     l1738:
  1413                           
  1414                           ;BTL_HIHI_main.c: 382:     PR2 = ((float)(20000000 / 3950)) / (4 * 1) - 1;
  1415  051C  30F0               	movlw	240
  1416  051D  1683               	bsf	3,5	;RP0=1, select bank1
  1417  051E  1303               	bcf	3,6	;RP1=0, select bank1
  1418  051F  0092               	movwf	18	;volatile
  1419  0520                     l364:
  1420  0520  0008               	return
  1421  0521                     __end_of_init_PWM:
  1422                           
  1423                           	psect	text3
  1424  0606                     __ptext3:	
  1425 ;; *************** function _config_UART *****************
  1426 ;; Defined at:
  1427 ;;		line 419 in file "BTL_HIHI_main.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;		None
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;		None
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1441 ;;      Params:         0       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0
  1444 ;;      Totals:         0       0       0       0       0
  1445 ;;Total ram usage:        0 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; Hardware stack levels required when called:    3
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           
  1456                           ;psect for function _config_UART
  1457  0606                     _config_UART:
  1458  0606                     l1746:	
  1459                           ;incstack = 0
  1460                           ; Regs used in _config_UART: [wreg]
  1461                           
  1462                           
  1463                           ;BTL_HIHI_main.c: 422:     BRGH = 1;
  1464  0606  1683               	bsf	3,5	;RP0=1, select bank1
  1465  0607  1303               	bcf	3,6	;RP1=0, select bank1
  1466  0608  1518               	bsf	24,2	;volatile
  1467  0609                     l1748:
  1468                           
  1469                           ;BTL_HIHI_main.c: 423:     SPBRG = 129;
  1470  0609  3081               	movlw	129
  1471  060A  0099               	movwf	25	;volatile
  1472  060B                     l1750:
  1473                           
  1474                           ;BTL_HIHI_main.c: 425:     SYNC = 0;
  1475  060B  1218               	bcf	24,4	;volatile
  1476  060C                     l1752:
  1477                           
  1478                           ;BTL_HIHI_main.c: 426:     SPEN = 1;
  1479  060C  1283               	bcf	3,5	;RP0=0, select bank0
  1480  060D  1303               	bcf	3,6	;RP1=0, select bank0
  1481  060E  1798               	bsf	24,7	;volatile
  1482  060F                     l1754:
  1483                           
  1484                           ;BTL_HIHI_main.c: 428:     TRISC6 = 1;
  1485  060F  1683               	bsf	3,5	;RP0=1, select bank1
  1486  0610  1303               	bcf	3,6	;RP1=0, select bank1
  1487  0611  1707               	bsf	7,6	;volatile
  1488  0612                     l1756:
  1489                           
  1490                           ;BTL_HIHI_main.c: 429:     TRISC7 = 1;
  1491  0612  1787               	bsf	7,7	;volatile
  1492  0613                     l1758:
  1493                           
  1494                           ;BTL_HIHI_main.c: 431:     TXEN = 1;
  1495  0613  1698               	bsf	24,5	;volatile
  1496  0614                     l1760:
  1497                           
  1498                           ;BTL_HIHI_main.c: 432:     CREN = 1;
  1499  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0616  1618               	bsf	24,4	;volatile
  1502  0617                     l1762:
  1503                           
  1504                           ;BTL_HIHI_main.c: 435:     RCIE = 1;
  1505  0617  1683               	bsf	3,5	;RP0=1, select bank1
  1506  0618  1303               	bcf	3,6	;RP1=0, select bank1
  1507  0619  168C               	bsf	12,5	;volatile
  1508  061A                     l1764:
  1509                           
  1510                           ;BTL_HIHI_main.c: 436:     PEIE = 1;
  1511  061A  170B               	bsf	11,6	;volatile
  1512  061B                     l1766:
  1513                           
  1514                           ;BTL_HIHI_main.c: 437:     GIE = 1;
  1515  061B  178B               	bsf	11,7	;volatile
  1516  061C                     l1768:
  1517                           
  1518                           ;BTL_HIHI_main.c: 439:     TX9 = 0;
  1519  061C  1318               	bcf	24,6	;volatile
  1520  061D                     l1770:
  1521                           
  1522                           ;BTL_HIHI_main.c: 440:     RX9 = 0;
  1523  061D  1283               	bcf	3,5	;RP0=0, select bank0
  1524  061E  1303               	bcf	3,6	;RP1=0, select bank0
  1525  061F  1318               	bcf	24,6	;volatile
  1526  0620                     l385:
  1527  0620  0008               	return
  1528  0621                     __end_of_config_UART:
  1529                           
  1530                           	psect	text4
  1531  06D1                     __ptext4:	
  1532 ;; *************** function _Servo_Init *****************
  1533 ;; Defined at:
  1534 ;;		line 261 in file "BTL_HIHI_main.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		None
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1548 ;;      Params:         0       0       0       0       0
  1549 ;;      Locals:         0       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0
  1551 ;;      Totals:         0       0       0       0       0
  1552 ;;Total ram usage:        0 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    3
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           
  1563                           ;psect for function _Servo_Init
  1564  06D1                     _Servo_Init:
  1565  06D1                     l1730:	
  1566                           ;incstack = 0
  1567                           ; Regs used in _Servo_Init: []
  1568                           
  1569                           
  1570                           ;BTL_HIHI_main.c: 264:     PSA = 0;
  1571  06D1  1683               	bsf	3,5	;RP0=1, select bank1
  1572  06D2  1303               	bcf	3,6	;RP1=0, select bank1
  1573  06D3  1181               	bcf	1,3	;volatile
  1574                           
  1575                           ;BTL_HIHI_main.c: 266:     PS2 = 0;
  1576  06D4  1101               	bcf	1,2	;volatile
  1577                           
  1578                           ;BTL_HIHI_main.c: 267:     PS1 = 0;
  1579  06D5  1081               	bcf	1,1	;volatile
  1580                           
  1581                           ;BTL_HIHI_main.c: 268:     PS0 = 0;
  1582  06D6  1001               	bcf	1,0	;volatile
  1583                           
  1584                           ;BTL_HIHI_main.c: 270:     T0CS = 0;
  1585  06D7  1281               	bcf	1,5	;volatile
  1586                           
  1587                           ;BTL_HIHI_main.c: 272:     GIE = 1;
  1588  06D8  178B               	bsf	11,7	;volatile
  1589                           
  1590                           ;BTL_HIHI_main.c: 273:     T0IE = 1;
  1591  06D9  168B               	bsf	11,5	;volatile
  1592                           
  1593                           ;BTL_HIHI_main.c: 274:     T0IF = 0;
  1594  06DA  110B               	bcf	11,2	;volatile
  1595  06DB                     l337:
  1596  06DB  0008               	return
  1597  06DC                     __end_of_Servo_Init:
  1598                           
  1599                           	psect	text5
  1600  0521                     __ptext5:	
  1601 ;; *************** function _LCD_Write_String *****************
  1602 ;; Defined at:
  1603 ;;		line 106 in file "I2C_LCD.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  Str             1    wreg     PTR unsigned char 
  1606 ;;		 -> STR_3(16), STR_2(17), STR_1(17), 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  Str             1   16[BANK0 ] PTR unsigned char 
  1609 ;;		 -> STR_3(16), STR_2(17), STR_1(17), 
  1610 ;;  i               2   14[BANK0 ] int 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         0       0       0       0       0
  1621 ;;      Locals:         0       3       0       0       0
  1622 ;;      Temps:          0       0       0       0       0
  1623 ;;      Totals:         0       3       0       0       0
  1624 ;;Total ram usage:        3 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    8
  1627 ;; This function calls:
  1628 ;;		_LCD_Write_Char
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           
  1635                           ;psect for function _LCD_Write_String
  1636  0521                     _LCD_Write_String:
  1637                           
  1638                           ;incstack = 0
  1639 ;; hardware stack exceeded
  1640                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1641                           ;LCD_Write_String@Str stored from wreg
  1642  0521  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0522  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0523  00B0               	movwf	LCD_Write_String@Str
  1645  0524                     l1718:
  1646                           
  1647                           ;I2C_LCD.c: 106: void LCD_Write_String(char *Str);I2C_LCD.c: 107: {;I2C_LCD.c: 108:   fo
      +                          r (int i = 0; Str[i] != '\0'; i++)
  1648  0524  01AE               	clrf	LCD_Write_String@i
  1649  0525  01AF               	clrf	LCD_Write_String@i+1
  1650  0526  2D3C               	goto	l1724
  1651  0527                     l1720:
  1652                           
  1653                           ;I2C_LCD.c: 109:     LCD_Write_Char(Str[i]);
  1654  0527  082E               	movf	LCD_Write_String@i,w
  1655  0528  0730               	addwf	LCD_Write_String@Str,w
  1656  0529  0084               	movwf	4
  1657  052A  120A  118A  24B5  120A  118A  	fcall	stringdir
  1658  052F  120A  118A  256C  120A  118A  	fcall	_LCD_Write_Char
  1659  0534                     l1722:
  1660  0534  3001               	movlw	1
  1661  0535  1283               	bcf	3,5	;RP0=0, select bank0
  1662  0536  1303               	bcf	3,6	;RP1=0, select bank0
  1663  0537  07AE               	addwf	LCD_Write_String@i,f
  1664  0538  1803               	skipnc
  1665  0539  0AAF               	incf	LCD_Write_String@i+1,f
  1666  053A  3000               	movlw	0
  1667  053B  07AF               	addwf	LCD_Write_String@i+1,f
  1668  053C                     l1724:
  1669  053C  082E               	movf	LCD_Write_String@i,w
  1670  053D  0730               	addwf	LCD_Write_String@Str,w
  1671  053E  0084               	movwf	4
  1672  053F  120A  118A  24B5  120A  118A  	fcall	stringdir
  1673  0544  3A00               	xorlw	0
  1674  0545  1D03               	skipz
  1675  0546  2D48               	goto	u981
  1676  0547  2D49               	goto	u980
  1677  0548                     u981:
  1678  0548  2D27               	goto	l1720
  1679  0549                     u980:
  1680  0549                     l76:
  1681  0549  0008               	return
  1682  054A                     __end_of_LCD_Write_String:
  1683                           
  1684                           	psect	text6
  1685  02E4                     __ptext6:	
  1686 ;; *************** function _LCD_Write *****************
  1687 ;; Defined at:
  1688 ;;		line 278 in file "BTL_HIHI_main.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  count_sp        1    wreg     unsigned char 
  1691 ;;  x               1   18[BANK0 ] unsigned char 
  1692 ;;  y               1   19[BANK0 ] unsigned char 
  1693 ;; Auto vars:     Size  Location     Type
  1694 ;;  count_sp        1   26[BANK0 ] unsigned char 
  1695 ;;  y_              1   25[BANK0 ] unsigned char 
  1696 ;;  c               1   24[BANK0 ] unsigned char 
  1697 ;;  i               1   23[BANK0 ] unsigned char 
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1707 ;;      Params:         0       2       0       0       0
  1708 ;;      Locals:         0       4       0       0       0
  1709 ;;      Temps:          0       3       0       0       0
  1710 ;;      Totals:         0       9       0       0       0
  1711 ;;Total ram usage:        9 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    9
  1714 ;; This function calls:
  1715 ;;		_LCD_Set_Cursor
  1716 ;;		_LCD_Write_Char
  1717 ;;		___awdiv
  1718 ;;		___awmod
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           
  1725                           ;psect for function _LCD_Write
  1726  02E4                     _LCD_Write:
  1727                           
  1728                           ;incstack = 0
  1729 ;; hardware stack exceeded
  1730                           ; Regs used in _LCD_Write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1731                           ;LCD_Write@count_sp stored from wreg
  1732  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1733  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1734  02E6  00BA               	movwf	LCD_Write@count_sp
  1735  02E7                     l1800:
  1736                           
  1737                           ;BTL_HIHI_main.c: 278: void LCD_Write(uint8_t count_sp, uint8_t x, uint8_t y);BTL_HIHI_m
      +                          ain.c: 279: {;BTL_HIHI_main.c: 280:     char c;;BTL_HIHI_main.c: 281:     uint8_t y_=y+2
      +                          ;
  1738  02E7  0833               	movf	LCD_Write@y,w
  1739  02E8  3E02               	addlw	2
  1740  02E9  00B4               	movwf	??_LCD_Write
  1741  02EA  0834               	movf	??_LCD_Write,w
  1742  02EB  00B9               	movwf	LCD_Write@y_
  1743  02EC                     l1802:
  1744                           
  1745                           ;BTL_HIHI_main.c: 282:     uint8_t i;;BTL_HIHI_main.c: 283:     for (i = 2; i >= 0; i--)
  1746  02EC  3002               	movlw	2
  1747  02ED  00B4               	movwf	??_LCD_Write
  1748  02EE  0834               	movf	??_LCD_Write,w
  1749  02EF  00B7               	movwf	LCD_Write@i
  1750  02F0                     l1806:
  1751                           
  1752                           ;BTL_HIHI_main.c: 284:     {;BTL_HIHI_main.c: 285:         c = count_sp % 10 + 48;
  1753  02F0  300A               	movlw	10
  1754  02F1  00A8               	movwf	___awmod@divisor
  1755  02F2  3000               	movlw	0
  1756  02F3  00A9               	movwf	___awmod@divisor+1
  1757  02F4  083A               	movf	LCD_Write@count_sp,w
  1758  02F5  00B4               	movwf	??_LCD_Write
  1759  02F6  01B5               	clrf	??_LCD_Write+1
  1760  02F7  0834               	movf	??_LCD_Write,w
  1761  02F8  00AA               	movwf	___awmod@dividend
  1762  02F9  0835               	movf	??_LCD_Write+1,w
  1763  02FA  00AB               	movwf	___awmod@dividend+1
  1764  02FB  120A  118A  23B6  120A  118A  	fcall	___awmod
  1765  0300  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0301  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0302  0828               	movf	?___awmod,w
  1768  0303  3E30               	addlw	48
  1769  0304  00B6               	movwf	??_LCD_Write+2
  1770  0305  0836               	movf	??_LCD_Write+2,w
  1771  0306  00B8               	movwf	LCD_Write@c
  1772  0307                     l1808:
  1773                           
  1774                           ;BTL_HIHI_main.c: 287:         LCD_Set_Cursor(x, y_);
  1775  0307  0839               	movf	LCD_Write@y_,w
  1776  0308  00B4               	movwf	??_LCD_Write
  1777  0309  0834               	movf	??_LCD_Write,w
  1778  030A  00AE               	movwf	LCD_Set_Cursor@COL
  1779  030B  0832               	movf	LCD_Write@x,w
  1780  030C  120A  118A  254A  120A  118A  	fcall	_LCD_Set_Cursor
  1781  0311                     l1810:
  1782                           
  1783                           ;BTL_HIHI_main.c: 288:         LCD_Write_Char(c);
  1784  0311  1283               	bcf	3,5	;RP0=0, select bank0
  1785  0312  1303               	bcf	3,6	;RP1=0, select bank0
  1786  0313  0838               	movf	LCD_Write@c,w
  1787  0314  120A  118A  256C  120A  118A  	fcall	_LCD_Write_Char
  1788  0319                     l1812:
  1789                           
  1790                           ;BTL_HIHI_main.c: 289:         y_--;
  1791  0319  3001               	movlw	1
  1792  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1793  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1794  031C  02B9               	subwf	LCD_Write@y_,f
  1795  031D                     l1814:
  1796                           
  1797                           ;BTL_HIHI_main.c: 291:         count_sp /= 10;
  1798  031D  300A               	movlw	10
  1799  031E  00A8               	movwf	___awdiv@divisor
  1800  031F  3000               	movlw	0
  1801  0320  00A9               	movwf	___awdiv@divisor+1
  1802  0321  083A               	movf	LCD_Write@count_sp,w
  1803  0322  00B4               	movwf	??_LCD_Write
  1804  0323  01B5               	clrf	??_LCD_Write+1
  1805  0324  0834               	movf	??_LCD_Write,w
  1806  0325  00AA               	movwf	___awdiv@dividend
  1807  0326  0835               	movf	??_LCD_Write+1,w
  1808  0327  00AB               	movwf	___awdiv@dividend+1
  1809  0328  120A  118A  234D  120A  118A  	fcall	___awdiv
  1810  032D  1283               	bcf	3,5	;RP0=0, select bank0
  1811  032E  1303               	bcf	3,6	;RP1=0, select bank0
  1812  032F  0828               	movf	?___awdiv,w
  1813  0330  00B6               	movwf	??_LCD_Write+2
  1814  0331  0836               	movf	??_LCD_Write+2,w
  1815  0332  00BA               	movwf	LCD_Write@count_sp
  1816  0333                     l1816:
  1817                           
  1818                           ;BTL_HIHI_main.c: 292:         if(count_sp<=0)
  1819  0333  083A               	movf	LCD_Write@count_sp,w
  1820  0334  1D03               	btfss	3,2
  1821  0335  2B37               	goto	u1111
  1822  0336  2B38               	goto	u1110
  1823  0337                     u1111:
  1824  0337  2B39               	goto	l1820
  1825  0338                     u1110:
  1826  0338  2B46               	goto	l1826
  1827  0339                     l1820:
  1828                           
  1829                           ;BTL_HIHI_main.c: 296:     }
  1830  0339  3001               	movlw	1
  1831  033A  02B7               	subwf	LCD_Write@i,f
  1832  033B  2AF0               	goto	l1806
  1833  033C                     l1822:
  1834                           
  1835                           ;BTL_HIHI_main.c: 299:     {;BTL_HIHI_main.c: 300:         LCD_Write_Char(' ');
  1836  033C  3020               	movlw	32
  1837  033D  120A  118A  256C  120A  118A  	fcall	_LCD_Write_Char
  1838  0342                     l1824:
  1839                           
  1840                           ;BTL_HIHI_main.c: 301:         y_--;
  1841  0342  3001               	movlw	1
  1842  0343  1283               	bcf	3,5	;RP0=0, select bank0
  1843  0344  1303               	bcf	3,6	;RP1=0, select bank0
  1844  0345  02B9               	subwf	LCD_Write@y_,f
  1845  0346                     l1826:
  1846                           
  1847                           ;BTL_HIHI_main.c: 298:     while(y_>=y)
  1848  0346  0833               	movf	LCD_Write@y,w
  1849  0347  0239               	subwf	LCD_Write@y_,w
  1850  0348  1803               	skipnc
  1851  0349  2B4B               	goto	u1121
  1852  034A  2B4C               	goto	u1120
  1853  034B                     u1121:
  1854  034B  2B3C               	goto	l1822
  1855  034C                     u1120:
  1856  034C                     l346:
  1857  034C  0008               	return
  1858  034D                     __end_of_LCD_Write:
  1859                           
  1860                           	psect	text7
  1861  03B6                     __ptext7:	
  1862 ;; *************** function ___awmod *****************
  1863 ;; Defined at:
  1864 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  divisor         2    8[BANK0 ] int 
  1867 ;;  dividend        2   10[BANK0 ] int 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  sign            1   14[BANK0 ] unsigned char 
  1870 ;;  counter         1   13[BANK0 ] unsigned char 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  2    8[BANK0 ] int 
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1880 ;;      Params:         0       4       0       0       0
  1881 ;;      Locals:         0       2       0       0       0
  1882 ;;      Temps:          0       1       0       0       0
  1883 ;;      Totals:         0       7       0       0       0
  1884 ;;Total ram usage:        7 bytes
  1885 ;; Hardware stack levels used:    1
  1886 ;; Hardware stack levels required when called:    3
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_LCD_Write
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           
  1895                           ;psect for function ___awmod
  1896  03B6                     ___awmod:
  1897  03B6                     l1644:	
  1898                           ;incstack = 0
  1899                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1900                           
  1901  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1902  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1903  03B8  01AE               	clrf	___awmod@sign
  1904  03B9                     l1646:
  1905  03B9  1FAB               	btfss	___awmod@dividend+1,7
  1906  03BA  2BBC               	goto	u891
  1907  03BB  2BBD               	goto	u890
  1908  03BC                     u891:
  1909  03BC  2BC4               	goto	l1652
  1910  03BD                     u890:
  1911  03BD                     l1648:
  1912  03BD  09AA               	comf	___awmod@dividend,f
  1913  03BE  09AB               	comf	___awmod@dividend+1,f
  1914  03BF  0AAA               	incf	___awmod@dividend,f
  1915  03C0  1903               	skipnz
  1916  03C1  0AAB               	incf	___awmod@dividend+1,f
  1917  03C2                     l1650:
  1918  03C2  01AE               	clrf	___awmod@sign
  1919  03C3  0AAE               	incf	___awmod@sign,f
  1920  03C4                     l1652:
  1921  03C4  1FA9               	btfss	___awmod@divisor+1,7
  1922  03C5  2BC7               	goto	u901
  1923  03C6  2BC8               	goto	u900
  1924  03C7                     u901:
  1925  03C7  2BCD               	goto	l1656
  1926  03C8                     u900:
  1927  03C8                     l1654:
  1928  03C8  09A8               	comf	___awmod@divisor,f
  1929  03C9  09A9               	comf	___awmod@divisor+1,f
  1930  03CA  0AA8               	incf	___awmod@divisor,f
  1931  03CB  1903               	skipnz
  1932  03CC  0AA9               	incf	___awmod@divisor+1,f
  1933  03CD                     l1656:
  1934  03CD  0828               	movf	___awmod@divisor,w
  1935  03CE  0429               	iorwf	___awmod@divisor+1,w
  1936  03CF  1903               	btfsc	3,2
  1937  03D0  2BD2               	goto	u911
  1938  03D1  2BD3               	goto	u910
  1939  03D2                     u911:
  1940  03D2  2C02               	goto	l1674
  1941  03D3                     u910:
  1942  03D3                     l1658:
  1943  03D3  01AD               	clrf	___awmod@counter
  1944  03D4  0AAD               	incf	___awmod@counter,f
  1945  03D5  2BE1               	goto	l1664
  1946  03D6                     l1660:
  1947  03D6  3001               	movlw	1
  1948  03D7                     u925:
  1949  03D7  1003               	clrc
  1950  03D8  0DA8               	rlf	___awmod@divisor,f
  1951  03D9  0DA9               	rlf	___awmod@divisor+1,f
  1952  03DA  3EFF               	addlw	-1
  1953  03DB  1D03               	skipz
  1954  03DC  2BD7               	goto	u925
  1955  03DD                     l1662:
  1956  03DD  3001               	movlw	1
  1957  03DE  00AC               	movwf	??___awmod
  1958  03DF  082C               	movf	??___awmod,w
  1959  03E0  07AD               	addwf	___awmod@counter,f
  1960  03E1                     l1664:
  1961  03E1  1FA9               	btfss	___awmod@divisor+1,7
  1962  03E2  2BE4               	goto	u931
  1963  03E3  2BE5               	goto	u930
  1964  03E4                     u931:
  1965  03E4  2BD6               	goto	l1660
  1966  03E5                     u930:
  1967  03E5                     l1666:
  1968  03E5  0829               	movf	___awmod@divisor+1,w
  1969  03E6  022B               	subwf	___awmod@dividend+1,w
  1970  03E7  1D03               	skipz
  1971  03E8  2BEB               	goto	u945
  1972  03E9  0828               	movf	___awmod@divisor,w
  1973  03EA  022A               	subwf	___awmod@dividend,w
  1974  03EB                     u945:
  1975  03EB  1C03               	skipc
  1976  03EC  2BEE               	goto	u941
  1977  03ED  2BEF               	goto	u940
  1978  03EE                     u941:
  1979  03EE  2BF5               	goto	l1670
  1980  03EF                     u940:
  1981  03EF                     l1668:
  1982  03EF  0828               	movf	___awmod@divisor,w
  1983  03F0  02AA               	subwf	___awmod@dividend,f
  1984  03F1  0829               	movf	___awmod@divisor+1,w
  1985  03F2  1C03               	skipc
  1986  03F3  03AB               	decf	___awmod@dividend+1,f
  1987  03F4  02AB               	subwf	___awmod@dividend+1,f
  1988  03F5                     l1670:
  1989  03F5  3001               	movlw	1
  1990  03F6                     u955:
  1991  03F6  1003               	clrc
  1992  03F7  0CA9               	rrf	___awmod@divisor+1,f
  1993  03F8  0CA8               	rrf	___awmod@divisor,f
  1994  03F9  3EFF               	addlw	-1
  1995  03FA  1D03               	skipz
  1996  03FB  2BF6               	goto	u955
  1997  03FC                     l1672:
  1998  03FC  3001               	movlw	1
  1999  03FD  02AD               	subwf	___awmod@counter,f
  2000  03FE  1D03               	btfss	3,2
  2001  03FF  2C01               	goto	u961
  2002  0400  2C02               	goto	u960
  2003  0401                     u961:
  2004  0401  2BE5               	goto	l1666
  2005  0402                     u960:
  2006  0402                     l1674:
  2007  0402  082E               	movf	___awmod@sign,w
  2008  0403  1903               	btfsc	3,2
  2009  0404  2C06               	goto	u971
  2010  0405  2C07               	goto	u970
  2011  0406                     u971:
  2012  0406  2C0C               	goto	l1678
  2013  0407                     u970:
  2014  0407                     l1676:
  2015  0407  09AA               	comf	___awmod@dividend,f
  2016  0408  09AB               	comf	___awmod@dividend+1,f
  2017  0409  0AAA               	incf	___awmod@dividend,f
  2018  040A  1903               	skipnz
  2019  040B  0AAB               	incf	___awmod@dividend+1,f
  2020  040C                     l1678:
  2021  040C  082B               	movf	___awmod@dividend+1,w
  2022  040D  00A9               	movwf	?___awmod+1
  2023  040E  082A               	movf	___awmod@dividend,w
  2024  040F  00A8               	movwf	?___awmod
  2025  0410                     l646:
  2026  0410  0008               	return
  2027  0411                     __end_of___awmod:
  2028                           
  2029                           	psect	text8
  2030  034D                     __ptext8:	
  2031 ;; *************** function ___awdiv *****************
  2032 ;; Defined at:
  2033 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  divisor         2    8[BANK0 ] int 
  2036 ;;  dividend        2   10[BANK0 ] int 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;  quotient        2   15[BANK0 ] int 
  2039 ;;  sign            1   14[BANK0 ] unsigned char 
  2040 ;;  counter         1   13[BANK0 ] unsigned char 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  2    8[BANK0 ] int 
  2043 ;; Registers used:
  2044 ;;		wreg, status,2, status,0
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2050 ;;      Params:         0       4       0       0       0
  2051 ;;      Locals:         0       4       0       0       0
  2052 ;;      Temps:          0       1       0       0       0
  2053 ;;      Totals:         0       9       0       0       0
  2054 ;;Total ram usage:        9 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    3
  2057 ;; This function calls:
  2058 ;;		Nothing
  2059 ;; This function is called by:
  2060 ;;		_LCD_Write
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           
  2065                           ;psect for function ___awdiv
  2066  034D                     ___awdiv:
  2067  034D                     l1600:	
  2068                           ;incstack = 0
  2069                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2070                           
  2071  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2072  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2073  034F  01AE               	clrf	___awdiv@sign
  2074  0350                     l1602:
  2075  0350  1FA9               	btfss	___awdiv@divisor+1,7
  2076  0351  2B53               	goto	u791
  2077  0352  2B54               	goto	u790
  2078  0353                     u791:
  2079  0353  2B5B               	goto	l1608
  2080  0354                     u790:
  2081  0354                     l1604:
  2082  0354  09A8               	comf	___awdiv@divisor,f
  2083  0355  09A9               	comf	___awdiv@divisor+1,f
  2084  0356  0AA8               	incf	___awdiv@divisor,f
  2085  0357  1903               	skipnz
  2086  0358  0AA9               	incf	___awdiv@divisor+1,f
  2087  0359                     l1606:
  2088  0359  01AE               	clrf	___awdiv@sign
  2089  035A  0AAE               	incf	___awdiv@sign,f
  2090  035B                     l1608:
  2091  035B  1FAB               	btfss	___awdiv@dividend+1,7
  2092  035C  2B5E               	goto	u801
  2093  035D  2B5F               	goto	u800
  2094  035E                     u801:
  2095  035E  2B68               	goto	l1614
  2096  035F                     u800:
  2097  035F                     l1610:
  2098  035F  09AA               	comf	___awdiv@dividend,f
  2099  0360  09AB               	comf	___awdiv@dividend+1,f
  2100  0361  0AAA               	incf	___awdiv@dividend,f
  2101  0362  1903               	skipnz
  2102  0363  0AAB               	incf	___awdiv@dividend+1,f
  2103  0364                     l1612:
  2104  0364  3001               	movlw	1
  2105  0365  00AC               	movwf	??___awdiv
  2106  0366  082C               	movf	??___awdiv,w
  2107  0367  06AE               	xorwf	___awdiv@sign,f
  2108  0368                     l1614:
  2109  0368  01AF               	clrf	___awdiv@quotient
  2110  0369  01B0               	clrf	___awdiv@quotient+1
  2111  036A                     l1616:
  2112  036A  0828               	movf	___awdiv@divisor,w
  2113  036B  0429               	iorwf	___awdiv@divisor+1,w
  2114  036C  1903               	btfsc	3,2
  2115  036D  2B6F               	goto	u811
  2116  036E  2B70               	goto	u810
  2117  036F                     u811:
  2118  036F  2BA7               	goto	l1636
  2119  0370                     u810:
  2120  0370                     l1618:
  2121  0370  01AD               	clrf	___awdiv@counter
  2122  0371  0AAD               	incf	___awdiv@counter,f
  2123  0372  2B7E               	goto	l1624
  2124  0373                     l1620:
  2125  0373  3001               	movlw	1
  2126  0374                     u825:
  2127  0374  1003               	clrc
  2128  0375  0DA8               	rlf	___awdiv@divisor,f
  2129  0376  0DA9               	rlf	___awdiv@divisor+1,f
  2130  0377  3EFF               	addlw	-1
  2131  0378  1D03               	skipz
  2132  0379  2B74               	goto	u825
  2133  037A                     l1622:
  2134  037A  3001               	movlw	1
  2135  037B  00AC               	movwf	??___awdiv
  2136  037C  082C               	movf	??___awdiv,w
  2137  037D  07AD               	addwf	___awdiv@counter,f
  2138  037E                     l1624:
  2139  037E  1FA9               	btfss	___awdiv@divisor+1,7
  2140  037F  2B81               	goto	u831
  2141  0380  2B82               	goto	u830
  2142  0381                     u831:
  2143  0381  2B73               	goto	l1620
  2144  0382                     u830:
  2145  0382                     l1626:
  2146  0382  3001               	movlw	1
  2147  0383                     u845:
  2148  0383  1003               	clrc
  2149  0384  0DAF               	rlf	___awdiv@quotient,f
  2150  0385  0DB0               	rlf	___awdiv@quotient+1,f
  2151  0386  3EFF               	addlw	-1
  2152  0387  1D03               	skipz
  2153  0388  2B83               	goto	u845
  2154  0389  0829               	movf	___awdiv@divisor+1,w
  2155  038A  022B               	subwf	___awdiv@dividend+1,w
  2156  038B  1D03               	skipz
  2157  038C  2B8F               	goto	u855
  2158  038D  0828               	movf	___awdiv@divisor,w
  2159  038E  022A               	subwf	___awdiv@dividend,w
  2160  038F                     u855:
  2161  038F  1C03               	skipc
  2162  0390  2B92               	goto	u851
  2163  0391  2B93               	goto	u850
  2164  0392                     u851:
  2165  0392  2B9A               	goto	l1632
  2166  0393                     u850:
  2167  0393                     l1628:
  2168  0393  0828               	movf	___awdiv@divisor,w
  2169  0394  02AA               	subwf	___awdiv@dividend,f
  2170  0395  0829               	movf	___awdiv@divisor+1,w
  2171  0396  1C03               	skipc
  2172  0397  03AB               	decf	___awdiv@dividend+1,f
  2173  0398  02AB               	subwf	___awdiv@dividend+1,f
  2174  0399                     l1630:
  2175  0399  142F               	bsf	___awdiv@quotient,0
  2176  039A                     l1632:
  2177  039A  3001               	movlw	1
  2178  039B                     u865:
  2179  039B  1003               	clrc
  2180  039C  0CA9               	rrf	___awdiv@divisor+1,f
  2181  039D  0CA8               	rrf	___awdiv@divisor,f
  2182  039E  3EFF               	addlw	-1
  2183  039F  1D03               	skipz
  2184  03A0  2B9B               	goto	u865
  2185  03A1                     l1634:
  2186  03A1  3001               	movlw	1
  2187  03A2  02AD               	subwf	___awdiv@counter,f
  2188  03A3  1D03               	btfss	3,2
  2189  03A4  2BA6               	goto	u871
  2190  03A5  2BA7               	goto	u870
  2191  03A6                     u871:
  2192  03A6  2B82               	goto	l1626
  2193  03A7                     u870:
  2194  03A7                     l1636:
  2195  03A7  082E               	movf	___awdiv@sign,w
  2196  03A8  1903               	btfsc	3,2
  2197  03A9  2BAB               	goto	u881
  2198  03AA  2BAC               	goto	u880
  2199  03AB                     u881:
  2200  03AB  2BB1               	goto	l1640
  2201  03AC                     u880:
  2202  03AC                     l1638:
  2203  03AC  09AF               	comf	___awdiv@quotient,f
  2204  03AD  09B0               	comf	___awdiv@quotient+1,f
  2205  03AE  0AAF               	incf	___awdiv@quotient,f
  2206  03AF  1903               	skipnz
  2207  03B0  0AB0               	incf	___awdiv@quotient+1,f
  2208  03B1                     l1640:
  2209  03B1  0830               	movf	___awdiv@quotient+1,w
  2210  03B2  00A9               	movwf	?___awdiv+1
  2211  03B3  082F               	movf	___awdiv@quotient,w
  2212  03B4  00A8               	movwf	?___awdiv
  2213  03B5                     l633:
  2214  03B5  0008               	return
  2215  03B6                     __end_of___awdiv:
  2216                           
  2217                           	psect	text9
  2218  056C                     __ptext9:	
  2219 ;; *************** function _LCD_Write_Char *****************
  2220 ;; Defined at:
  2221 ;;		line 99 in file "I2C_LCD.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  Data            1    wreg     unsigned char 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  Data            1   13[BANK0 ] unsigned char 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		wreg, status,2, status,0, pclath, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2235 ;;      Params:         0       0       0       0       0
  2236 ;;      Locals:         0       1       0       0       0
  2237 ;;      Temps:          0       1       0       0       0
  2238 ;;      Totals:         0       2       0       0       0
  2239 ;;Total ram usage:        2 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    7
  2242 ;; This function calls:
  2243 ;;		_LCD_Write_4Bit
  2244 ;; This function is called by:
  2245 ;;		_LCD_Write_String
  2246 ;;		_LCD_Write
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           
  2251                           ;psect for function _LCD_Write_Char
  2252  056C                     _LCD_Write_Char:
  2253                           
  2254                           ;incstack = 0
  2255 ;; hardware stack exceeded
  2256                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2257                           ;LCD_Write_Char@Data stored from wreg
  2258  056C  1283               	bcf	3,5	;RP0=0, select bank0
  2259  056D  1303               	bcf	3,6	;RP1=0, select bank0
  2260  056E  00AD               	movwf	LCD_Write_Char@Data
  2261  056F                     l1578:
  2262                           
  2263                           ;I2C_LCD.c: 99: void LCD_Write_Char(char Data);I2C_LCD.c: 100: {;I2C_LCD.c: 101:   RS = 
      +                          1;
  2264  056F  01C4               	clrf	_RS
  2265  0570  0AC4               	incf	_RS,f
  2266  0571                     l1580:
  2267                           
  2268                           ;I2C_LCD.c: 102:   LCD_Write_4Bit(Data & 0xF0);
  2269  0571  082D               	movf	LCD_Write_Char@Data,w
  2270  0572  39F0               	andlw	240
  2271  0573  120A  118A  258B  120A  118A  	fcall	_LCD_Write_4Bit
  2272                           
  2273                           ;I2C_LCD.c: 103:   LCD_Write_4Bit((Data << 4) & 0xF0);
  2274  0578  1283               	bcf	3,5	;RP0=0, select bank0
  2275  0579  1303               	bcf	3,6	;RP1=0, select bank0
  2276  057A  082D               	movf	LCD_Write_Char@Data,w
  2277  057B  00AC               	movwf	??_LCD_Write_Char
  2278  057C  3003               	movlw	3
  2279  057D                     u775:
  2280  057D  1003               	clrc
  2281  057E  0DAC               	rlf	??_LCD_Write_Char,f
  2282  057F  3EFF               	addlw	-1
  2283  0580  1D03               	skipz
  2284  0581  2D7D               	goto	u775
  2285  0582  1003               	clrc
  2286  0583  0D2C               	rlf	??_LCD_Write_Char,w
  2287  0584  39F0               	andlw	240
  2288  0585  120A  118A  258B  120A  118A  	fcall	_LCD_Write_4Bit
  2289  058A                     l70:
  2290  058A  0008               	return
  2291  058B                     __end_of_LCD_Write_Char:
  2292                           
  2293                           	psect	text10
  2294  054A                     __ptext10:	
  2295 ;; *************** function _LCD_Set_Cursor *****************
  2296 ;; Defined at:
  2297 ;;		line 112 in file "I2C_LCD.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  ROW             1    wreg     unsigned char 
  2300 ;;  COL             1   14[BANK0 ] unsigned char 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  ROW             1   17[BANK0 ] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  1    wreg      void 
  2305 ;; Registers used:
  2306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2312 ;;      Params:         0       1       0       0       0
  2313 ;;      Locals:         0       1       0       0       0
  2314 ;;      Temps:          0       2       0       0       0
  2315 ;;      Totals:         0       4       0       0       0
  2316 ;;Total ram usage:        4 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    8
  2319 ;; This function calls:
  2320 ;;		_LCD_CMD
  2321 ;; This function is called by:
  2322 ;;		_main
  2323 ;;		_LCD_Write
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           
  2328                           ;psect for function _LCD_Set_Cursor
  2329  054A                     _LCD_Set_Cursor:
  2330                           
  2331                           ;incstack = 0
  2332 ;; hardware stack exceeded
  2333                           ; Regs used in _LCD_Set_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2334                           ;LCD_Set_Cursor@ROW stored from wreg
  2335  054A  1283               	bcf	3,5	;RP0=0, select bank0
  2336  054B  1303               	bcf	3,6	;RP1=0, select bank0
  2337  054C  00B1               	movwf	LCD_Set_Cursor@ROW
  2338  054D                     l1582:
  2339                           
  2340                           ;I2C_LCD.c: 112: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);I2C_LCD.c: 11
      +                          3: {;I2C_LCD.c: 114:   switch (ROW)
  2341  054D  2D5E               	goto	l1588
  2342  054E                     l1584:
  2343                           
  2344                           ;I2C_LCD.c: 117:     LCD_CMD(0xC0 + COL - 1);
  2345  054E  082E               	movf	LCD_Set_Cursor@COL,w
  2346  054F  3EBF               	addlw	191
  2347  0550  120A  118A  25E8  120A  118A  	fcall	_LCD_CMD
  2348                           
  2349                           ;I2C_LCD.c: 118:     break;
  2350  0555  2D6B               	goto	l83
  2351  0556                     l1586:
  2352                           
  2353                           ;I2C_LCD.c: 122:     LCD_CMD(0x80 + COL - 1);
  2354  0556  082E               	movf	LCD_Set_Cursor@COL,w
  2355  0557  3E7F               	addlw	127
  2356  0558  120A  118A  25E8  120A  118A  	fcall	_LCD_CMD
  2357                           
  2358                           ;I2C_LCD.c: 123:   }
  2359  055D  2D6B               	goto	l83
  2360  055E                     l1588:
  2361  055E  0831               	movf	LCD_Set_Cursor@ROW,w
  2362  055F  00AF               	movwf	??_LCD_Set_Cursor
  2363  0560  01B0               	clrf	??_LCD_Set_Cursor+1
  2364                           
  2365                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2366                           ; Switch size 1, requested type "simple"
  2367                           ; Number of cases is 1, Range of values is 0 to 0
  2368                           ; switch strategies available:
  2369                           ; Name         Instructions Cycles
  2370                           ; simple_byte            4     3 (average)
  2371                           ; direct_byte           11     8 (fixed)
  2372                           ; jumptable            260     6 (fixed)
  2373                           ;	Chosen strategy is simple_byte
  2374  0561  0830               	movf	??_LCD_Set_Cursor+1,w
  2375  0562  3A00               	xorlw	0	; case 0
  2376  0563  1903               	skipnz
  2377  0564  2D66               	goto	l2112
  2378  0565  2D56               	goto	l1586
  2379  0566                     l2112:
  2380                           
  2381                           ; Switch size 1, requested type "simple"
  2382                           ; Number of cases is 1, Range of values is 2 to 2
  2383                           ; switch strategies available:
  2384                           ; Name         Instructions Cycles
  2385                           ; simple_byte            4     3 (average)
  2386                           ; direct_byte           14    11 (fixed)
  2387                           ; jumptable            263     9 (fixed)
  2388                           ;	Chosen strategy is simple_byte
  2389  0566  082F               	movf	??_LCD_Set_Cursor,w
  2390  0567  3A02               	xorlw	2	; case 2
  2391  0568  1903               	skipnz
  2392  0569  2D4E               	goto	l1584
  2393  056A  2D56               	goto	l1586
  2394  056B                     l83:
  2395  056B  0008               	return
  2396  056C                     __end_of_LCD_Set_Cursor:
  2397                           
  2398                           	psect	text11
  2399  0237                     __ptext11:	
  2400 ;; *************** function _LCD_Init *****************
  2401 ;; Defined at:
  2402 ;;		line 52 in file "I2C_LCD.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  I2C_Add         1    wreg     unsigned char 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  I2C_Add         1   17[BANK0 ] unsigned char 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, status,0, pclath, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2416 ;;      Params:         0       0       0       0       0
  2417 ;;      Locals:         0       1       0       0       0
  2418 ;;      Temps:          0       3       0       0       0
  2419 ;;      Totals:         0       4       0       0       0
  2420 ;;Total ram usage:        4 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    8
  2423 ;; This function calls:
  2424 ;;		_IO_Expander_Write
  2425 ;;		_LCD_CMD
  2426 ;; This function is called by:
  2427 ;;		_main
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           
  2432                           ;psect for function _LCD_Init
  2433  0237                     _LCD_Init:
  2434                           
  2435                           ;incstack = 0
  2436 ;; hardware stack exceeded
  2437                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2438                           ;LCD_Init@I2C_Add stored from wreg
  2439  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2440  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2441  0239  00B1               	movwf	LCD_Init@I2C_Add
  2442  023A                     l1692:
  2443                           
  2444                           ;I2C_LCD.c: 52: void LCD_Init(unsigned char I2C_Add);I2C_LCD.c: 53: {;I2C_LCD.c: 54:   i
      +                          2c_add = I2C_Add;
  2445  023A  0831               	movf	LCD_Init@I2C_Add,w
  2446  023B  00AE               	movwf	??_LCD_Init
  2447  023C  082E               	movf	??_LCD_Init,w
  2448  023D  00CB               	movwf	_i2c_add
  2449  023E                     l1694:
  2450                           
  2451                           ;I2C_LCD.c: 55:   IO_Expander_Write(0x00);
  2452  023E  3000               	movlw	0
  2453  023F  120A  118A  25AA  120A  118A  	fcall	_IO_Expander_Write
  2454  0244                     l1696:
  2455                           
  2456                           ;I2C_LCD.c: 56:   _delay((unsigned long)((30)*(20000000/4000.0)));
  2457  0244  30C3               	movlw	195
  2458  0245  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0246  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0247  00AF               	movwf	??_LCD_Init+1
  2461  0248  30CC               	movlw	204
  2462  0249  00AE               	movwf	??_LCD_Init
  2463  024A                     u1457:
  2464  024A  0BAE               	decfsz	??_LCD_Init,f
  2465  024B  2A4A               	goto	u1457
  2466  024C  0BAF               	decfsz	??_LCD_Init+1,f
  2467  024D  2A4A               	goto	u1457
  2468  024E  0000               	nop
  2469                           
  2470                           ;I2C_LCD.c: 57:   LCD_CMD(0x03);
  2471  024F  3003               	movlw	3
  2472  0250  120A  118A  25E8  120A  118A  	fcall	_LCD_CMD
  2473  0255                     l1698:
  2474                           
  2475                           ;I2C_LCD.c: 58:   _delay((unsigned long)((5)*(20000000/4000.0)));
  2476  0255  3021               	movlw	33
  2477  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2478  0257  1303               	bcf	3,6	;RP1=0, select bank0
  2479  0258  00AF               	movwf	??_LCD_Init+1
  2480  0259  3075               	movlw	117
  2481  025A  00AE               	movwf	??_LCD_Init
  2482  025B                     u1467:
  2483  025B  0BAE               	decfsz	??_LCD_Init,f
  2484  025C  2A5B               	goto	u1467
  2485  025D  0BAF               	decfsz	??_LCD_Init+1,f
  2486  025E  2A5B               	goto	u1467
  2487  025F  2A60               	nop2
  2488  0260                     l1700:
  2489                           
  2490                           ;I2C_LCD.c: 59:   LCD_CMD(0x03);
  2491  0260  3003               	movlw	3
  2492  0261  120A  118A  25E8  120A  118A  	fcall	_LCD_CMD
  2493                           
  2494                           ;I2C_LCD.c: 60:   _delay((unsigned long)((5)*(20000000/4000.0)));
  2495  0266  3021               	movlw	33
  2496  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2498  0269  00AF               	movwf	??_LCD_Init+1
  2499  026A  3075               	movlw	117
  2500  026B  00AE               	movwf	??_LCD_Init
  2501  026C                     u1477:
  2502  026C  0BAE               	decfsz	??_LCD_Init,f
  2503  026D  2A6C               	goto	u1477
  2504  026E  0BAF               	decfsz	??_LCD_Init+1,f
  2505  026F  2A6C               	goto	u1477
  2506  0270  2A71               	nop2
  2507  0271                     l1702:
  2508                           
  2509                           ;I2C_LCD.c: 61:   LCD_CMD(0x03);
  2510  0271  3003               	movlw	3
  2511  0272  120A  118A  25E8  120A  118A  	fcall	_LCD_CMD
  2512  0277                     l1704:
  2513                           
  2514                           ;I2C_LCD.c: 62:   _delay((unsigned long)((5)*(20000000/4000.0)));
  2515  0277  3021               	movlw	33
  2516  0278  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0279  1303               	bcf	3,6	;RP1=0, select bank0
  2518  027A  00AF               	movwf	??_LCD_Init+1
  2519  027B  3075               	movlw	117
  2520  027C  00AE               	movwf	??_LCD_Init
  2521  027D                     u1487:
  2522  027D  0BAE               	decfsz	??_LCD_Init,f
  2523  027E  2A7D               	goto	u1487
  2524  027F  0BAF               	decfsz	??_LCD_Init+1,f
  2525  0280  2A7D               	goto	u1487
  2526  0281  2A82               	nop2
  2527                           
  2528                           ;I2C_LCD.c: 63:   LCD_CMD(0x02);
  2529  0282  3002               	movlw	2
  2530  0283  120A  118A  25E8  120A  118A  	fcall	_LCD_CMD
  2531  0288                     l1706:
  2532                           
  2533                           ;I2C_LCD.c: 64:   _delay((unsigned long)((5)*(20000000/4000.0)));
  2534  0288  3021               	movlw	33
  2535  0289  1283               	bcf	3,5	;RP0=0, select bank0
  2536  028A  1303               	bcf	3,6	;RP1=0, select bank0
  2537  028B  00AF               	movwf	??_LCD_Init+1
  2538  028C  3075               	movlw	117
  2539  028D  00AE               	movwf	??_LCD_Init
  2540  028E                     u1497:
  2541  028E  0BAE               	decfsz	??_LCD_Init,f
  2542  028F  2A8E               	goto	u1497
  2543  0290  0BAF               	decfsz	??_LCD_Init+1,f
  2544  0291  2A8E               	goto	u1497
  2545  0292  2A93               	nop2
  2546  0293                     l1708:
  2547                           
  2548                           ;I2C_LCD.c: 65:   LCD_CMD(0x20 | (2 << 2));
  2549  0293  3028               	movlw	40
  2550  0294  120A  118A  25E8  120A  118A  	fcall	_LCD_CMD
  2551                           
  2552                           ;I2C_LCD.c: 66:   _delay((unsigned long)((50)*(20000000/4000.0)));
  2553  0299  3002               	movlw	2
  2554  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2555  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2556  029C  00B0               	movwf	??_LCD_Init+2
  2557  029D  3045               	movlw	69
  2558  029E  00AF               	movwf	??_LCD_Init+1
  2559  029F  30A9               	movlw	169
  2560  02A0  00AE               	movwf	??_LCD_Init
  2561  02A1                     u1507:
  2562  02A1  0BAE               	decfsz	??_LCD_Init,f
  2563  02A2  2AA1               	goto	u1507
  2564  02A3  0BAF               	decfsz	??_LCD_Init+1,f
  2565  02A4  2AA1               	goto	u1507
  2566  02A5  0BB0               	decfsz	??_LCD_Init+2,f
  2567  02A6  2AA1               	goto	u1507
  2568  02A7                     l1710:
  2569                           
  2570                           ;I2C_LCD.c: 67:   LCD_CMD(0x0C);
  2571  02A7  300C               	movlw	12
  2572  02A8  120A  118A  25E8  120A  118A  	fcall	_LCD_CMD
  2573  02AD                     l1712:
  2574                           
  2575                           ;I2C_LCD.c: 68:   _delay((unsigned long)((50)*(20000000/4000.0)));
  2576  02AD  3002               	movlw	2
  2577  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2578  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  2579  02B0  00B0               	movwf	??_LCD_Init+2
  2580  02B1  3045               	movlw	69
  2581  02B2  00AF               	movwf	??_LCD_Init+1
  2582  02B3  30A9               	movlw	169
  2583  02B4  00AE               	movwf	??_LCD_Init
  2584  02B5                     u1517:
  2585  02B5  0BAE               	decfsz	??_LCD_Init,f
  2586  02B6  2AB5               	goto	u1517
  2587  02B7  0BAF               	decfsz	??_LCD_Init+1,f
  2588  02B8  2AB5               	goto	u1517
  2589  02B9  0BB0               	decfsz	??_LCD_Init+2,f
  2590  02BA  2AB5               	goto	u1517
  2591                           
  2592                           ;I2C_LCD.c: 69:   LCD_CMD(0x01);
  2593  02BB  3001               	movlw	1
  2594  02BC  120A  118A  25E8  120A  118A  	fcall	_LCD_CMD
  2595  02C1                     l1714:
  2596                           
  2597                           ;I2C_LCD.c: 70:   _delay((unsigned long)((50)*(20000000/4000.0)));
  2598  02C1  3002               	movlw	2
  2599  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2600  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2601  02C4  00B0               	movwf	??_LCD_Init+2
  2602  02C5  3045               	movlw	69
  2603  02C6  00AF               	movwf	??_LCD_Init+1
  2604  02C7  30A9               	movlw	169
  2605  02C8  00AE               	movwf	??_LCD_Init
  2606  02C9                     u1527:
  2607  02C9  0BAE               	decfsz	??_LCD_Init,f
  2608  02CA  2AC9               	goto	u1527
  2609  02CB  0BAF               	decfsz	??_LCD_Init+1,f
  2610  02CC  2AC9               	goto	u1527
  2611  02CD  0BB0               	decfsz	??_LCD_Init+2,f
  2612  02CE  2AC9               	goto	u1527
  2613  02CF                     l1716:
  2614                           
  2615                           ;I2C_LCD.c: 71:   LCD_CMD(0x04 | 0x02);
  2616  02CF  3006               	movlw	6
  2617  02D0  120A  118A  25E8  120A  118A  	fcall	_LCD_CMD
  2618                           
  2619                           ;I2C_LCD.c: 72:   _delay((unsigned long)((50)*(20000000/4000.0)));
  2620  02D5  3002               	movlw	2
  2621  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2622  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2623  02D8  00B0               	movwf	??_LCD_Init+2
  2624  02D9  3045               	movlw	69
  2625  02DA  00AF               	movwf	??_LCD_Init+1
  2626  02DB  30A9               	movlw	169
  2627  02DC  00AE               	movwf	??_LCD_Init
  2628  02DD                     u1537:
  2629  02DD  0BAE               	decfsz	??_LCD_Init,f
  2630  02DE  2ADD               	goto	u1537
  2631  02DF  0BAF               	decfsz	??_LCD_Init+1,f
  2632  02E0  2ADD               	goto	u1537
  2633  02E1  0BB0               	decfsz	??_LCD_Init+2,f
  2634  02E2  2ADD               	goto	u1537
  2635  02E3                     l58:
  2636  02E3  0008               	return
  2637  02E4                     __end_of_LCD_Init:
  2638                           
  2639                           	psect	text12
  2640  068F                     __ptext12:	
  2641 ;; *************** function _LCD_Clear *****************
  2642 ;; Defined at:
  2643 ;;		line 150 in file "I2C_LCD.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;		None
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, status,2, status,0, pclath, cstack
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2657 ;;      Params:         0       0       0       0       0
  2658 ;;      Locals:         0       0       0       0       0
  2659 ;;      Temps:          0       1       0       0       0
  2660 ;;      Totals:         0       1       0       0       0
  2661 ;;Total ram usage:        1 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; Hardware stack levels required when called:    8
  2664 ;; This function calls:
  2665 ;;		_LCD_CMD
  2666 ;; This function is called by:
  2667 ;;		_main
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function _LCD_Clear
  2673  068F                     _LCD_Clear:
  2674  068F                     l1726:	
  2675                           ;incstack = 0
  2676 ;; hardware stack exceeded
  2677                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2678                           
  2679                           
  2680                           ;I2C_LCD.c: 152:   LCD_CMD(0x01);
  2681  068F  3001               	movlw	1
  2682  0690  120A  118A  25E8  120A  118A  	fcall	_LCD_CMD
  2683  0695                     l1728:
  2684                           
  2685                           ;I2C_LCD.c: 153:   _delay((unsigned long)((40)*(20000000/4000000.0)));
  2686  0695  3041               	movlw	65
  2687  0696  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0697  1303               	bcf	3,6	;RP1=0, select bank0
  2689  0698  00AE               	movwf	??_LCD_Clear
  2690  0699                     u1547:
  2691  0699  0BAE               	decfsz	??_LCD_Clear,f
  2692  069A  2E99               	goto	u1547
  2693  069B  2E9C               	nop2
  2694  069C                     l98:
  2695  069C  0008               	return
  2696  069D                     __end_of_LCD_Clear:
  2697                           
  2698                           	psect	text13
  2699  05E8                     __ptext13:	
  2700 ;; *************** function _LCD_CMD *****************
  2701 ;; Defined at:
  2702 ;;		line 92 in file "I2C_LCD.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  CMD             1    wreg     unsigned char 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  CMD             1   13[BANK0 ] unsigned char 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;                  1    wreg      void 
  2709 ;; Registers used:
  2710 ;;		wreg, status,2, status,0, pclath, cstack
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2716 ;;      Params:         0       0       0       0       0
  2717 ;;      Locals:         0       1       0       0       0
  2718 ;;      Temps:          0       1       0       0       0
  2719 ;;      Totals:         0       2       0       0       0
  2720 ;;Total ram usage:        2 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; Hardware stack levels required when called:    7
  2723 ;; This function calls:
  2724 ;;		_LCD_Write_4Bit
  2725 ;; This function is called by:
  2726 ;;		_LCD_Init
  2727 ;;		_LCD_Set_Cursor
  2728 ;;		_LCD_Clear
  2729 ;;		_LCD_SL
  2730 ;;		_LCD_SR
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           
  2735                           ;psect for function _LCD_CMD
  2736  05E8                     _LCD_CMD:
  2737                           
  2738                           ;incstack = 0
  2739 ;; hardware stack exceeded
  2740                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  2741                           ;LCD_CMD@CMD stored from wreg
  2742  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  2743  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  2744  05EA  00AD               	movwf	LCD_CMD@CMD
  2745  05EB                     l1572:
  2746                           
  2747                           ;I2C_LCD.c: 92: void LCD_CMD(unsigned char CMD);I2C_LCD.c: 93: {;I2C_LCD.c: 94:   RS = 0
      +                          ;
  2748  05EB  01C4               	clrf	_RS
  2749  05EC                     l1574:
  2750                           
  2751                           ;I2C_LCD.c: 95:   LCD_Write_4Bit(CMD & 0xF0);
  2752  05EC  082D               	movf	LCD_CMD@CMD,w
  2753  05ED  39F0               	andlw	240
  2754  05EE  120A  118A  258B  120A  118A  	fcall	_LCD_Write_4Bit
  2755  05F3                     l1576:
  2756                           
  2757                           ;I2C_LCD.c: 96:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  2758  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  2759  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  2760  05F5  082D               	movf	LCD_CMD@CMD,w
  2761  05F6  00AC               	movwf	??_LCD_CMD
  2762  05F7  3003               	movlw	3
  2763  05F8                     u765:
  2764  05F8  1003               	clrc
  2765  05F9  0DAC               	rlf	??_LCD_CMD,f
  2766  05FA  3EFF               	addlw	-1
  2767  05FB  1D03               	skipz
  2768  05FC  2DF8               	goto	u765
  2769  05FD  1003               	clrc
  2770  05FE  0D2C               	rlf	??_LCD_CMD,w
  2771  05FF  39F0               	andlw	240
  2772  0600  120A  118A  258B  120A  118A  	fcall	_LCD_Write_4Bit
  2773  0605                     l67:
  2774  0605  0008               	return
  2775  0606                     __end_of_LCD_CMD:
  2776                           
  2777                           	psect	text14
  2778  058B                     __ptext14:	
  2779 ;; *************** function _LCD_Write_4Bit *****************
  2780 ;; Defined at:
  2781 ;;		line 83 in file "I2C_LCD.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  Nibble          1    wreg     unsigned char 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  Nibble          1   11[BANK0 ] unsigned char 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, status,2, status,0, pclath, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2795 ;;      Params:         0       0       0       0       0
  2796 ;;      Locals:         0       1       0       0       0
  2797 ;;      Temps:          0       1       0       0       0
  2798 ;;      Totals:         0       2       0       0       0
  2799 ;;Total ram usage:        2 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    6
  2802 ;; This function calls:
  2803 ;;		_IO_Expander_Write
  2804 ;; This function is called by:
  2805 ;;		_LCD_CMD
  2806 ;;		_LCD_Write_Char
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           
  2811                           ;psect for function _LCD_Write_4Bit
  2812  058B                     _LCD_Write_4Bit:
  2813                           
  2814                           ;incstack = 0
  2815 ;; hardware stack exceeded
  2816                           ; Regs used in _LCD_Write_4Bit: [wreg+status,2+status,0+pclath+cstack]
  2817                           ;LCD_Write_4Bit@Nibble stored from wreg
  2818  058B  1283               	bcf	3,5	;RP0=0, select bank0
  2819  058C  1303               	bcf	3,6	;RP1=0, select bank0
  2820  058D  00AB               	movwf	LCD_Write_4Bit@Nibble
  2821  058E                     l1566:
  2822                           
  2823                           ;I2C_LCD.c: 83: void LCD_Write_4Bit(unsigned char Nibble);I2C_LCD.c: 84: {;I2C_LCD.c: 86
      +                          :   Nibble |= RS;
  2824  058E  0844               	movf	_RS,w
  2825  058F  00AA               	movwf	??_LCD_Write_4Bit
  2826  0590  082A               	movf	??_LCD_Write_4Bit,w
  2827  0591  04AB               	iorwf	LCD_Write_4Bit@Nibble,f
  2828  0592                     l1568:
  2829                           
  2830                           ;I2C_LCD.c: 87:   IO_Expander_Write(Nibble | 0x04);
  2831  0592  082B               	movf	LCD_Write_4Bit@Nibble,w
  2832  0593  3804               	iorlw	4
  2833  0594  120A  118A  25AA  120A  118A  	fcall	_IO_Expander_Write
  2834  0599                     l1570:
  2835                           
  2836                           ;I2C_LCD.c: 88:   IO_Expander_Write(Nibble & 0xFB);
  2837  0599  1283               	bcf	3,5	;RP0=0, select bank0
  2838  059A  1303               	bcf	3,6	;RP1=0, select bank0
  2839  059B  082B               	movf	LCD_Write_4Bit@Nibble,w
  2840  059C  39FB               	andlw	251
  2841  059D  120A  118A  25AA  120A  118A  	fcall	_IO_Expander_Write
  2842                           
  2843                           ;I2C_LCD.c: 89:   _delay((unsigned long)((50)*(20000000/4000000.0)));
  2844  05A2  3052               	movlw	82
  2845  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  2846  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  2847  05A5  00AA               	movwf	??_LCD_Write_4Bit
  2848  05A6                     u1557:
  2849  05A6  0BAA               	decfsz	??_LCD_Write_4Bit,f
  2850  05A7  2DA6               	goto	u1557
  2851  05A8  0000               	nop
  2852  05A9                     l64:
  2853  05A9  0008               	return
  2854  05AA                     __end_of_LCD_Write_4Bit:
  2855                           
  2856                           	psect	text15
  2857  05AA                     __ptext15:	
  2858 ;; *************** function _IO_Expander_Write *****************
  2859 ;; Defined at:
  2860 ;;		line 75 in file "I2C_LCD.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  Data            1    wreg     unsigned char 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  Data            1    9[BANK0 ] unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      void 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0, pclath, cstack
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2874 ;;      Params:         0       0       0       0       0
  2875 ;;      Locals:         0       1       0       0       0
  2876 ;;      Temps:          0       0       0       0       0
  2877 ;;      Totals:         0       1       0       0       0
  2878 ;;Total ram usage:        1 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    5
  2881 ;; This function calls:
  2882 ;;		_I2C_Master_Start
  2883 ;;		_I2C_Master_Stop
  2884 ;;		_I2C_Master_Write
  2885 ;; This function is called by:
  2886 ;;		_LCD_Init
  2887 ;;		_LCD_Write_4Bit
  2888 ;;		_Backlight
  2889 ;;		_noBacklight
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           
  2894                           ;psect for function _IO_Expander_Write
  2895  05AA                     _IO_Expander_Write:
  2896                           
  2897                           ;incstack = 0
  2898 ;; hardware stack exceeded
  2899                           ; Regs used in _IO_Expander_Write: [wreg+status,2+status,0+pclath+cstack]
  2900                           ;IO_Expander_Write@Data stored from wreg
  2901  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2902  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2903  05AC  00A9               	movwf	IO_Expander_Write@Data
  2904  05AD                     l1564:
  2905                           
  2906                           ;I2C_LCD.c: 75: void IO_Expander_Write(unsigned char Data);I2C_LCD.c: 76: {;I2C_LCD.c: 7
      +                          7:   I2C_Master_Start();
  2907  05AD  120A  118A  26E5  120A  118A  	fcall	_I2C_Master_Start
  2908                           
  2909                           ;I2C_LCD.c: 78:   I2C_Master_Write(i2c_add);
  2910  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  2911  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  2912  05B4  084B               	movf	_i2c_add,w
  2913  05B5  120A  118A  266E  120A  118A  	fcall	_I2C_Master_Write
  2914                           
  2915                           ;I2C_LCD.c: 79:   I2C_Master_Write(Data | BackLight_State);
  2916  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  2917  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  2918  05BC  0829               	movf	IO_Expander_Write@Data,w
  2919  05BD  044A               	iorwf	_BackLight_State,w
  2920  05BE  120A  118A  266E  120A  118A  	fcall	_I2C_Master_Write
  2921                           
  2922                           ;I2C_LCD.c: 80:   I2C_Master_Stop();
  2923  05C3  120A  118A  26DC  120A  118A  	fcall	_I2C_Master_Stop
  2924  05C8                     l61:
  2925  05C8  0008               	return
  2926  05C9                     __end_of_IO_Expander_Write:
  2927                           
  2928                           	psect	text16
  2929  066E                     __ptext16:	
  2930 ;; *************** function _I2C_Master_Write *****************
  2931 ;; Defined at:
  2932 ;;		line 37 in file "I2C_LCD.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  data            1    wreg     unsigned char 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  data            1    8[BANK0 ] unsigned char 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      unsigned char 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, status,0, pclath, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2946 ;;      Params:         0       0       0       0       0
  2947 ;;      Locals:         0       1       0       0       0
  2948 ;;      Temps:          0       0       0       0       0
  2949 ;;      Totals:         0       1       0       0       0
  2950 ;;Total ram usage:        1 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; Hardware stack levels required when called:    4
  2953 ;; This function calls:
  2954 ;;		_I2C_Master_Wait
  2955 ;; This function is called by:
  2956 ;;		_IO_Expander_Write
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           
  2961                           ;psect for function _I2C_Master_Write
  2962  066E                     _I2C_Master_Write:
  2963                           
  2964                           ;incstack = 0
  2965 ;; hardware stack exceeded
  2966                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2967                           ;I2C_Master_Write@data stored from wreg
  2968  066E  1283               	bcf	3,5	;RP0=0, select bank0
  2969  066F  1303               	bcf	3,6	;RP1=0, select bank0
  2970  0670  00A8               	movwf	I2C_Master_Write@data
  2971  0671                     l1560:
  2972                           
  2973                           ;I2C_LCD.c: 37: unsigned char I2C_Master_Write(unsigned char data);I2C_LCD.c: 38: {;I2C_
      +                          LCD.c: 39:   I2C_Master_Wait();
  2974  0671  120A  118A  26AB  120A  118A  	fcall	_I2C_Master_Wait
  2975  0676                     l1562:
  2976                           
  2977                           ;I2C_LCD.c: 40:   SSPBUF = data;
  2978  0676  1283               	bcf	3,5	;RP0=0, select bank0
  2979  0677  1303               	bcf	3,6	;RP1=0, select bank0
  2980  0678  0828               	movf	I2C_Master_Write@data,w
  2981  0679  0093               	movwf	19	;volatile
  2982  067A                     l52:	
  2983                           ;I2C_LCD.c: 42:     ;
  2984                           
  2985                           
  2986                           ;I2C_LCD.c: 41:   while (!SSPIF)
  2987  067A  1D8C               	btfss	12,3	;volatile
  2988  067B  2E7D               	goto	u751
  2989  067C  2E7E               	goto	u750
  2990  067D                     u751:
  2991  067D  2E7A               	goto	l52
  2992  067E                     u750:
  2993  067E                     l54:
  2994                           
  2995                           ;I2C_LCD.c: 43:   SSPIF = 0;
  2996  067E  118C               	bcf	12,3	;volatile
  2997  067F                     l55:	
  2998                           ;I2C_LCD.c: 44:   return ACKSTAT;;	Return value of _I2C_Master_Write is never used
  2999                           
  3000  067F  0008               	return
  3001  0680                     __end_of_I2C_Master_Write:
  3002                           
  3003                           	psect	text17
  3004  06DC                     __ptext17:	
  3005 ;; *************** function _I2C_Master_Stop *****************
  3006 ;; Defined at:
  3007 ;;		line 31 in file "I2C_LCD.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;		None
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;		None
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0, pclath, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3021 ;;      Params:         0       0       0       0       0
  3022 ;;      Locals:         0       0       0       0       0
  3023 ;;      Temps:          0       0       0       0       0
  3024 ;;      Totals:         0       0       0       0       0
  3025 ;;Total ram usage:        0 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    4
  3028 ;; This function calls:
  3029 ;;		_I2C_Master_Wait
  3030 ;; This function is called by:
  3031 ;;		_IO_Expander_Write
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _I2C_Master_Stop
  3037  06DC                     _I2C_Master_Stop:
  3038  06DC                     l1556:	
  3039                           ;incstack = 0
  3040 ;; hardware stack exceeded
  3041                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3042                           
  3043                           
  3044                           ;I2C_LCD.c: 33:   I2C_Master_Wait();
  3045  06DC  120A  118A  26AB  120A  118A  	fcall	_I2C_Master_Wait
  3046  06E1                     l1558:
  3047                           
  3048                           ;I2C_LCD.c: 34:   PEN = 1;
  3049  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  3050  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  3051  06E3  1511               	bsf	17,2	;volatile
  3052  06E4                     l49:
  3053  06E4  0008               	return
  3054  06E5                     __end_of_I2C_Master_Stop:
  3055                           
  3056                           	psect	text18
  3057  06E5                     __ptext18:	
  3058 ;; *************** function _I2C_Master_Start *****************
  3059 ;; Defined at:
  3060 ;;		line 25 in file "I2C_LCD.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;                  1    wreg      void 
  3067 ;; Registers used:
  3068 ;;		wreg, status,2, status,0, pclath, cstack
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3074 ;;      Params:         0       0       0       0       0
  3075 ;;      Locals:         0       0       0       0       0
  3076 ;;      Temps:          0       0       0       0       0
  3077 ;;      Totals:         0       0       0       0       0
  3078 ;;Total ram usage:        0 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    4
  3081 ;; This function calls:
  3082 ;;		_I2C_Master_Wait
  3083 ;; This function is called by:
  3084 ;;		_IO_Expander_Write
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           
  3089                           ;psect for function _I2C_Master_Start
  3090  06E5                     _I2C_Master_Start:
  3091  06E5                     l1552:	
  3092                           ;incstack = 0
  3093 ;; hardware stack exceeded
  3094                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3095                           
  3096                           
  3097                           ;I2C_LCD.c: 27:   I2C_Master_Wait();
  3098  06E5  120A  118A  26AB  120A  118A  	fcall	_I2C_Master_Wait
  3099  06EA                     l1554:
  3100                           
  3101                           ;I2C_LCD.c: 28:   SEN = 1;
  3102  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  3103  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  3104  06EC  1411               	bsf	17,0	;volatile
  3105  06ED                     l46:
  3106  06ED  0008               	return
  3107  06EE                     __end_of_I2C_Master_Start:
  3108                           
  3109                           	psect	text19
  3110  06AB                     __ptext19:	
  3111 ;; *************** function _I2C_Master_Wait *****************
  3112 ;; Defined at:
  3113 ;;		line 19 in file "I2C_LCD.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;		None
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;		None
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      void 
  3120 ;; Registers used:
  3121 ;;		wreg, status,2
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3127 ;;      Params:         0       0       0       0       0
  3128 ;;      Locals:         0       0       0       0       0
  3129 ;;      Temps:          0       0       0       0       0
  3130 ;;      Totals:         0       0       0       0       0
  3131 ;;Total ram usage:        0 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    3
  3134 ;; This function calls:
  3135 ;;		Nothing
  3136 ;; This function is called by:
  3137 ;;		_I2C_Master_Start
  3138 ;;		_I2C_Master_Stop
  3139 ;;		_I2C_Master_Write
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           
  3144                           ;psect for function _I2C_Master_Wait
  3145  06AB                     _I2C_Master_Wait:
  3146  06AB                     l1548:	
  3147                           ;incstack = 0
  3148 ;; hardware stack exceeded
  3149                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3150                           
  3151  06AB                     l40:	
  3152                           ;I2C_LCD.c: 22:     ;
  3153                           
  3154                           
  3155                           ;I2C_LCD.c: 21:   while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F))
  3156  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  3157  06AC  1303               	bcf	3,6	;RP1=0, select bank1
  3158  06AD  1914               	btfsc	20,2	;volatile
  3159  06AE  2EB0               	goto	u731
  3160  06AF  2EB1               	goto	u730
  3161  06B0                     u731:
  3162  06B0  2EAB               	goto	l40
  3163  06B1                     u730:
  3164  06B1                     l1550:
  3165  06B1  0811               	movf	17,w	;volatile
  3166  06B2  391F               	andlw	31
  3167  06B3  1D03               	btfss	3,2
  3168  06B4  2EB6               	goto	u741
  3169  06B5  2EB7               	goto	u740
  3170  06B6                     u741:
  3171  06B6  2EAB               	goto	l40
  3172  06B7                     u740:
  3173  06B7                     l43:
  3174  06B7  0008               	return
  3175  06B8                     __end_of_I2C_Master_Wait:
  3176                           
  3177                           	psect	text20
  3178  06F4                     __ptext20:	
  3179 ;; *************** function _IR_Init *****************
  3180 ;; Defined at:
  3181 ;;		line 398 in file "BTL_HIHI_main.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;		None
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;		None
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		None
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3195 ;;      Params:         0       0       0       0       0
  3196 ;;      Locals:         0       0       0       0       0
  3197 ;;      Temps:          0       0       0       0       0
  3198 ;;      Totals:         0       0       0       0       0
  3199 ;;Total ram usage:        0 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    3
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		_main
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           
  3210                           ;psect for function _IR_Init
  3211  06F4                     _IR_Init:
  3212  06F4                     l1744:	
  3213                           ;incstack = 0
  3214                           ; Regs used in _IR_Init: []
  3215                           
  3216                           
  3217                           ;BTL_HIHI_main.c: 400:     INTEDG = 1 ;
  3218  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  3219  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  3220  06F6  1701               	bsf	1,6	;volatile
  3221                           
  3222                           ;BTL_HIHI_main.c: 401:     INTE = 1;
  3223  06F7  160B               	bsf	11,4	;volatile
  3224                           
  3225                           ;BTL_HIHI_main.c: 402:     GIE = 1;
  3226  06F8  178B               	bsf	11,7	;volatile
  3227  06F9                     l370:
  3228  06F9  0008               	return
  3229  06FA                     __end_of_IR_Init:
  3230                           
  3231                           	psect	text21
  3232  06B8                     __ptext21:	
  3233 ;; *************** function _I2C_Master_Init *****************
  3234 ;; Defined at:
  3235 ;;		line 9 in file "I2C_LCD.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;		None
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3249 ;;      Params:         0       0       0       0       0
  3250 ;;      Locals:         0       0       0       0       0
  3251 ;;      Temps:          0       0       0       0       0
  3252 ;;      Totals:         0       0       0       0       0
  3253 ;;Total ram usage:        0 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    3
  3256 ;; This function calls:
  3257 ;;		Nothing
  3258 ;; This function is called by:
  3259 ;;		_main
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           
  3264                           ;psect for function _I2C_Master_Init
  3265  06B8                     _I2C_Master_Init:
  3266  06B8                     l1682:	
  3267                           ;incstack = 0
  3268                           ; Regs used in _I2C_Master_Init: [wreg+status,2]
  3269                           
  3270                           
  3271                           ;I2C_LCD.c: 11:   SSPCON = 0x28;
  3272  06B8  3028               	movlw	40
  3273  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3274  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3275  06BB  0094               	movwf	20	;volatile
  3276  06BC                     l1684:
  3277                           
  3278                           ;I2C_LCD.c: 12:   SSPCON2 = 0x00;
  3279  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  3280  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  3281  06BE  0191               	clrf	17	;volatile
  3282  06BF                     l1686:
  3283                           
  3284                           ;I2C_LCD.c: 13:   SSPSTAT = 0x00;
  3285  06BF  0194               	clrf	20	;volatile
  3286                           
  3287                           ;I2C_LCD.c: 14:   SSPADD = ((20000000 / 4) / 100000) - 1;
  3288  06C0  3031               	movlw	49
  3289  06C1  0093               	movwf	19	;volatile
  3290  06C2                     l1688:
  3291                           
  3292                           ;I2C_LCD.c: 15:   TRISC3 = 1;
  3293  06C2  1587               	bsf	7,3	;volatile
  3294  06C3                     l1690:
  3295                           
  3296                           ;I2C_LCD.c: 16:   TRISC4 = 1;
  3297  06C3  1607               	bsf	7,4	;volatile
  3298  06C4                     l37:
  3299  06C4  0008               	return
  3300  06C5                     __end_of_I2C_Master_Init:
  3301                           
  3302                           	psect	text22
  3303  0680                     __ptext22:	
  3304 ;; *************** function _EEPROM_Read *****************
  3305 ;; Defined at:
  3306 ;;		line 444 in file "BTL_HIHI_main.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  Address         1    wreg     unsigned char 
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  Address         1    8[BANK0 ] unsigned char 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      unsigned char 
  3313 ;; Registers used:
  3314 ;;		wreg
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3320 ;;      Params:         0       0       0       0       0
  3321 ;;      Locals:         0       1       0       0       0
  3322 ;;      Temps:          0       0       0       0       0
  3323 ;;      Totals:         0       1       0       0       0
  3324 ;;Total ram usage:        1 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; Hardware stack levels required when called:    3
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_main
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           
  3335                           ;psect for function _EEPROM_Read
  3336  0680                     _EEPROM_Read:
  3337                           
  3338                           ;incstack = 0
  3339                           ; Regs used in _EEPROM_Read: [wreg]
  3340                           ;EEPROM_Read@Address stored from wreg
  3341  0680  1283               	bcf	3,5	;RP0=0, select bank0
  3342  0681  1303               	bcf	3,6	;RP1=0, select bank0
  3343  0682  00A8               	movwf	EEPROM_Read@Address
  3344  0683                     l1772:
  3345                           
  3346                           ;BTL_HIHI_main.c: 444: uint8_t EEPROM_Read(uint8_t Address);BTL_HIHI_main.c: 445: {;BTL_
      +                          HIHI_main.c: 446:     EEADR = Address;
  3347  0683  0828               	movf	EEPROM_Read@Address,w
  3348  0684  1283               	bcf	3,5	;RP0=0, select bank2
  3349  0685  1703               	bsf	3,6	;RP1=1, select bank2
  3350  0686  008D               	movwf	13	;volatile
  3351  0687                     l1774:
  3352                           
  3353                           ;BTL_HIHI_main.c: 447:     EEPGD = 0;
  3354  0687  1683               	bsf	3,5	;RP0=1, select bank3
  3355  0688  1703               	bsf	3,6	;RP1=1, select bank3
  3356  0689  138C               	bcf	12,7	;volsfr
  3357  068A                     l1776:
  3358                           
  3359                           ;BTL_HIHI_main.c: 448:     EECON1bits.RD = 1;
  3360  068A  140C               	bsf	12,0	;volsfr
  3361                           
  3362                           ;BTL_HIHI_main.c: 449:     return EEDATA;
  3363  068B  1283               	bcf	3,5	;RP0=0, select bank2
  3364  068C  1703               	bsf	3,6	;RP1=1, select bank2
  3365  068D  080C               	movf	12,w	;volatile
  3366  068E                     l388:
  3367  068E  0008               	return
  3368  068F                     __end_of_EEPROM_Read:
  3369                           
  3370                           	psect	text23
  3371  0411                     __ptext23:	
  3372 ;; *************** function _ADC_Read *****************
  3373 ;; Defined at:
  3374 ;;		line 328 in file "BTL_HIHI_main.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  ADC_channel     1    wreg     unsigned char 
  3377 ;; Auto vars:     Size  Location     Type
  3378 ;;  ADC_channel     1   13[BANK0 ] unsigned char 
  3379 ;;  result          2   11[BANK0 ] unsigned int 
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  2    8[BANK0 ] unsigned int 
  3382 ;; Registers used:
  3383 ;;		wreg, status,2, status,0
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3389 ;;      Params:         0       2       0       0       0
  3390 ;;      Locals:         0       3       0       0       0
  3391 ;;      Temps:          0       1       0       0       0
  3392 ;;      Totals:         0       6       0       0       0
  3393 ;;Total ram usage:        6 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    3
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		_main
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           
  3404                           ;psect for function _ADC_Read
  3405  0411                     _ADC_Read:
  3406                           
  3407                           ;incstack = 0
  3408                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  3409                           ;ADC_Read@ADC_channel stored from wreg
  3410  0411  1283               	bcf	3,5	;RP0=0, select bank0
  3411  0412  1303               	bcf	3,6	;RP1=0, select bank0
  3412  0413  00AD               	movwf	ADC_Read@ADC_channel
  3413  0414                     l1780:
  3414                           
  3415                           ;BTL_HIHI_main.c: 328: uint16_t ADC_Read(uint8_t ADC_channel);BTL_HIHI_main.c: 329: {;BT
      +                          L_HIHI_main.c: 331:     if (ADC_channel < 0 || ADC_channel > 7)
  3416  0414  3008               	movlw	8
  3417  0415  022D               	subwf	ADC_Read@ADC_channel,w
  3418  0416  1C03               	skipc
  3419  0417  2C19               	goto	u991
  3420  0418  2C1A               	goto	u990
  3421  0419                     u991:
  3422  0419  2C1D               	goto	l352
  3423  041A                     u990:
  3424  041A                     l1782:
  3425                           
  3426                           ;BTL_HIHI_main.c: 332:         return 0;
  3427  041A  01A8               	clrf	?_ADC_Read
  3428  041B  01A9               	clrf	?_ADC_Read+1
  3429  041C  2C65               	goto	l353
  3430  041D                     l352:
  3431                           
  3432                           ;BTL_HIHI_main.c: 335:     CHS0 = (ADC_channel & 1) >> 0;
  3433  041D  182D               	btfsc	ADC_Read@ADC_channel,0
  3434  041E  2C20               	goto	u1001
  3435  041F  2C24               	goto	u1000
  3436  0420                     u1001:
  3437  0420  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0421  1303               	bcf	3,6	;RP1=0, select bank0
  3439  0422  159F               	bsf	31,3	;volatile
  3440  0423  2C27               	goto	u1014
  3441  0424                     u1000:
  3442  0424  1283               	bcf	3,5	;RP0=0, select bank0
  3443  0425  1303               	bcf	3,6	;RP1=0, select bank0
  3444  0426  119F               	bcf	31,3	;volatile
  3445  0427                     u1014:
  3446  0427                     l1786:
  3447                           
  3448                           ;BTL_HIHI_main.c: 336:     CHS1 = (ADC_channel & 2) >> 1;
  3449  0427  082D               	movf	ADC_Read@ADC_channel,w
  3450  0428  00AA               	movwf	??_ADC_Read
  3451  0429  3001               	movlw	1
  3452  042A                     u1025:
  3453  042A  1003               	clrc
  3454  042B  0CAA               	rrf	??_ADC_Read,f
  3455  042C  3EFF               	addlw	-1
  3456  042D  1D03               	skipz
  3457  042E  2C2A               	goto	u1025
  3458  042F  182A               	btfsc	??_ADC_Read,0
  3459  0430  2C32               	goto	u1031
  3460  0431  2C36               	goto	u1030
  3461  0432                     u1031:
  3462  0432  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0433  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0434  161F               	bsf	31,4	;volatile
  3465  0435  2C39               	goto	u1044
  3466  0436                     u1030:
  3467  0436  1283               	bcf	3,5	;RP0=0, select bank0
  3468  0437  1303               	bcf	3,6	;RP1=0, select bank0
  3469  0438  121F               	bcf	31,4	;volatile
  3470  0439                     u1044:
  3471                           
  3472                           ;BTL_HIHI_main.c: 337:     CHS2 = (ADC_channel & 4) >> 2;
  3473  0439  082D               	movf	ADC_Read@ADC_channel,w
  3474  043A  00AA               	movwf	??_ADC_Read
  3475  043B  3002               	movlw	2
  3476  043C                     u1055:
  3477  043C  1003               	clrc
  3478  043D  0CAA               	rrf	??_ADC_Read,f
  3479  043E  3EFF               	addlw	-1
  3480  043F  1D03               	skipz
  3481  0440  2C3C               	goto	u1055
  3482  0441  182A               	btfsc	??_ADC_Read,0
  3483  0442  2C44               	goto	u1061
  3484  0443  2C48               	goto	u1060
  3485  0444                     u1061:
  3486  0444  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0445  1303               	bcf	3,6	;RP1=0, select bank0
  3488  0446  169F               	bsf	31,5	;volatile
  3489  0447  2C4B               	goto	u1074
  3490  0448                     u1060:
  3491  0448  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0449  1303               	bcf	3,6	;RP1=0, select bank0
  3493  044A  129F               	bcf	31,5	;volatile
  3494  044B                     u1074:
  3495  044B                     l1788:
  3496                           
  3497                           ;BTL_HIHI_main.c: 340:     _delay((unsigned long)((25)*(20000000/4000000.0)));
  3498  044B  3028               	movlw	40
  3499  044C  1283               	bcf	3,5	;RP0=0, select bank0
  3500  044D  1303               	bcf	3,6	;RP1=0, select bank0
  3501  044E  00AA               	movwf	??_ADC_Read
  3502  044F                     u1567:
  3503  044F  0BAA               	decfsz	??_ADC_Read,f
  3504  0450  2C4F               	goto	u1567
  3505  0451  2C52               	nop2
  3506  0452                     l1790:
  3507                           
  3508                           ;BTL_HIHI_main.c: 343:     GO_DONE = 1;
  3509  0452  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0453  1303               	bcf	3,6	;RP1=0, select bank0
  3511  0454  151F               	bsf	31,2	;volatile
  3512  0455                     l354:	
  3513                           ;BTL_HIHI_main.c: 347:         ;
  3514                           
  3515                           
  3516                           ;BTL_HIHI_main.c: 346:     while (GO_DONE)
  3517  0455  191F               	btfsc	31,2	;volatile
  3518  0456  2C58               	goto	u1081
  3519  0457  2C59               	goto	u1080
  3520  0458                     u1081:
  3521  0458  2C55               	goto	l354
  3522  0459                     u1080:
  3523  0459                     l1792:
  3524                           
  3525                           ;BTL_HIHI_main.c: 350:     uint16_t result = ((ADRESH << 8) + ADRESL);
  3526  0459  081E               	movf	30,w	;volatile
  3527  045A  00AC               	movwf	ADC_Read@result+1
  3528  045B  1683               	bsf	3,5	;RP0=1, select bank1
  3529  045C  1303               	bcf	3,6	;RP1=0, select bank1
  3530  045D  081E               	movf	30,w	;volatile
  3531  045E  1283               	bcf	3,5	;RP0=0, select bank0
  3532  045F  1303               	bcf	3,6	;RP1=0, select bank0
  3533  0460  00AB               	movwf	ADC_Read@result
  3534                           
  3535                           ;BTL_HIHI_main.c: 351:     return result;
  3536  0461  082C               	movf	ADC_Read@result+1,w
  3537  0462  00A9               	movwf	?_ADC_Read+1
  3538  0463  082B               	movf	ADC_Read@result,w
  3539  0464  00A8               	movwf	?_ADC_Read
  3540  0465                     l353:
  3541  0465  0008               	return
  3542  0466                     __end_of_ADC_Read:
  3543                           
  3544                           	psect	text24
  3545  069D                     __ptext24:	
  3546 ;; *************** function _ADC_Init *****************
  3547 ;; Defined at:
  3548 ;;		line 306 in file "BTL_HIHI_main.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;		None
  3551 ;; Auto vars:     Size  Location     Type
  3552 ;;		None
  3553 ;; Return value:  Size  Location     Type
  3554 ;;                  1    wreg      void 
  3555 ;; Registers used:
  3556 ;;		None
  3557 ;; Tracked objects:
  3558 ;;		On entry : 0/0
  3559 ;;		On exit  : 0/0
  3560 ;;		Unchanged: 0/0
  3561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3562 ;;      Params:         0       0       0       0       0
  3563 ;;      Locals:         0       0       0       0       0
  3564 ;;      Temps:          0       0       0       0       0
  3565 ;;      Totals:         0       0       0       0       0
  3566 ;;Total ram usage:        0 bytes
  3567 ;; Hardware stack levels used:    1
  3568 ;; Hardware stack levels required when called:    3
  3569 ;; This function calls:
  3570 ;;		Nothing
  3571 ;; This function is called by:
  3572 ;;		_main
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           
  3577                           ;psect for function _ADC_Init
  3578  069D                     _ADC_Init:
  3579  069D                     l1732:	
  3580                           ;incstack = 0
  3581                           ; Regs used in _ADC_Init: []
  3582                           
  3583                           
  3584                           ;BTL_HIHI_main.c: 311:     ADCS0 = 1;
  3585  069D  1283               	bcf	3,5	;RP0=0, select bank0
  3586  069E  1303               	bcf	3,6	;RP1=0, select bank0
  3587  069F  171F               	bsf	31,6	;volatile
  3588                           
  3589                           ;BTL_HIHI_main.c: 312:     ADCS1 = 0;
  3590  06A0  139F               	bcf	31,7	;volatile
  3591                           
  3592                           ;BTL_HIHI_main.c: 314:     ADON = 1;
  3593  06A1  141F               	bsf	31,0	;volatile
  3594                           
  3595                           ;BTL_HIHI_main.c: 318:     ADFM = 1;
  3596  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  3597  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  3598  06A4  179F               	bsf	31,7	;volatile
  3599                           
  3600                           ;BTL_HIHI_main.c: 320:     ADCS2 = 1;
  3601  06A5  171F               	bsf	31,6	;volatile
  3602                           
  3603                           ;BTL_HIHI_main.c: 322:     PCFG0 = 0;
  3604  06A6  101F               	bcf	31,0	;volatile
  3605                           
  3606                           ;BTL_HIHI_main.c: 323:     PCFG1 = 0;
  3607  06A7  109F               	bcf	31,1	;volatile
  3608                           
  3609                           ;BTL_HIHI_main.c: 324:     PCFG2 = 0;
  3610  06A8  111F               	bcf	31,2	;volatile
  3611                           
  3612                           ;BTL_HIHI_main.c: 325:     PCFG3 = 0;
  3613  06A9  119F               	bcf	31,3	;volatile
  3614  06AA                     l349:
  3615  06AA  0008               	return
  3616  06AB                     __end_of_ADC_Init:
  3617                           
  3618                           	psect	text25
  3619  0147                     __ptext25:	
  3620 ;; *************** function _IRS *****************
  3621 ;; Defined at:
  3622 ;;		line 161 in file "BTL_HIHI_main.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3636 ;;      Params:         0       0       0       0       0
  3637 ;;      Locals:         0       0       0       0       0
  3638 ;;      Temps:          0       8       0       0       0
  3639 ;;      Totals:         0       8       0       0       0
  3640 ;;Total ram usage:        8 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:    2
  3643 ;; This function calls:
  3644 ;;		_EEPROM_Write
  3645 ;;		_UART_send_string
  3646 ;;		i1_ADC_Read
  3647 ;;		i1_setPWM_DutyCycle
  3648 ;; This function is called by:
  3649 ;;		Interrupt level 1
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           
  3654                           ;psect for function _IRS
  3655  0147                     _IRS:
  3656  0147                     i1l1960:
  3657                           
  3658                           ;BTL_HIHI_main.c: 164:     if (T0IF == 1)
  3659  0147  1D0B               	btfss	11,2	;volatile
  3660  0148  294A               	goto	u131_21
  3661  0149  294B               	goto	u131_20
  3662  014A                     u131_21:
  3663  014A  2981               	goto	i1l1986
  3664  014B                     u131_20:
  3665  014B                     i1l1962:
  3666                           
  3667                           ;BTL_HIHI_main.c: 165:     {;BTL_HIHI_main.c: 166:         TMR0 = 6;
  3668  014B  3006               	movlw	6
  3669  014C  0081               	movwf	1	;volatile
  3670  014D                     i1l1964:
  3671                           
  3672                           ;BTL_HIHI_main.c: 167:         cnt_pos++;
  3673  014D  3001               	movlw	1
  3674  014E  00A0               	movwf	??_IRS
  3675  014F  0820               	movf	??_IRS,w
  3676  0150  07FB               	addwf	_cnt_pos,f
  3677  0151                     i1l1966:
  3678                           
  3679                           ;BTL_HIHI_main.c: 168:         if (cnt_pos == pos)
  3680  0151  087B               	movf	_cnt_pos,w
  3681  0152  067D               	xorwf	_pos,w
  3682  0153  1D03               	skipz
  3683  0154  2956               	goto	u132_21
  3684  0155  2957               	goto	u132_20
  3685  0156                     u132_21:
  3686  0156  2961               	goto	i1l1974
  3687  0157                     u132_20:
  3688  0157                     i1l1968:
  3689                           
  3690                           ;BTL_HIHI_main.c: 169:         {;BTL_HIHI_main.c: 170:             if (SelectServo == 0)
  3691  0157  087C               	movf	_SelectServo,w
  3692  0158  1D03               	btfss	3,2
  3693  0159  295B               	goto	u133_21
  3694  015A  295C               	goto	u133_20
  3695  015B                     u133_21:
  3696  015B  295F               	goto	i1l1972
  3697  015C                     u133_20:
  3698  015C                     i1l1970:
  3699                           
  3700                           ;BTL_HIHI_main.c: 171:             {;BTL_HIHI_main.c: 172:                 RB6 = ~RB6;
  3701  015C  3040               	movlw	64
  3702  015D  0686               	xorwf	6,f
  3703                           
  3704                           ;BTL_HIHI_main.c: 173:             }
  3705  015E  2961               	goto	i1l1974
  3706  015F                     i1l1972:
  3707                           
  3708                           ;BTL_HIHI_main.c: 175:             {;BTL_HIHI_main.c: 176:                 RB5 = ~RB5;
  3709  015F  3020               	movlw	32
  3710  0160  0686               	xorwf	6,f
  3711  0161                     i1l1974:
  3712                           
  3713                           ;BTL_HIHI_main.c: 180:         if (cnt_pos == 200 - pos)
  3714  0161  3000               	movlw	0
  3715  0162  00A1               	movwf	??_IRS+1
  3716  0163  087D               	movf	_pos,w
  3717  0164  3CC8               	sublw	200
  3718  0165  00A0               	movwf	??_IRS
  3719  0166  1C03               	skipc
  3720  0167  03A1               	decf	??_IRS+1,f
  3721  0168  087B               	movf	_cnt_pos,w
  3722  0169  00A2               	movwf	??_IRS+2
  3723  016A  01A3               	clrf	??_IRS+3
  3724  016B  0821               	movf	??_IRS+1,w
  3725  016C  0623               	xorwf	??_IRS+3,w
  3726  016D  1D03               	skipz
  3727  016E  2971               	goto	u134_25
  3728  016F  0820               	movf	??_IRS,w
  3729  0170  0622               	xorwf	??_IRS+2,w
  3730  0171                     u134_25:
  3731  0171  1D03               	skipz
  3732  0172  2974               	goto	u134_21
  3733  0173  2975               	goto	u134_20
  3734  0174                     u134_21:
  3735  0174  2980               	goto	i1l1984
  3736  0175                     u134_20:
  3737  0175                     i1l1976:
  3738                           
  3739                           ;BTL_HIHI_main.c: 181:         {;BTL_HIHI_main.c: 182:             if (SelectServo == 0)
  3740  0175  087C               	movf	_SelectServo,w
  3741  0176  1D03               	btfss	3,2
  3742  0177  2979               	goto	u135_21
  3743  0178  297A               	goto	u135_20
  3744  0179                     u135_21:
  3745  0179  297D               	goto	i1l1980
  3746  017A                     u135_20:
  3747  017A                     i1l1978:
  3748                           
  3749                           ;BTL_HIHI_main.c: 183:             {;BTL_HIHI_main.c: 184:                 RB6 = ~RB6;
  3750  017A  3040               	movlw	64
  3751  017B  0686               	xorwf	6,f
  3752                           
  3753                           ;BTL_HIHI_main.c: 185:             }
  3754  017C  297F               	goto	i1l1982
  3755  017D                     i1l1980:
  3756                           
  3757                           ;BTL_HIHI_main.c: 187:             {;BTL_HIHI_main.c: 188:                 RB5 = ~RB5;
  3758  017D  3020               	movlw	32
  3759  017E  0686               	xorwf	6,f
  3760  017F                     i1l1982:
  3761                           
  3762                           ;BTL_HIHI_main.c: 190:             cnt_pos = 0;
  3763  017F  01FB               	clrf	_cnt_pos
  3764  0180                     i1l1984:
  3765                           
  3766                           ;BTL_HIHI_main.c: 192:       T0IF = 0;
  3767  0180  110B               	bcf	11,2	;volatile
  3768  0181                     i1l1986:
  3769                           
  3770                           ;BTL_HIHI_main.c: 196:     if (INTF == 1)
  3771  0181  1C8B               	btfss	11,1	;volatile
  3772  0182  2984               	goto	u136_21
  3773  0183  2985               	goto	u136_20
  3774  0184                     u136_21:
  3775  0184  29A1               	goto	i1l2002
  3776  0185                     u136_20:
  3777  0185                     i1l1988:
  3778                           
  3779                           ;BTL_HIHI_main.c: 197:     {;BTL_HIHI_main.c: 198:         if (flag_tmp ==0){
  3780  0185  0843               	movf	_flag_tmp,w
  3781  0186  1D03               	btfss	3,2
  3782  0187  2989               	goto	u137_21
  3783  0188  298A               	goto	u137_20
  3784  0189                     u137_21:
  3785  0189  29A1               	goto	i1l2002
  3786  018A                     u137_20:
  3787  018A                     i1l1990:
  3788                           
  3789                           ;BTL_HIHI_main.c: 199:         OpenServo = 0;
  3790  018A  01C9               	clrf	_OpenServo
  3791  018B                     i1l1992:
  3792                           
  3793                           ;BTL_HIHI_main.c: 200:         setPWM_DutyCycle(0);
  3794  018B  3000               	movlw	0
  3795  018C  00F6               	movwf	i1setPWM_DutyCycle@DC
  3796  018D  00F7               	movwf	i1setPWM_DutyCycle@DC+1
  3797  018E  120A  118A  2656  120A  118A  	fcall	i1_setPWM_DutyCycle
  3798  0193                     i1l1994:
  3799                           
  3800                           ;BTL_HIHI_main.c: 201:         flag_dc = 0;
  3801  0193  1283               	bcf	3,5	;RP0=0, select bank0
  3802  0194  1303               	bcf	3,6	;RP1=0, select bank0
  3803  0195  01C7               	clrf	_flag_dc
  3804  0196                     i1l1996:
  3805                           
  3806                           ;BTL_HIHI_main.c: 202:         UART_send_string("check\n");
  3807  0196  3033               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3808  0197  120A  118A  25C9  120A  118A  	fcall	_UART_send_string
  3809  019C                     i1l1998:
  3810                           
  3811                           ;BTL_HIHI_main.c: 203:         flag_tmp =1;
  3812  019C  1283               	bcf	3,5	;RP0=0, select bank0
  3813  019D  1303               	bcf	3,6	;RP1=0, select bank0
  3814  019E  01C3               	clrf	_flag_tmp
  3815  019F  0AC3               	incf	_flag_tmp,f
  3816  01A0                     i1l2000:
  3817                           
  3818                           ;BTL_HIHI_main.c: 204:         INTF = 0;}
  3819  01A0  108B               	bcf	11,1	;volatile
  3820  01A1                     i1l2002:
  3821                           
  3822                           ;BTL_HIHI_main.c: 209:     if (RCIF == 1)
  3823  01A1  1E8C               	btfss	12,5	;volatile
  3824  01A2  29A4               	goto	u138_21
  3825  01A3  29A5               	goto	u138_20
  3826  01A4                     u138_21:
  3827  01A4  2A2C               	goto	i1l334
  3828  01A5                     u138_20:
  3829  01A5                     i1l2004:
  3830                           
  3831                           ;BTL_HIHI_main.c: 210:     {;BTL_HIHI_main.c: 211:         result = RCREG;
  3832  01A5  081A               	movf	26,w	;volatile
  3833  01A6  00A0               	movwf	??_IRS
  3834  01A7  0820               	movf	??_IRS,w
  3835  01A8  00FA               	movwf	_result
  3836  01A9                     i1l2006:
  3837                           
  3838                           ;BTL_HIHI_main.c: 212:            if (result == 'a')
  3839  01A9  3061               	movlw	97
  3840  01AA  067A               	xorwf	_result,w
  3841  01AB  1D03               	btfss	3,2
  3842  01AC  29AE               	goto	u139_21
  3843  01AD  29AF               	goto	u139_20
  3844  01AE                     u139_21:
  3845  01AE  29C9               	goto	i1l2020
  3846  01AF                     u139_20:
  3847  01AF                     i1l2008:
  3848                           
  3849                           ;BTL_HIHI_main.c: 213:         {;BTL_HIHI_main.c: 214:                 if (count_sp1 == 
      +                          255)
  3850  01AF  0A41               	incf	_count_sp1,w
  3851  01B0  1D03               	btfss	3,2
  3852  01B1  29B3               	goto	u140_21
  3853  01B2  29B4               	goto	u140_20
  3854  01B3                     u140_21:
  3855  01B3  29B5               	goto	i1l2012
  3856  01B4                     u140_20:
  3857  01B4                     i1l2010:
  3858                           
  3859                           ;BTL_HIHI_main.c: 215:         {;BTL_HIHI_main.c: 216:             count_sp1 = 0;
  3860  01B4  01C1               	clrf	_count_sp1
  3861  01B5                     i1l2012:
  3862                           
  3863                           ;BTL_HIHI_main.c: 218:             count_sp1++;
  3864  01B5  3001               	movlw	1
  3865  01B6  00A0               	movwf	??_IRS
  3866  01B7  0820               	movf	??_IRS,w
  3867  01B8  07C1               	addwf	_count_sp1,f
  3868  01B9                     i1l2014:
  3869                           
  3870                           ;BTL_HIHI_main.c: 219:                        EEPROM_Write(0x00, count_sp1);
  3871  01B9  0841               	movf	_count_sp1,w
  3872  01BA  00A0               	movwf	??_IRS
  3873  01BB  0820               	movf	??_IRS,w
  3874  01BC  00F0               	movwf	EEPROM_Write@Data
  3875  01BD  3000               	movlw	0
  3876  01BE  120A  118A  2621  120A  118A  	fcall	_EEPROM_Write
  3877  01C3                     i1l2016:
  3878                           
  3879                           ;BTL_HIHI_main.c: 221:             SelectServo = 0;
  3880  01C3  01FC               	clrf	_SelectServo
  3881  01C4                     i1l2018:
  3882                           
  3883                           ;BTL_HIHI_main.c: 222:             OpenServo = 1;
  3884  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  3885  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  3886  01C6  01C9               	clrf	_OpenServo
  3887  01C7  0AC9               	incf	_OpenServo,f
  3888                           
  3889                           ;BTL_HIHI_main.c: 224:         }
  3890  01C8  2A12               	goto	i1l2048
  3891  01C9                     i1l2020:
  3892  01C9  3062               	movlw	98
  3893  01CA  067A               	xorwf	_result,w
  3894  01CB  1D03               	btfss	3,2
  3895  01CC  29CE               	goto	u141_21
  3896  01CD  29CF               	goto	u141_20
  3897  01CE                     u141_21:
  3898  01CE  29E6               	goto	i1l2034
  3899  01CF                     u141_20:
  3900  01CF                     i1l2022:
  3901                           
  3902                           ;BTL_HIHI_main.c: 226:         {;BTL_HIHI_main.c: 227:              if (count_sp2 == 255
      +                          )
  3903  01CF  0A40               	incf	_count_sp2,w
  3904  01D0  1D03               	btfss	3,2
  3905  01D1  29D3               	goto	u142_21
  3906  01D2  29D4               	goto	u142_20
  3907  01D3                     u142_21:
  3908  01D3  29D5               	goto	i1l2026
  3909  01D4                     u142_20:
  3910  01D4                     i1l2024:
  3911                           
  3912                           ;BTL_HIHI_main.c: 228:         {;BTL_HIHI_main.c: 229:             count_sp2 = 0;
  3913  01D4  01C0               	clrf	_count_sp2
  3914  01D5                     i1l2026:
  3915                           
  3916                           ;BTL_HIHI_main.c: 231:             count_sp2++;
  3917  01D5  3001               	movlw	1
  3918  01D6  00A0               	movwf	??_IRS
  3919  01D7  0820               	movf	??_IRS,w
  3920  01D8  07C0               	addwf	_count_sp2,f
  3921  01D9                     i1l2028:
  3922                           
  3923                           ;BTL_HIHI_main.c: 232:             EEPROM_Write(0x01, count_sp2);
  3924  01D9  0840               	movf	_count_sp2,w
  3925  01DA  00A0               	movwf	??_IRS
  3926  01DB  0820               	movf	??_IRS,w
  3927  01DC  00F0               	movwf	EEPROM_Write@Data
  3928  01DD  3001               	movlw	1
  3929  01DE  120A  118A  2621  120A  118A  	fcall	_EEPROM_Write
  3930  01E3                     i1l2030:
  3931                           
  3932                           ;BTL_HIHI_main.c: 233:             SelectServo = 1;
  3933  01E3  01FC               	clrf	_SelectServo
  3934  01E4  0AFC               	incf	_SelectServo,f
  3935  01E5  29C4               	goto	i1l2018
  3936  01E6                     i1l2034:
  3937  01E6  3063               	movlw	99
  3938  01E7  067A               	xorwf	_result,w
  3939  01E8  1D03               	btfss	3,2
  3940  01E9  29EB               	goto	u143_21
  3941  01EA  29EC               	goto	u143_20
  3942  01EB                     u143_21:
  3943  01EB  2A12               	goto	i1l2048
  3944  01EC                     u143_20:
  3945  01EC                     i1l2036:
  3946                           
  3947                           ;BTL_HIHI_main.c: 238:         {;BTL_HIHI_main.c: 239:             if (count_sp3 == 255)
  3948  01EC  0A3F               	incf	_count_sp3,w
  3949  01ED  1D03               	btfss	3,2
  3950  01EE  29F0               	goto	u144_21
  3951  01EF  29F1               	goto	u144_20
  3952  01F0                     u144_21:
  3953  01F0  29F2               	goto	i1l2040
  3954  01F1                     u144_20:
  3955  01F1                     i1l2038:
  3956                           
  3957                           ;BTL_HIHI_main.c: 240:         {;BTL_HIHI_main.c: 241:             count_sp3 = 0;
  3958  01F1  01BF               	clrf	_count_sp3
  3959  01F2                     i1l2040:
  3960                           
  3961                           ;BTL_HIHI_main.c: 243:             count_sp3++;
  3962  01F2  3001               	movlw	1
  3963  01F3  00A0               	movwf	??_IRS
  3964  01F4  0820               	movf	??_IRS,w
  3965  01F5  07BF               	addwf	_count_sp3,f
  3966  01F6                     i1l2042:
  3967                           
  3968                           ;BTL_HIHI_main.c: 244:             EEPROM_Write(0x02, count_sp3);
  3969  01F6  083F               	movf	_count_sp3,w
  3970  01F7  00A0               	movwf	??_IRS
  3971  01F8  0820               	movf	??_IRS,w
  3972  01F9  00F0               	movwf	EEPROM_Write@Data
  3973  01FA  3002               	movlw	2
  3974  01FB  120A  118A  2621  120A  118A  	fcall	_EEPROM_Write
  3975  0200                     i1l2044:
  3976                           
  3977                           ;BTL_HIHI_main.c: 245:             OpenServo = 0;
  3978  0200  1283               	bcf	3,5	;RP0=0, select bank0
  3979  0201  1303               	bcf	3,6	;RP1=0, select bank0
  3980  0202  01C9               	clrf	_OpenServo
  3981  0203                     i1l2046:
  3982                           
  3983                           ;BTL_HIHI_main.c: 247:         setPWM_DutyCycle(ADC_Read(0));
  3984  0203  3000               	movlw	0
  3985  0204  120A  118A  2466  120A  118A  	fcall	i1_ADC_Read
  3986  0209  0871               	movf	?i1_ADC_Read+1,w
  3987  020A  00F7               	movwf	i1setPWM_DutyCycle@DC+1
  3988  020B  0870               	movf	?i1_ADC_Read,w
  3989  020C  00F6               	movwf	i1setPWM_DutyCycle@DC
  3990  020D  120A  118A  2656  120A  118A  	fcall	i1_setPWM_DutyCycle
  3991  0212                     i1l2048:
  3992                           
  3993                           ;BTL_HIHI_main.c: 249:         flag_dc = 1;
  3994  0212  1283               	bcf	3,5	;RP0=0, select bank0
  3995  0213  1303               	bcf	3,6	;RP1=0, select bank0
  3996  0214  01C7               	clrf	_flag_dc
  3997  0215  0AC7               	incf	_flag_dc,f
  3998  0216                     i1l2050:
  3999                           
  4000                           ;BTL_HIHI_main.c: 250:         flag_tmp =0;
  4001  0216  01C3               	clrf	_flag_tmp
  4002  0217                     i1l2052:
  4003                           
  4004                           ;BTL_HIHI_main.c: 251:         setPWM_DutyCycle(ADC_Read(0));
  4005  0217  3000               	movlw	0
  4006  0218  120A  118A  2466  120A  118A  	fcall	i1_ADC_Read
  4007  021D  0871               	movf	?i1_ADC_Read+1,w
  4008  021E  00F7               	movwf	i1setPWM_DutyCycle@DC+1
  4009  021F  0870               	movf	?i1_ADC_Read,w
  4010  0220  00F6               	movwf	i1setPWM_DutyCycle@DC
  4011  0221  120A  118A  2656  120A  118A  	fcall	i1_setPWM_DutyCycle
  4012  0226                     i1l2054:
  4013                           
  4014                           ;BTL_HIHI_main.c: 252:         LCD_SWAP = 1;
  4015  0226  1283               	bcf	3,5	;RP0=0, select bank0
  4016  0227  1303               	bcf	3,6	;RP1=0, select bank0
  4017  0228  01C8               	clrf	_LCD_SWAP
  4018  0229  0AC8               	incf	_LCD_SWAP,f
  4019  022A                     i1l2056:
  4020                           
  4021                           ;BTL_HIHI_main.c: 253:         result = '\0';
  4022  022A  01FA               	clrf	_result
  4023  022B                     i1l2058:
  4024                           
  4025                           ;BTL_HIHI_main.c: 255:         RCIF = 0;
  4026  022B  128C               	bcf	12,5	;volatile
  4027  022C                     i1l334:
  4028  022C  0827               	movf	??_IRS+7,w
  4029  022D  00FF               	movwf	btemp+1
  4030  022E  0826               	movf	??_IRS+6,w
  4031  022F  008A               	movwf	10
  4032  0230  0825               	movf	??_IRS+5,w
  4033  0231  0084               	movwf	4
  4034  0232  0E24               	swapf	??_IRS+4,w
  4035  0233  0083               	movwf	3
  4036  0234  0EFE               	swapf	btemp,f
  4037  0235  0E7E               	swapf	btemp,w
  4038  0236  0009               	retfie
  4039  0237                     __end_of_IRS:
  4040                           
  4041                           	psect	intentry
  4042  0004                     __pintentry:	
  4043                           ;incstack = 0
  4044 ;; hardware stack exceeded
  4045                           ; Regs used in _IRS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4046                           
  4047  0004                     interrupt_function:
  4048  007E                     saved_w	set	btemp
  4049  0004  00FE               	movwf	btemp
  4050  0005  0E03               	swapf	3,w
  4051  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4052  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4053  0008  00A4               	movwf	??_IRS+4
  4054  0009  0804               	movf	4,w
  4055  000A  00A5               	movwf	??_IRS+5
  4056  000B  080A               	movf	10,w
  4057  000C  00A6               	movwf	??_IRS+6
  4058  000D  087F               	movf	btemp+1,w
  4059  000E  00A7               	movwf	??_IRS+7
  4060  000F  120A  118A  2947   	ljmp	_IRS
  4061                           
  4062                           	psect	text26
  4063  0656                     __ptext26:	
  4064 ;; *************** function i1_setPWM_DutyCycle *****************
  4065 ;; Defined at:
  4066 ;;		line 386 in file "BTL_HIHI_main.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  DC              2    6[COMMON] unsigned int 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      void 
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4080 ;;      Params:         2       0       0       0       0
  4081 ;;      Locals:         0       0       0       0       0
  4082 ;;      Temps:          2       0       0       0       0
  4083 ;;      Totals:         4       0       0       0       0
  4084 ;;Total ram usage:        4 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; This function calls:
  4087 ;;		Nothing
  4088 ;; This function is called by:
  4089 ;;		_IRS
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           
  4094                           ;psect for function i1_setPWM_DutyCycle
  4095  0656                     i1_setPWM_DutyCycle:
  4096  0656                     i1l1870:	
  4097                           ;incstack = 0
  4098 ;; hardware stack exceeded
  4099                           ; Regs used in i1_setPWM_DutyCycle: [wreg+status,2+status,0]
  4100                           
  4101                           
  4102                           ;BTL_HIHI_main.c: 386: void setPWM_DutyCycle(uint16_t DC);BTL_HIHI_main.c: 387: {;BTL_HI
      +                          HI_main.c: 391:     CCP1Y = DC & (1 << 0);
  4103  0656  1876               	btfsc	i1setPWM_DutyCycle@DC,0
  4104  0657  2E59               	goto	u125_21
  4105  0658  2E5D               	goto	u125_20
  4106  0659                     u125_21:
  4107  0659  1283               	bcf	3,5	;RP0=0, select bank0
  4108  065A  1303               	bcf	3,6	;RP1=0, select bank0
  4109  065B  1617               	bsf	23,4	;volatile
  4110  065C  2E60               	goto	u126_24
  4111  065D                     u125_20:
  4112  065D  1283               	bcf	3,5	;RP0=0, select bank0
  4113  065E  1303               	bcf	3,6	;RP1=0, select bank0
  4114  065F  1217               	bcf	23,4	;volatile
  4115  0660                     u126_24:
  4116                           
  4117                           ;BTL_HIHI_main.c: 392:     CCP1X = DC & (1 << 1);
  4118  0660  1297               	bcf	23,5	;volatile
  4119  0661                     i1l1872:
  4120                           
  4121                           ;BTL_HIHI_main.c: 394:     CCPR1L = DC >> 2;
  4122  0661  0877               	movf	i1setPWM_DutyCycle@DC+1,w
  4123  0662  00F9               	movwf	??i1_setPWM_DutyCycle+1
  4124  0663  0876               	movf	i1setPWM_DutyCycle@DC,w
  4125  0664  00F8               	movwf	??i1_setPWM_DutyCycle
  4126  0665  1003               	clrc
  4127  0666  0CF9               	rrf	??i1_setPWM_DutyCycle+1,f
  4128  0667  0CF8               	rrf	??i1_setPWM_DutyCycle,f
  4129  0668  1003               	clrc
  4130  0669  0CF9               	rrf	??i1_setPWM_DutyCycle+1,f
  4131  066A  0CF8               	rrf	??i1_setPWM_DutyCycle,f
  4132  066B  0878               	movf	??i1_setPWM_DutyCycle,w
  4133  066C  0095               	movwf	21	;volatile
  4134  066D                     i1l367:
  4135  066D  0008               	return
  4136  066E                     __end_ofi1_setPWM_DutyCycle:
  4137                           
  4138                           	psect	text27
  4139  0466                     __ptext27:	
  4140 ;; *************** function i1_ADC_Read *****************
  4141 ;; Defined at:
  4142 ;;		line 328 in file "BTL_HIHI_main.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;  ADC_channel     1    wreg     unsigned char 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  ADC_channel     1    5[COMMON] unsigned char 
  4147 ;;  result          2    3[COMMON] unsigned int 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  2    0[COMMON] unsigned int 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4157 ;;      Params:         2       0       0       0       0
  4158 ;;      Locals:         3       0       0       0       0
  4159 ;;      Temps:          1       0       0       0       0
  4160 ;;      Totals:         6       0       0       0       0
  4161 ;;Total ram usage:        6 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; This function calls:
  4164 ;;		Nothing
  4165 ;; This function is called by:
  4166 ;;		_IRS
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           
  4171                           ;psect for function i1_ADC_Read
  4172  0466                     i1_ADC_Read:
  4173                           
  4174                           ;incstack = 0
  4175 ;; hardware stack exceeded
  4176                           ; Regs used in i1_ADC_Read: [wreg+status,2+status,0]
  4177                           ;i1ADC_Read@ADC_channel stored from wreg
  4178  0466  00F5               	movwf	i1ADC_Read@ADC_channel
  4179  0467                     i1l1854:
  4180                           
  4181                           ;BTL_HIHI_main.c: 328: uint16_t ADC_Read(uint8_t ADC_channel);BTL_HIHI_main.c: 329: {;BT
      +                          L_HIHI_main.c: 331:     if (ADC_channel < 0 || ADC_channel > 7)
  4182  0467  3008               	movlw	8
  4183  0468  0275               	subwf	i1ADC_Read@ADC_channel,w
  4184  0469  1C03               	skipc
  4185  046A  2C6C               	goto	u115_21
  4186  046B  2C6D               	goto	u115_20
  4187  046C                     u115_21:
  4188  046C  2C70               	goto	i1l352
  4189  046D                     u115_20:
  4190  046D                     i1l1856:
  4191                           
  4192                           ;BTL_HIHI_main.c: 332:         return 0;
  4193  046D  01F0               	clrf	?i1_ADC_Read
  4194  046E  01F1               	clrf	?i1_ADC_Read+1
  4195  046F  2CB4               	goto	i1l353
  4196  0470                     i1l352:
  4197                           
  4198                           ;BTL_HIHI_main.c: 335:     CHS0 = (ADC_channel & 1) >> 0;
  4199  0470  1875               	btfsc	i1ADC_Read@ADC_channel,0
  4200  0471  2C73               	goto	u116_21
  4201  0472  2C77               	goto	u116_20
  4202  0473                     u116_21:
  4203  0473  1283               	bcf	3,5	;RP0=0, select bank0
  4204  0474  1303               	bcf	3,6	;RP1=0, select bank0
  4205  0475  159F               	bsf	31,3	;volatile
  4206  0476  2C7A               	goto	u117_24
  4207  0477                     u116_20:
  4208  0477  1283               	bcf	3,5	;RP0=0, select bank0
  4209  0478  1303               	bcf	3,6	;RP1=0, select bank0
  4210  0479  119F               	bcf	31,3	;volatile
  4211  047A                     u117_24:
  4212  047A                     i1l1860:
  4213                           
  4214                           ;BTL_HIHI_main.c: 336:     CHS1 = (ADC_channel & 2) >> 1;
  4215  047A  0875               	movf	i1ADC_Read@ADC_channel,w
  4216  047B  00F2               	movwf	??i1_ADC_Read
  4217  047C  3001               	movlw	1
  4218  047D                     u118_25:
  4219  047D  1003               	clrc
  4220  047E  0CF2               	rrf	??i1_ADC_Read,f
  4221  047F  3EFF               	addlw	-1
  4222  0480  1D03               	skipz
  4223  0481  2C7D               	goto	u118_25
  4224  0482  1872               	btfsc	??i1_ADC_Read,0
  4225  0483  2C85               	goto	u119_21
  4226  0484  2C89               	goto	u119_20
  4227  0485                     u119_21:
  4228  0485  1283               	bcf	3,5	;RP0=0, select bank0
  4229  0486  1303               	bcf	3,6	;RP1=0, select bank0
  4230  0487  161F               	bsf	31,4	;volatile
  4231  0488  2C8C               	goto	u120_24
  4232  0489                     u119_20:
  4233  0489  1283               	bcf	3,5	;RP0=0, select bank0
  4234  048A  1303               	bcf	3,6	;RP1=0, select bank0
  4235  048B  121F               	bcf	31,4	;volatile
  4236  048C                     u120_24:
  4237                           
  4238                           ;BTL_HIHI_main.c: 337:     CHS2 = (ADC_channel & 4) >> 2;
  4239  048C  0875               	movf	i1ADC_Read@ADC_channel,w
  4240  048D  00F2               	movwf	??i1_ADC_Read
  4241  048E  3002               	movlw	2
  4242  048F                     u121_25:
  4243  048F  1003               	clrc
  4244  0490  0CF2               	rrf	??i1_ADC_Read,f
  4245  0491  3EFF               	addlw	-1
  4246  0492  1D03               	skipz
  4247  0493  2C8F               	goto	u121_25
  4248  0494  1872               	btfsc	??i1_ADC_Read,0
  4249  0495  2C97               	goto	u122_21
  4250  0496  2C9B               	goto	u122_20
  4251  0497                     u122_21:
  4252  0497  1283               	bcf	3,5	;RP0=0, select bank0
  4253  0498  1303               	bcf	3,6	;RP1=0, select bank0
  4254  0499  169F               	bsf	31,5	;volatile
  4255  049A  2C9E               	goto	u123_24
  4256  049B                     u122_20:
  4257  049B  1283               	bcf	3,5	;RP0=0, select bank0
  4258  049C  1303               	bcf	3,6	;RP1=0, select bank0
  4259  049D  129F               	bcf	31,5	;volatile
  4260  049E                     u123_24:
  4261  049E                     i1l1862:
  4262                           
  4263                           ;BTL_HIHI_main.c: 340:     _delay((unsigned long)((25)*(20000000/4000000.0)));
  4264  049E  3029               	movlw	41
  4265  049F  00F2               	movwf	??i1_ADC_Read
  4266  04A0                     u157_27:
  4267  04A0  0BF2               	decfsz	??i1_ADC_Read,f
  4268  04A1  2CA0               	goto	u157_27
  4269  04A2  0000               	nop
  4270  04A3                     i1l1864:
  4271                           
  4272                           ;BTL_HIHI_main.c: 343:     GO_DONE = 1;
  4273  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  4274  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  4275  04A5  151F               	bsf	31,2	;volatile
  4276  04A6                     i1l354:	
  4277                           ;BTL_HIHI_main.c: 347:         ;
  4278                           
  4279                           
  4280                           ;BTL_HIHI_main.c: 346:     while (GO_DONE)
  4281  04A6  191F               	btfsc	31,2	;volatile
  4282  04A7  2CA9               	goto	u124_21
  4283  04A8  2CAA               	goto	u124_20
  4284  04A9                     u124_21:
  4285  04A9  2CA6               	goto	i1l354
  4286  04AA                     u124_20:
  4287  04AA                     i1l1866:
  4288                           
  4289                           ;BTL_HIHI_main.c: 350:     uint16_t result = ((ADRESH << 8) + ADRESL);
  4290  04AA  081E               	movf	30,w	;volatile
  4291  04AB  00F4               	movwf	i1ADC_Read@result+1
  4292  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  4293  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  4294  04AE  081E               	movf	30,w	;volatile
  4295  04AF  00F3               	movwf	i1ADC_Read@result
  4296                           
  4297                           ;BTL_HIHI_main.c: 351:     return result;
  4298  04B0  0874               	movf	i1ADC_Read@result+1,w
  4299  04B1  00F1               	movwf	?i1_ADC_Read+1
  4300  04B2  0873               	movf	i1ADC_Read@result,w
  4301  04B3  00F0               	movwf	?i1_ADC_Read
  4302  04B4                     i1l353:
  4303  04B4  0008               	return
  4304  04B5                     __end_ofi1_ADC_Read:
  4305                           
  4306                           	psect	text28
  4307  05C9                     __ptext28:	
  4308 ;; *************** function _UART_send_string *****************
  4309 ;; Defined at:
  4310 ;;		line 413 in file "BTL_HIHI_main.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  st_pt           1    wreg     PTR unsigned char 
  4313 ;;		 -> STR_4(7), 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  st_pt           1    2[COMMON] PTR unsigned char 
  4316 ;;		 -> STR_4(7), 
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1    wreg      void 
  4319 ;; Registers used:
  4320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4326 ;;      Params:         0       0       0       0       0
  4327 ;;      Locals:         1       0       0       0       0
  4328 ;;      Temps:          1       0       0       0       0
  4329 ;;      Totals:         2       0       0       0       0
  4330 ;;Total ram usage:        2 bytes
  4331 ;; Hardware stack levels used:    1
  4332 ;; Hardware stack levels required when called:    1
  4333 ;; This function calls:
  4334 ;;		_UART_send_char
  4335 ;; This function is called by:
  4336 ;;		_IRS
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           
  4341                           ;psect for function _UART_send_string
  4342  05C9                     _UART_send_string:
  4343                           
  4344                           ;incstack = 0
  4345 ;; hardware stack exceeded
  4346                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4347                           ;UART_send_string@st_pt stored from wreg
  4348  05C9  00F2               	movwf	UART_send_string@st_pt
  4349  05CA                     i1l1828:
  4350                           
  4351                           ;BTL_HIHI_main.c: 413: void UART_send_string(char *st_pt);BTL_HIHI_main.c: 414: {;BTL_HI
      +                          HI_main.c: 415:     while (*st_pt)
  4352  05CA  2DDB               	goto	i1l1834
  4353  05CB                     i1l1830:
  4354                           
  4355                           ;BTL_HIHI_main.c: 416:         UART_send_char(*st_pt++);
  4356  05CB  0872               	movf	UART_send_string@st_pt,w
  4357  05CC  0084               	movwf	4
  4358  05CD  120A  118A  24B5  120A  118A  	fcall	stringdir
  4359  05D2  120A  118A  26C5  120A  118A  	fcall	_UART_send_char
  4360  05D7                     i1l1832:
  4361  05D7  3001               	movlw	1
  4362  05D8  00F1               	movwf	??_UART_send_string
  4363  05D9  0871               	movf	??_UART_send_string,w
  4364  05DA  07F2               	addwf	UART_send_string@st_pt,f
  4365  05DB                     i1l1834:
  4366                           
  4367                           ;BTL_HIHI_main.c: 415:     while (*st_pt)
  4368  05DB  0872               	movf	UART_send_string@st_pt,w
  4369  05DC  0084               	movwf	4
  4370  05DD  120A  118A  24B5  120A  118A  	fcall	stringdir
  4371  05E2  3A00               	xorlw	0
  4372  05E3  1D03               	skipz
  4373  05E4  2DE6               	goto	u113_21
  4374  05E5  2DE7               	goto	u113_20
  4375  05E6                     u113_21:
  4376  05E6  2DCB               	goto	i1l1830
  4377  05E7                     u113_20:
  4378  05E7                     i1l382:
  4379  05E7  0008               	return
  4380  05E8                     __end_of_UART_send_string:
  4381                           
  4382                           	psect	text29
  4383  06C5                     __ptext29:	
  4384 ;; *************** function _UART_send_char *****************
  4385 ;; Defined at:
  4386 ;;		line 406 in file "BTL_HIHI_main.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  bt              1    wreg     unsigned char 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  bt              1    0[COMMON] unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      void 
  4393 ;; Registers used:
  4394 ;;		wreg
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4400 ;;      Params:         0       0       0       0       0
  4401 ;;      Locals:         1       0       0       0       0
  4402 ;;      Temps:          0       0       0       0       0
  4403 ;;      Totals:         1       0       0       0       0
  4404 ;;Total ram usage:        1 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_UART_send_string
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           
  4414                           ;psect for function _UART_send_char
  4415  06C5                     _UART_send_char:
  4416                           
  4417                           ;incstack = 0
  4418 ;; hardware stack exceeded
  4419                           ; Regs used in _UART_send_char: [wreg]
  4420                           ;UART_send_char@bt stored from wreg
  4421  06C5  00F0               	movwf	UART_send_char@bt
  4422  06C6                     i1l1596:
  4423  06C6                     i1l373:	
  4424                           ;BTL_HIHI_main.c: 409:         ;
  4425                           
  4426                           
  4427                           ;BTL_HIHI_main.c: 408:     while (!TRMT)
  4428  06C6  1683               	bsf	3,5	;RP0=1, select bank1
  4429  06C7  1303               	bcf	3,6	;RP1=0, select bank1
  4430  06C8  1C98               	btfss	24,1	;volatile
  4431  06C9  2ECB               	goto	u78_21
  4432  06CA  2ECC               	goto	u78_20
  4433  06CB                     u78_21:
  4434  06CB  2EC6               	goto	i1l373
  4435  06CC                     u78_20:
  4436  06CC                     i1l1598:
  4437                           
  4438                           ;BTL_HIHI_main.c: 410:     TXREG = bt;
  4439  06CC  0870               	movf	UART_send_char@bt,w
  4440  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  4441  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  4442  06CF  0099               	movwf	25	;volatile
  4443  06D0                     i1l376:
  4444  06D0  0008               	return
  4445  06D1                     __end_of_UART_send_char:
  4446                           
  4447                           	psect	text30
  4448  0621                     __ptext30:	
  4449 ;; *************** function _EEPROM_Write *****************
  4450 ;; Defined at:
  4451 ;;		line 451 in file "BTL_HIHI_main.c"
  4452 ;; Parameters:    Size  Location     Type
  4453 ;;  Address         1    wreg     unsigned char 
  4454 ;;  Data            1    0[COMMON] unsigned char 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  Address         1    1[COMMON] unsigned char 
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  1    wreg      void 
  4459 ;; Registers used:
  4460 ;;		wreg
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4466 ;;      Params:         1       0       0       0       0
  4467 ;;      Locals:         1       0       0       0       0
  4468 ;;      Temps:          0       0       0       0       0
  4469 ;;      Totals:         2       0       0       0       0
  4470 ;;Total ram usage:        2 bytes
  4471 ;; Hardware stack levels used:    1
  4472 ;; This function calls:
  4473 ;;		Nothing
  4474 ;; This function is called by:
  4475 ;;		_IRS
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           
  4480                           ;psect for function _EEPROM_Write
  4481  0621                     _EEPROM_Write:
  4482                           
  4483                           ;incstack = 0
  4484 ;; hardware stack exceeded
  4485                           ; Regs used in _EEPROM_Write: [wreg]
  4486                           ;EEPROM_Write@Address stored from wreg
  4487  0621  00F1               	movwf	EEPROM_Write@Address
  4488  0622                     i1l1836:
  4489  0622                     i1l391:	
  4490                           ;BTL_HIHI_main.c: 454:         ;
  4491                           
  4492                           
  4493                           ;BTL_HIHI_main.c: 453:     while (WR)
  4494  0622  1683               	bsf	3,5	;RP0=1, select bank3
  4495  0623  1703               	bsf	3,6	;RP1=1, select bank3
  4496  0624  188C               	btfsc	12,1	;volsfr
  4497  0625  2E27               	goto	u114_21
  4498  0626  2E28               	goto	u114_20
  4499  0627                     u114_21:
  4500  0627  2E22               	goto	i1l391
  4501  0628                     u114_20:
  4502  0628                     i1l1838:
  4503                           
  4504                           ;BTL_HIHI_main.c: 455:     EEADR = Address;
  4505  0628  0871               	movf	EEPROM_Write@Address,w
  4506  0629  1283               	bcf	3,5	;RP0=0, select bank2
  4507  062A  1703               	bsf	3,6	;RP1=1, select bank2
  4508  062B  008D               	movwf	13	;volatile
  4509                           
  4510                           ;BTL_HIHI_main.c: 456:     EEDATA = Data;
  4511  062C  0870               	movf	EEPROM_Write@Data,w
  4512  062D  008C               	movwf	12	;volatile
  4513  062E                     i1l1840:
  4514                           
  4515                           ;BTL_HIHI_main.c: 457:     EEPGD = 0;
  4516  062E  1683               	bsf	3,5	;RP0=1, select bank3
  4517  062F  1703               	bsf	3,6	;RP1=1, select bank3
  4518  0630  138C               	bcf	12,7	;volsfr
  4519  0631                     i1l1842:
  4520                           
  4521                           ;BTL_HIHI_main.c: 458:     EECON1bits.WREN = 1;
  4522  0631  150C               	bsf	12,2	;volsfr
  4523  0632                     i1l1844:
  4524                           
  4525                           ;BTL_HIHI_main.c: 459:     GIE = 0;
  4526  0632  138B               	bcf	11,7	;volatile
  4527                           
  4528                           ;BTL_HIHI_main.c: 460:     EECON2 = 0x55;
  4529  0633  3055               	movlw	85
  4530  0634  008D               	movwf	13	;volsfr
  4531                           
  4532                           ;BTL_HIHI_main.c: 461:     EECON2 = 0xAA;
  4533  0635  30AA               	movlw	170
  4534  0636  008D               	movwf	13	;volsfr
  4535  0637                     i1l1846:
  4536                           
  4537                           ;BTL_HIHI_main.c: 462:     EECON1bits.WR = 1;
  4538  0637  148C               	bsf	12,1	;volsfr
  4539  0638                     i1l1848:
  4540                           
  4541                           ;BTL_HIHI_main.c: 463:     GIE = 1;
  4542  0638  178B               	bsf	11,7	;volatile
  4543  0639                     i1l1850:
  4544                           
  4545                           ;BTL_HIHI_main.c: 464:     EECON1bits.WREN = 0;
  4546  0639  110C               	bcf	12,2	;volsfr
  4547  063A                     i1l1852:
  4548                           
  4549                           ;BTL_HIHI_main.c: 465:     EECON1bits.WR = 0;
  4550  063A  108C               	bcf	12,1	;volsfr
  4551  063B                     i1l394:
  4552  063B  0008               	return
  4553  063C                     __end_of_EEPROM_Write:
  4554  007E                     btemp	set	126	;btemp
  4555  007E                     wtemp0	set	126
  4556                           
  4557                           	psect	config
  4558                           
  4559                           ;Config register CONFIG @ 0x2007
  4560                           ;	Oscillator Selection bits
  4561                           ;	FOSC = HS, HS oscillator
  4562                           ;	Watchdog Timer Enable bit
  4563                           ;	WDTE = OFF, WDT disabled
  4564                           ;	Power-up Timer Enable bit
  4565                           ;	PWRTE = OFF, PWRT disabled
  4566                           ;	Brown-out Reset Enable bit
  4567                           ;	BOREN = OFF, BOR disabled
  4568                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4569                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4570                           ;	Data EEPROM Memory Code Protection bit
  4571                           ;	CPD = OFF, Data EEPROM code protection off
  4572                           ;	Flash Program Memory Write Enable bits
  4573                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4574                           ;	In-Circuit Debugger Mode bit
  4575                           ;	DEBUG = 0x1, unprogrammed default
  4576                           ;	Flash Program Memory Code Protection bit
  4577                           ;	CP = OFF, Code protection off
  4578  2007                     	org	8199
  4579  2007  3F3A               	dw	16186

Data Sizes:
    Strings     57
    Constant    0
    Data        7
    BSS         11
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     29      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), 

    LCD_Write_String@Str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[16]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _IRS in COMMON

    _IRS->i1_setPWM_DutyCycle
    i1_setPWM_DutyCycle->i1_ADC_Read
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    _main->_LCD_Write
    _setPWM_DutyCycle->_ADC_Read
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write->_LCD_Set_Cursor
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write

Critical Paths under _IRS in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _IRS in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IRS in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IRS in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3757
                                             27 BANK0      2     2      0
                           _ADC_Init
                           _ADC_Read
                        _EEPROM_Read
                    _I2C_Master_Init
                            _IR_Init
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                          _LCD_Write
                   _LCD_Write_String
                         _Servo_Init
                        _config_UART
                           _init_PWM
                   _setPWM_DutyCycle
 ---------------------------------------------------------------------------------
 (1) _setPWM_DutyCycle                                     4     2      2     270
                                             14 BANK0      4     2      2
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_PWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_UART                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Servo_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Write_String                                     3     3      0     322
                                             14 BANK0      3     3      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            9     7      2    2197
                                             18 BANK0      9     7      2
                     _LCD_Set_Cursor
                     _LCD_Write_Char
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              8 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              8 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_Char                                       2     2      0     133
                                             12 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       4     3      1     503
                                             14 BANK0      4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             4     4      0     199
                                             14 BANK0      4     4      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0     133
                                             14 BANK0      1     1      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              2     2      0     133
                                             12 BANK0      2     2      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_4Bit                                       2     2      0      89
                                             10 BANK0      2     2      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (4) _IO_Expander_Write                                    1     1      0      44
                                              9 BANK0      1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      22
                                              8 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IR_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          1     1      0      22
                                              8 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             6     4      2     111
                                              8 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _IRS                                                  8     8      0     605
                                              0 BANK0      8     8      0
                       _EEPROM_Write
                   _UART_send_string
                         i1_ADC_Read
                 i1_setPWM_DutyCycle
 ---------------------------------------------------------------------------------
 (9) i1_setPWM_DutyCycle                                   4     2      2     122
                                              6 COMMON     4     2      2
                         i1_ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (9) i1_ADC_Read                                           6     4      2     111
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (9) _UART_send_string                                     2     2      0     100
                                              1 COMMON     2     2      0
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (10) _UART_send_char                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EEPROM_Write                                         2     1      1     272
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _EEPROM_Read
   _I2C_Master_Init
   _IR_Init
   _LCD_Clear
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Init
     _IO_Expander_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Write
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_Write_4Bit
           _IO_Expander_Write
             _I2C_Master_Start
               _I2C_Master_Wait
             _I2C_Master_Stop
               _I2C_Master_Wait
             _I2C_Master_Write
               _I2C_Master_Wait
     _LCD_Write_Char
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
     ___awdiv
     ___awmod
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _Servo_Init
   _config_UART
   _init_PWM
   _setPWM_DutyCycle
     _ADC_Read (ARG)

 _IRS (ROOT)
   _EEPROM_Write
   _UART_send_string
     _UART_send_char
   i1_ADC_Read
   i1_setPWM_DutyCycle
     i1_ADC_Read (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1D      2C       5       55.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3A      12        0.0%
ABS                  0      0      3A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Jun 08 18:01:21 2022

                          pc 0002                           l40 06AB                           l43 06B7  
                         l52 067A                           l37 06C4                           l61 05C8  
                         l46 06ED                           l54 067E                           l70 058A  
                         l55 067F                           l64 05A9                           l49 06E4  
                         l58 02E3                           l67 0605                           l83 056B  
                         l76 0549                           l98 069C                           _RS 0044  
                         _WR 0C61                 ___awdiv@sign 002E                           fsr 0004  
          ?_setPWM_DutyCycle 002E                  ?i1_ADC_Read 0070                          l352 041D  
                        l360 04FC                          l353 0465                          l337 06DB  
                        l361 051A                          l354 0455                          l370 06F9  
                        l346 034C                          l362 0501                          l363 0506  
                        l364 0520                          l349 06AA                          l367 0655  
                        l633 03B5                          l385 0620                          l388 068E  
                        l646 0410                          _GIE 005F                          _RB1 0031  
                        _RB2 0032                          _RB5 0035                          _RB6 0036  
                        _PS0 0408                          _PR2 0092                          _PS1 0409  
                        _PEN 048A                          _PS2 040A                          _IRS 0147  
                        u800 035F                          u801 035E                          u730 06B1  
                        u810 0370                          u731 06B0                          u811 036F  
                        u740 06B7                          u900 03C8                          _SEN 0488  
                        u741 06B6                          u901 03C7                          u750 067E  
                        u830 0382                          u910 03D3                          u751 067D  
                        u831 0381                          u911 03D2                          _PSA 040B  
                        u825 0374                          u850 0393                          u930 03E5  
                        u851 0392                          u931 03E4                          u940 03EF  
                        u765 05F8                          u845 0383                          u941 03EE  
                        u925 03D7                          u870 03A7                          u790 0354  
                        u775 057D                          u871 03A6                          u855 038F  
                        u791 0353                          u880 03AC                          u960 0402  
                        u881 03AB                          u865 039B                          u961 0401  
                        u945 03EB                          _RX9 00C6                          u970 0407  
                        u890 03BD                          u971 0406                          u955 03F6  
                        u891 03BC                          u980 0549                          u981 0548  
                        u990 041A                          u991 0419                          _TX9 04C6  
                        _pos 007D                          fsr0 0004           ??_setPWM_DutyCycle 0030  
               ___awmod@sign 002E              __end_of_LCD_CMD 0606                         ?_IRS 0070  
        LCD_Write_String@Str 0030               _LCD_Set_Cursor 054A                         l2110 050F  
                       l2112 0566                         l1600 034D                         l1610 035F  
                       l1602 0350                         l1700 0260                         l1620 0373  
                       l1612 0364                         l1604 0354                         l1550 06B1  
                       l1710 02A7                         l1702 0271                         l1630 0399  
                       l1622 037A                         l1614 0368                         l1606 0359  
                       l1552 06E5                         l1560 0671                         l1712 02AD  
                       l1704 0277                         l1640 03B1                         l1632 039A  
                       l1624 037E                         l1616 036A                         l1608 035B  
                       l1800 02E7                         l1720 0527                         l1554 06EA  
                       l1562 0676                         l1570 0599                         l1714 02C1  
                       l1706 0288                         l1634 03A1                         l1626 0382  
                       l1618 0370                         l1650 03C2                         l1810 0311  
                       l1802 02EC                         l1722 0534                         l1730 06D1  
                       l1732 069D                         l1548 06AB                         l1556 06DC  
                       l1564 05AD                         l1572 05EB                         l1716 02CF  
                       l1708 0293                         l1580 0571                         l1628 0393  
                       l1636 03A7                         l1660 03D6                         l1652 03C4  
                       l1644 03B6                         l1820 0339                         l1812 0319  
                       l1724 053C                         l1900 007E                         l1558 06E1  
                       l1566 058E                         l1574 05EC                         l1726 068F  
                       l1582 054D                         l1638 03AC                         l1670 03F5  
                       l1662 03DD                         l1654 03C8                         l1646 03B9  
                       l1822 033C                         l1814 031D                         l1806 02F0  
                       l1718 0524                         l1750 060B                         l1734 04F4  
                       l1910 0097                         l1902 0083                         l1744 06F4  
                       l1568 0592                         l1576 05F3                         l1728 0695  
                       l1584 054E                         l1672 03FC                         l1664 03E1  
                       l1656 03CD                         l1648 03BD                         l1824 0342  
                       l1816 0333                         l1808 0307                         l1760 0614  
                       l1752 060C                         l1736 050A                         l1920 00A2  
                       l1912 009A                         l1904 0088                         l1690 06C3  
                       l1682 06B8                         l1586 0556                         l1578 056F  
                       l1666 03E5                         l1658 03D3                         l1674 0402  
                       l1826 0346                         l1770 061D                         l1762 0617  
                       l1754 060F                         l1746 0606                         l1738 051C  
                       l1930 00B5                         l1922 00A3                         l1914 009B  
                       l1906 008D                         l1780 0414                         l1772 0683  
                       l1684 06BC                         l1692 023A                         l1588 055E  
                       l1676 0407                         l1668 03EF                         l1764 061A  
                       l1756 0612                         l1748 0609                         l1940 00ED  
                       l1932 00C0                         l1924 00A4                         l1916 009E  
                       l1908 0092                         l1790 0452                         l1782 041A  
                       l1774 0687                         l1686 06BF                         l1694 023E  
                       l1678 040C                         l1766 061B                         l1758 0613  
                       l1950 0122                         l1942 00F2                         l1934 00CB  
                       l1926 00A7                         l1918 009F                         l1792 0459  
                       l1776 068A                         l1688 06C2                         l1696 0244  
                       l1768 061C                         l1952 0132                         l1944 00FC  
                       l1936 00D5                         l1928 00AA                         l1786 0427  
                       l1698 0255                         l1946 0102                         l1954 0135  
                       l1938 00E6                         l1890 004E                         l1788 044B  
                       l1796 063C                         l1956 013A                         l1948 0112  
                       l1892 0059                         l1798 0649                         l1958 013F  
                       l1894 0063                         l1896 0069                         l1898 0073  
                       _ADFM 04FF                         _ADON 00F8                         _CHS0 00FB  
                       _CHS1 00FC                         _CHS2 00FD                         STR_1 04BB  
                       STR_2 04CC                         STR_3 04DD                         STR_4 04ED  
                       _BRGH 04C2                         _T0IE 005D                         u1000 0424  
                       _T0IF 005A                         _CREN 00C4                         u1001 0420  
                       _T0CS 040D                         u1030 0436                         u1014 0427  
                       u1110 0338                         u1031 0432                         u1111 0337  
                       u1120 034C                         u1104 0648                         u1025 042A  
                       u1121 034B                         u1060 0448                         u1044 0439  
                       u1300 013A                         u1061 0444                         u1301 0139  
                       u1055 043C                         u1080 0459                         u1081 0458  
                       u1074 044B                         u1090 0645                         u1091 0641  
                       u1270 00D2                         u1271 00CE                         u1290 00ED  
                       u1507 02A1                         u1291 00EC                         u1284 00D5  
                       u1517 02B5                         u1527 02C9                         u1537 02DD  
                       u1457 024A                         u1547 0699                         u1467 025B  
                       u1557 05A6                         u1477 026C                         u1567 044F  
                       u1487 027D                         u1497 028E                         _PEIE 005E  
                       _INTE 005C                         _INTF 0059                         _RCIE 0465  
                       _RCIF 0065                         _TMR0 0001                         _SPEN 00C7  
                       _TRMT 04C1                         _TXEN 04C5                         _SYNC 04C4  
            __end_of_IR_Init 06FA            ?_LCD_Write_String 0070                         _main 004E  
         __size_of_LCD_Clear 000E                         btemp 007E             __end_of_ADC_Init 06AB  
           __end_of_ADC_Read 0466                         start 0012           ??_LCD_Write_String 002E  
         __size_of_LCD_Write 0069         LCD_Write_4Bit@Nibble 002B                        ??_IRS 0020  
  __size_of_UART_send_string 001F         __end_of_EEPROM_Write 063C             __end_of_LCD_Init 02E4  
           ?_I2C_Master_Init 0070             ?_I2C_Master_Wait 0070             ?_I2C_Master_Stop 0070  
__size_ofi1_setPWM_DutyCycle 0018                        _ADCS0 00FE                        _ADCS1 00FF  
                      _ADCS2 04FE                        ?_main 0070                        _CCP1X 00BD  
                      _CCP1Y 00BC              __end_of___awdiv 03B6                        _EEADR 010D  
            __end_of___awmod 0411                        _EEPGD 0C67              ___awdiv@divisor 0028  
                      _PCFG0 04F8                        _PCFG1 04F9                        _PCFG2 04FA  
                      _PCFG3 04FB                        i1l334 022C                        i1l352 0470  
                      i1l353 04B4                        i1l354 04A6                        i1l373 06C6  
                      i1l382 05E7                        i1l391 0622                        i1l367 066D  
                      i1l376 06D0                        i1l394 063B              ___awdiv@counter 002D  
                      _RCREG 001A                        _SPBRG 0099                        _SSPIF 0063  
                      u78_20 06CC                        u78_21 06CB                        _TXREG 0019  
     __end_of_LCD_Set_Cursor 056C                  LCD_Write@y_ 0039                        pclath 000A  
                      status 0003                        wtemp0 007E             EEPROM_Write@Data 0070  
        __size_ofi1_ADC_Read 004F         __size_of_EEPROM_Read 000F               _LCD_Write_4Bit 058B  
             _LCD_Write_Char 056C              __initialization 0015                 __end_of_main 0147  
          _IO_Expander_Write 05AA           ?_IO_Expander_Write 0070                       ??_main 003B  
          __end_of_LCD_Clear 069D                    ??_LCD_CMD 002C            __end_of_LCD_Write 034D  
          ?_I2C_Master_Start 0070            ?_I2C_Master_Write 0070          ??_IO_Expander_Write 0029  
            ?_LCD_Set_Cursor 002E                    ??_IR_Init 0028           ??_I2C_Master_Start 0028  
         ??_I2C_Master_Write 0028                       _CCP1M2 00BA                       _CCP1M3 00BB  
                     _ADRESH 001E                       _ADRESL 009E                       _EEDATA 010C  
                     _CCPR1L 0015                       _EECON2 018D             ___awdiv@dividend 002A  
                     i1l2000 01A0                       i1l2010 01B4                       i1l2002 01A1  
                     i1l2012 01B5                       i1l2020 01C9                       i1l2004 01A5  
                     i1l2030 01E3                       i1l2022 01CF                       i1l2014 01B9  
                     i1l2006 01A9                       i1l2040 01F2                       i1l2024 01D4  
                     i1l2016 01C3                       i1l2008 01AF                       i1l2050 0216  
                     i1l2042 01F6                       i1l2026 01D5                       i1l2034 01E6  
                     i1l2018 01C4                       i1l2052 0217                       i1l2044 0200  
                     i1l2036 01EC                       i1l2028 01D9                       i1l2054 0226  
                     i1l2046 0203                       i1l2038 01F1                       i1l2056 022A  
                     i1l2048 0212                       i1l2058 022B                       u120_24 048C  
                     u113_20 05E7                       u113_21 05E6                       u121_25 048F  
                     i1l1830 05CB                       i1l1840 062E                       u114_20 0628  
                     i1l1832 05D7                       u122_20 049B                       u114_21 0627  
                     u122_21 0497                       i1l1850 0639                       i1l1842 0631  
                     i1l1834 05DB                       i1l1852 063A                       i1l1844 0632  
                     i1l1836 0622                       i1l1596 06C6                       i1l1828 05CA  
                     i1l1860 047A                       i1l1846 0637                       i1l1838 0628  
                     i1l1598 06CC                       i1l1862 049E                       i1l1854 0467  
                     i1l1870 0656                       i1l1848 0638                       i1l1864 04A3  
                     i1l1856 046D                       u115_20 046D                       i1l1872 0661  
                     u131_20 014B                       i1l1960 0147                       u115_21 046C  
                     u131_21 014A                       i1l1866 04AA                       i1l1970 015C  
                     i1l1962 014B                       u123_24 049E                       i1l1980 017D  
                     i1l1972 015F                       i1l1964 014D                       i1l1990 018A  
                     i1l1982 017F                       i1l1974 0161                       i1l1966 0151  
                     u124_20 04AA                       u116_20 0477                       u140_20 01B4  
                     i1l1992 018B                       i1l1976 0175                       i1l1984 0180  
                     i1l1968 0157                       u132_20 0157                       u124_21 04A9  
                     u116_21 0473                       u140_21 01B3                       u132_21 0156  
                     i1l1994 0193                       i1l1978 017A                       i1l1986 0181  
                     i1l1996 0196                       i1l1988 0185                       i1l1998 019C  
                     u125_20 065D                       u141_20 01CF                       u133_20 015C  
                     u125_21 0659                       u141_21 01CE                       u133_21 015B  
                     u117_24 047A                       u142_20 01D4                       u134_20 0175  
                     u142_21 01D3                       u134_21 0174                       _INTEDG 040E  
                     u126_24 0660                       u118_25 047D                       u134_25 0171  
                     u119_20 0489                       u143_20 01EC                       u135_20 017A  
                     u119_21 0485                       u143_21 01EB                       u135_21 0179  
                     u144_20 01F1                       u136_20 0185                       u144_21 01F0  
                     u136_21 0184                       u137_20 018A                       u137_21 0189  
                     u138_20 01A5                       u138_21 01A4                       u139_20 01AF  
                     u139_21 01AE                       u157_27 04A0                       _TMR2ON 0092  
                     _SSPADD 0093                       _TRISA0 0428                       _TRISB0 0430  
                     _TRISB1 0431                       _TRISB2 0432                       _TRISC2 043A  
                     _TRISC3 043B                       _TRISB5 0435                       _TRISC4 043C  
                     _TRISB6 0436                       _TRISC6 043E                       _TRISC7 043F  
                     _SSPCON 0014                       _SSPBUF 0013       __end_of_LCD_Write_4Bit 05AA  
                     _B_rate 0045       __end_of_LCD_Write_Char 058B         __size_of_config_UART 001B  
  __end_of_IO_Expander_Write 05C9                    ??___awdiv 002C                    ??___awmod 002C  
           __end_of_init_PWM 0521                   _Servo_Init 06D1             ___awdiv@quotient 002F  
            ___awmod@divisor 0028                       _result 007A              ___awmod@counter 002D  
               __pdataCOMMON 007D                    ?_ADC_Init 0070                    ?_ADC_Read 0028  
                     saved_w 007E      __end_of__initialization 004A                    ?_LCD_Init 0070  
            ?_LCD_Write_4Bit 0070              ?_LCD_Write_Char 0070        __size_of_EEPROM_Write 001B  
             __pcstackCOMMON 0070                 __pidataBANK0 06EE             _UART_send_string 05C9  
               ??i1_ADC_Read 0072                   ??_ADC_Init 0028                   ??_ADC_Read 002A  
               _EEPROM_Write 0621                   __pbssBANK0 003D    __size_of_setPWM_DutyCycle 001A  
                 ??_LCD_Init 002E           __end_ofi1_ADC_Read 04B5   __size_of_IO_Expander_Write 001F  
                 __pmaintext 004E          ADC_Read@ADC_channel 002D                   __pintentry 0004  
                ?_Servo_Init 0070                      _ACKSTAT 048E    __size_of_LCD_Write_String 0029  
                 _flag_trans 0042                      _T2CKPS0 0090                      _T2CKPS1 0091  
                    _LCD_CMD 05E8                      _GO_DONE 00FA                  _SelectServo 007C  
    __size_of_UART_send_char 000C                      _IR_Init 06F4                      _SSPCON2 0091  
                    _SSPSTAT 0094                   __stringtab 04B5                    ?_init_PWM 0070  
                    _i2c_add 004B   __end_ofi1_setPWM_DutyCycle 066E                      ___awdiv 034D  
                    ___awmod 03B6            LCD_Write@count_sp 003A                      _flag_dc 0047  
           ??_LCD_Set_Cursor 002F                      __ptext1 063C                      __ptext2 04F4  
                    __ptext3 0606                      __ptext4 06D1                      __ptext5 0521  
                    __ptext6 02E4                      __ptext7 03B6                      __ptext8 034D  
                    __ptext9 056C                      _cnt_pos 007B                 __size_of_IRS 00F0  
           ___awmod@dividend 002A     __size_of_I2C_Master_Init 000D     __size_of_I2C_Master_Wait 000D  
   __size_of_I2C_Master_Stop 0009                    _LCD_Clear 068F                    _LCD_Write 02E4  
       end_of_initialization 004A          __size_of_Servo_Init 000B                   ??_init_PWM 0028  
              ??_EEPROM_Read 0028    __size_of_I2C_Master_Start 0009    __size_of_I2C_Master_Write 0012  
                 LCD_CMD@CMD 002D         i1setPWM_DutyCycle@DC 0076                   ?_LCD_Clear 0070  
          __size_of_ADC_Init 000E            __size_of_ADC_Read 0055             ??_LCD_Write_4Bit 002A  
                 ?_LCD_Write 0032     __end_of_UART_send_string 05E8            LCD_Write_String@i 002E  
           ??_LCD_Write_Char 002C             _setPWM_DutyCycle 063C                ??_config_UART 0028  
          __size_of_LCD_Init 00AD          __end_of_EEPROM_Read 068F             _LCD_Write_String 0521  
              __pidataCOMMON 06FA                   LCD_Write@c 0038                   LCD_Write@i 0037  
                 LCD_Write@x 0032                   LCD_Write@y 0033          start_initialization 0015  
             _UART_send_char 06C5                  __end_of_IRS 0237            ??_I2C_Master_Init 0028  
          ??_I2C_Master_Wait 0028            ??_I2C_Master_Stop 0028                    _OpenServo 0049  
        __end_of_config_UART 0621                 ??_Servo_Init 0028                  __pdataBANK0 0045  
             ADC_Read@result 002B                     ?_LCD_CMD 0070       __end_of_UART_send_char 06D1  
                __pbssCOMMON 007A                    ___latbits 0002                __pcstackBANK0 0020  
                ??_LCD_Clear 002E                     ?_IR_Init 0070                  ??_LCD_Write 0034  
         __end_of_Servo_Init 06DC                  _EEPROM_Read 0680                    __pnvBANK0 004B  
           _I2C_Master_Start 06E5            __size_of_init_PWM 002D             _I2C_Master_Write 066E  
      IO_Expander_Write@Data 0029                     ?___awdiv 0028                     ?___awmod 0028  
           UART_send_char@bt 0070         I2C_Master_Write@data 0028                    __pstrings 04B5  
            ?_UART_send_char 0070                     _ADC_Init 069D                     _ADC_Read 0411  
                  _count_sp1 0041                    _count_sp2 0040                    _count_sp3 003F  
         i1_setPWM_DutyCycle 0656          ?i1_setPWM_DutyCycle 0076                     _LCD_SWAP 0048  
          interrupt_function 0004                     _LCD_Init 0237                  _config_UART 0606  
       ??i1_setPWM_DutyCycle 0078     __end_of_setPWM_DutyCycle 0656                  __stringbase 04BA  
      UART_send_string@st_pt 0072             __size_of_LCD_CMD 001E           setPWM_DutyCycle@DC 002E  
           __size_of_IR_Init 0006            ?_UART_send_string 0070     __end_of_LCD_Write_String 054A  
         ??_UART_send_string 0071                   _EECON1bits 018C        i1ADC_Read@ADC_channel 0075  
           __size_of___awdiv 0069             __size_of___awmod 005B           __end_of__stringtab 04BB  
            _I2C_Master_Init 06B8              _I2C_Master_Wait 06AB              _I2C_Master_Stop 06DC  
                   __ptext10 054A                     __ptext11 0237                     __ptext20 06F4  
                   __ptext12 068F                     __ptext21 06B8                     __ptext13 05E8  
                   __ptext30 0621                     __ptext22 0680                     __ptext14 058B  
                   __ptext23 0411                     __ptext15 05AA                     __ptext24 069D  
                   __ptext16 066E                     __ptext25 0147                     __ptext17 06DC  
                   __ptext26 0656                     __ptext18 06E5                     __ptext27 0466  
                   __ptext19 06AB                     __ptext28 05C9                     __ptext29 06C5  
                   _flag_tmp 0043                ?_EEPROM_Write 0070      __size_of_LCD_Set_Cursor 0022  
                   _init_PWM 04F4              _BackLight_State 004A                __size_of_main 00F9  
                 i1_ADC_Read 0466     __end_of_I2C_Master_Start 06EE     __end_of_I2C_Master_Write 0680  
         EEPROM_Read@Address 0028           LCD_Write_Char@Data 002D               ??_EEPROM_Write 0071  
           i1ADC_Read@result 0073                     intlevel1 0000                 ?_EEPROM_Read 0070  
                  stringcode 04B5      __size_of_LCD_Write_4Bit 001F      __size_of_LCD_Write_Char 001F  
           ??_UART_send_char 0070      __end_of_I2C_Master_Init 06C5      __end_of_I2C_Master_Wait 06B8  
    __end_of_I2C_Master_Stop 06E5              LCD_Init@I2C_Add 0031          EEPROM_Write@Address 0071  
                   stringdir 04B5                     stringtab 04B5            LCD_Set_Cursor@COL 002E  
          LCD_Set_Cursor@ROW 0031               _cnt_time_delay 003D                 ?_config_UART 0070  
